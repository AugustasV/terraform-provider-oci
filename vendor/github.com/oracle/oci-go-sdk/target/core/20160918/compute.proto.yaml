paths:
  /images:
    get:
      description: |
        Lists the available images in the specified compartment.
        If you specify a value for the `sortBy` parameter, Oracle-provided images appear first in the list, followed by custom images.
        For more
        information about images, see
        [Managing Custom Images](/Content/Compute/Tasks/managingcustomimages.htm).
      operationId: ListImages
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/OperatingSystemQueryParam'
      - $ref: '#/parameters/OperatingSystemVersionQueryParam'
      - $ref: '#/parameters/ShapeNameQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - name: lifecycleState
        in: query
        required: false
        type: string
        x-obmcs-enumref: "#/definitions/Image/lifecycleState"
        description: |
          A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/Image'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListImages
      tags:
      - compute
    post:
      description: |
        Creates a boot disk image for the specified instance or imports an exported image from the Oracle Cloud Infrastructure Object Storage service.

        When creating a new image, you must provide the OCID of the instance you want to use as the basis for the image, and
        the OCID of the compartment containing that instance. For more information about images,
        see [Managing Custom Images](/Content/Compute/Tasks/managingcustomimages.htm).

        When importing an exported image from Object Storage, you specify the source information
        in [ImageSourceDetails](#/en/iaas/latest/requests/ImageSourceDetails).

        When importing an image based on the namespace, bucket name, and object name,
        use [ImageSourceViaObjectStorageTupleDetails](#/en/iaas/latest/requests/ImageSourceViaObjectStorageTupleDetails).

        When importing an image based on the Object Storage URL, use
        [ImageSourceViaObjectStorageUriDetails](#/en/iaas/latest/requests/ImageSourceViaObjectStorageUriDetails).
        See [Object Storage URLs](/Content/Compute/Tasks/imageimportexport.htm#URLs) and [pre-authenticated requests](/Content/Object/Tasks/managingaccess.htm#pre-auth)
        for constructing URLs for image import/export.

        For more information about importing exported images, see
        [Image Import/Export](/Content/Compute/Tasks/imageimportexport.htm).

        You may optionally specify a *display name* for the image, which is simply a friendly name or description.
        It does not have to be unique, and you can change it. See [UpdateImage](#/en/iaas/20160918/Image/UpdateImage).
        Avoid entering confidential information.
      operationId: CreateImage
      parameters:
        - $ref: '#/parameters/RetryTokenHeader'
        - name: CreateImageDetails
          description: Image creation details
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateImageDetails'
      x-example: |
        Example 1 request: Create new image for specified instance.
        POST /20160918/images
        {
          "instanceId": "ocid1.instance.oc1.phx.abyhqljrqyriphyccj75yut36ybxmlfgawtl7m77vqanhg6w4bdszaitd3da",
          "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
          "displayName": "MyCustomImage"
        }

        Example 2 request: Import image using the namespace, bucket name, and object name.
        POST /20160918/images
        {
          "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
          "imageSourceDetails": {
              "objectName": "image-to-import.qcow2",
              "bucketName": "MyBucket",
              "namespaceName": "MyNamespace",
              "sourceType": "objectStorageTuple"
          }
        }

        Example 3 request: Import image using the Object Storage URL.
        POST /20160918/images
        {
          "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
          "displayName": "MyImportedImage",
          "imageSourceDetails": {
              "sourceUri": "https://objectstorage.us-phoenix-1.oraclecloud.com/n/MyNamespace/b/MyBucket/o/image-to-import.qcow2",
              "sourceType": "objectStorageUri"
            }
        }
      responses:
        200:
          description: The image is being created.
          schema:
            $ref: '#/definitions/Image'
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          examples:
            application-json: |
              Example 1 response: Create new image for specified instance.
              {
                "baseImageId": "ocid1.image.oc1.phx.aaaaaaaasx242pybtwuqgsvmcxrnu53bu6sdamv2ehtqvuvivmvmo6cizavq",
                "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "createImageAllowed": true,
                "displayName": "MyCustomImage",
                "id": "ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq",
                "lifecycleState": "PROVISIONING",
                "timeCreated": "2016-10-03T17:04:47.627Z"
              }

              Examples 2 and 3 response: Import exported image.
              {
                "baseImageId": null,
                "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "createImageAllowed": true,
                "displayName": "MyCustomImage",
                "id": "ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq",
                "lifecycleState": "IMPORTING",
                "timeCreated": "2016-10-03T17:04:47.627Z"
              }
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateImage
      tags:
        - compute
  /images/{imageId}:
    get:
      description: Gets the specified image.
      operationId: GetImage
      parameters:
        - $ref: '#/parameters/ImageIdPathParam'
      responses:
        200:
          description: The image was retrieved.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/Image'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetImage
      tags:
        - compute
    put:
      description: Updates the display name of the image. Avoid entering confidential information.
      operationId: UpdateImage
      parameters:
        - $ref: '#/parameters/ImageIdPathParam'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/IfMatchHeader'
        - description: Updates the image display name field. Avoid entering confidential information.
          in: body
          name: UpdateImageDetails
          required: true
          schema:
            $ref: '#/definitions/UpdateImageDetails'
      x-example: |
        PUT /20160918/images/ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq
        {
          "displayName": "MyFavoriteImage"
        }
      responses:
        200:
          description: The image name was updated.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/Image'
          examples:
            application-json: |
              {
                "baseImageId": null,
                "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "createImageAllowed": true,
                "displayName": "MyFavoriteImage",
                "id": "ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq",
                "lifecycleState": "AVAILABLE",
                "timeCreated": "2016-10-03T17:04:47.627Z"
              }
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateImage
      tags:
        - compute
    delete:
      description: Deletes an image.
      operationId: DeleteImage
      parameters:
        - $ref: '#/parameters/ImageIdPathParam'
        - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The image is being deleted.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteImage
      tags:
        - compute
  /images/{imageId}/actions/export:
    post:
      description: |
        Exports the specified image to the Oracle Cloud Infrastructure Object Storage service. You can use the Object Storage URL,
        or the namespace, bucket name, and object name when specifying the location to export to.

        For more information about exporting images, see [Image Import/Export](/Content/Compute/Tasks/imageimportexport.htm).

        To perform an image export, you need write access to the Object Storage bucket for the image,
        see [Let Users Write Objects to Object Storage Buckets](/Content/Identity/Concepts/commonpolicies.htm#Let4).

        See [Object Storage URLs](/Content/Compute/Tasks/imageimportexport.htm#URLs) and [pre-authenticated requests](/Content/Object/Tasks/managingaccess.htm#pre-auth)
        for constructing URLs for image import/export.
      operationId: ExportImage
      parameters:
        - $ref: '#/parameters/ImageIdPathParam'
        - $ref: '#/parameters/RetryTokenHeader'
        - $ref: '#/parameters/IfMatchHeader'
        - description: Details for the image export.
          in: body
          name: ExportImageDetails
          required: true
          schema:
            $ref: '#/definitions/ExportImageDetails'
      x-example: |
        Example 1 request: Export image using the namespace, bucket name, and object name.
        POST /20160918/images/ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq/actions/export
        {
          "objectName": "exported-image.qcow2",
          "bucketName": "MyBucket",
          "namespaceName": "MyNamespace",
          "destinationType": "objectStorageTuple"
        }

        Example 2 request: Export image using the Object Storage URL.
        POST /20160918/images/ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq/actions/export
        {
          "destinationUri": "https://objectstorage.us-phoenix-1.oraclecloud.com/n/MyNamespace/b/MyBucket/o/exported-image.qcow2",
          "destinationType": "objectStorageUri"
        }
      responses:
        200:
          description: The export is being performed.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/Image'
          examples:
            application-json: |
              {
                "baseImageId": null,
                "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "createImageAllowed": true,
                "displayName": "MyCustomImage",
                "id": "ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq",
                "lifecycleState": "EXPORTING",
                "timeCreated": "2016-10-03T17:04:47.627Z"
              }
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ExportImage
      tags:
        - compute
  /images/{imageId}/shapes/{shapeName}:
    put:
      x-obmcs-preview-only: true
      description: Adds a shape to the compatible shapes list for the image.
      operationId: AddImageShapeCompatibilityEntry
      parameters:
        - $ref: '#/parameters/ImageIdPathParam'
        - $ref: '#/parameters/ShapeNamePathParam'
      responses:
        200:
          description: The shape has been added to the compatible shapes list.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/ImageShapeCompatibilityEntry'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: AddImageShapeCompatibilityEntry
      tags:
        - compute
    delete:
      x-obmcs-preview-only: true
      description: Removes a shape from the compatible shapes list for the image.
      operationId: RemoveImageShapeCompatibilityEntry
      parameters:
        - $ref: '#/parameters/ImageIdPathParam'
        - $ref: '#/parameters/ShapeNamePathParam'
      responses:
        204:
          description: The shape has been removed from the compatible shapes list.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: RemoveImageShapeCompatibilityEntry
      tags:
        - compute
  /instanceConsoleConnections:
    get:
      description: |
        Lists the console connections for the specified compartment or instance.

        For more information about console access, see [Accessing the Instance Console](/Content/Compute/References/serialconsole.htm).
      operationId: ListInstanceConsoleConnections
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/InstanceIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      x-example: |
        GET /20160918/instanceConsoleConnections?compartmentId=ocid1.compartment.oc1..aaaaaaaarmxxpoknfudl5odjs2samplecveuzzgzry6u2fjuqgw66cdacm2dq
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/InstanceConsoleConnection'
            type: array
          examples:
            application-json: |
              [
                {
                    "compartmentId": "ocid1.compartment.oc1..aaaaaaaarmxxpoknfudl5odjs2samplecveuzzgzry6u2fjuqgw66cdacm2dq",
                    "connectionString": "ssh -o ProxyCommand='ssh -W %h:%p -p 443 ocid1.instanceconsoleconnection.oc1.iad.abyhqljrqyriphycjo2stam6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da@instance-console.us-ashburn-1.oraclecloud.com' ocid1.instance.oc1.iad.aaaaaaaa75r7njv2xtldljo2sampleskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq",
                    "fingerprint": "4a:46:c1:72:14:de:9f:a8:fe:89:a9:6c:6c:63:77:83",
                    "id": "ocid1.instanceconsoleconnection.oc1.iad.abyhqljrqyriphycjo2stam6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da",
                    "instanceId": "ocid1.instance.oc1.iad.aaaaaaaa75r7njv2xtldljo2sampleskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq",
                    "lifecycleState": "ACTIVE",
                }
                {
                    "compartmentId": "ocid1.compartment.oc1..aaaaaaaarmxxpoknfudl5odjs2samplecveuzzgzry6u2fjuqgw66cdacm2dq",
                    "connectionString": "ssh -o ProxyCommand='ssh -W %h:%p -p 443 ocid1.instanceconsoleconnection.oc1.iad.abuwcljtrhq56odqlarjo2samplelflwcabrjpcfoiwcqu3uraqbjv3yu53q@instance-console.us-ashburn-1.oraclecloud.com' ocid1.instance.oc1.iad.abuwcljtt5nmttyrqw73hw6c2jo2sampleoapfzs3moucqjduvafihse3wa55jvu7a",
                    "fingerprint": "4a:46:c1:72:14:de:9f:a8:fe:89:a9:6c:6c:63:77:83",
                    "id": "ocid1.instanceconsoleconnection.oc1.iad.abuwcljtrhq56odqlarjo2samplelflwcabrjpcfoiwcqu3uraqbjv3yu53q",
                    "instanceId": "ocid1.instance.oc1.iad.abuwcljtt5nmttyrqw73hw6c2jo2sampleoapfzs3moucqjduvafihse3wa55jvu7a",
                    "lifecycleState": "DELETED",
                }
              ]
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListInstanceConsoleConnections
      tags:
      - compute
    post:
      description: |
         Creates a new console connection to the specified instance.
         Once the console connection has been created and is available,
         you connect to the console using SSH.

         For more information about console access, see [Accessing the Console](/Content/Compute/References/serialconsole.htm).
      operationId: CreateInstanceConsoleConnection
      parameters:
      - description: Request object for creating an InstanceConsoleConnection
        name: CreateInstanceConsoleConnectionDetails
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreateInstanceConsoleConnectionDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      x-example: |
        POST /20160918/instanceConsoleConnections
        {
          "instanceId":"ocid1.instance.oc1.phx.abyhqljrqyriphycjo75stam6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da",
          "publicKey":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCZ06fccNTQfq+xubFlJ5ZR3kt+uzspdH9tXL+lAejSM1NXM+CFZev7MIxfEjas06y80ZBZ7DUTQO0GsampleVorF8M4xuLwrmzRtkoZzU16umt4y1W0Q4ifdp3IiiU0U8/WxczSXcUVZOLqkz5dc6oMHdMVpkimietWzGZ4LBBsH/LjEVY7E0V+a0sNchlVDIZcm7ErReBLcdTGDq0uLBiuChyl6RUkX1PNhusquTGwK7zc8OBXkRuubn5UKXhI3Ul9Nyk4XESkVWIGNKmw8mSpoJSjR8P9ZjRmcZVo8S+x4KVPMZKQEor== smith@company.com 8GnoV/6Ox6TNoh9BiifqGKC9VGYuC89RvUajRBTZSK2TK4DPfaT+2R+slPsFrwiT/oPEhhEK1S5Q== rsa-key-20160227"
        }
      responses:
        200:
          description: 'The instance console connection is being configured.'
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/InstanceConsoleConnection'
          examples:
            application-json: |
              {
                "compartmentId": "ocid1.compartment.oc1..aaaaaaaarmxxpoknfudl5odjs2samplecveuzzgzry6u2fjuqgw66cdacm2dq",
                "connectionString": "ssh -o ProxyCommand='ssh -W %h:%p -p 443 ocid1.instanceconsoleconnection.oc1.iad.abuwcljtllmj26i65ggjs2samplezn43r7d5zkuzj3pfjv2dcervi77p4va@instance-console.us-ashburn-1.oraclecloud.com' ocid1.instance.oc1.iad.abyhqljrqyriphycjo75stam6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da",
                "fingerprint": "4a:46:c1:72:14:de:9f:a8:fe:89:a9:6c:6c:63:77:83",
                "id": "ocid1.instanceconsoleconnection.oc1.iad.abuwcljtllmj26i65ggjs2samplezn43r7d5zkuzj3pfjv2dcervi77p4va",
                "instanceId": "ocid1.instance.oc1.iad.abyhqljrqyriphycjo75stam6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da",
                "lifecycleState": "CREATING",
              }
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateInstanceConsoleConnection
      tags:
      - compute
  /instanceConsoleConnections/{instanceConsoleConnectionId}:
    delete:
      description: Deletes the specified instance console connection.
      operationId: DeleteInstanceConsoleConnection
      parameters:
      - $ref: '#/parameters/InstanceConsoleConnectionIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      x-example: |
        DELETE /20160918/instanceConsoleConnections/ocid1.instanceconsoleconnection.iad.abyhqljrqyriphycjo2sample6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da
      responses:
        204:
          description: The instance console connection is being deleted.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteInstanceConsoleConnection
      tags:
      - compute
    get:
      description: Gets the specified instance console connection's information.
      operationId: GetInstanceConsoleConnection
      parameters:
      - $ref: '#/parameters/InstanceConsoleConnectionIdPathParam'
      x-example: |
        GET /20160918/instanceConsoleConnections/ocid1.instanceconsoleconnection.iad.abyhqljrqyriphycjo2sample6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da
      responses:
        '200':
          description: The instance console connection was retrieved.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/InstanceConsoleConnection'
          examples:
            application-json: |
              {
                "compartmentId": "ocid1.compartment.oc1..aaaaaaaarmxxpoknfudl5odjs2samplecveuzzgzry6u2fjuqgw66cdacm2dq",
                "connectionString": "ssh -o ProxyCommand='ssh -W %h:%p -p 443 ocid1.instanceconsoleconnection.oc1.iad.abuwcljtllmj26i65ggjs2samplezn43r7d5zkuzj3pfjv2dcervi77p4va@instance-console.us-ashburn-1.oraclecloud.com' ocid1.instance.oc1.iad.abuwcljtt5nmtjs2sampleom6oapfzs3moucqjduvafihse3wa55jvu7a",
                "fingerprint": "4a:46:c1:72:45:de:9f:a8:fe:89:a9:6c:6c:63:77:25",
                "id": "ocid1.instanceconsoleconnection.oc1.iad.abuwcljtllmj26i65ggjs2samplezn43r7d5zkuzj3pfjv2dcervi77p4va",
                "instanceId": "ocid1.instance.oc1.iad.abuwcljtt5nmtjs2sampleom6oapfzs3moucqjduvafihse3wa55jvu7a",
                "lifecycleState": "ACTIVE",
              }
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetInstanceConsoleConnection
      tags:
      - compute
  /instanceConsoleHistories/:
    get:
      description: |
        Lists the console history metadata for the specified compartment or instance.
      operationId: ListConsoleHistories
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/InstanceIdQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - name: lifecycleState
        in: query
        required: false
        type: string
        x-obmcs-enumref: "#/definitions/ConsoleHistory/lifecycleState"
        description: |
          A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
      responses:
        200:
          description: The metadata is being retrieved.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/ConsoleHistory'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListConsoleHistories
      tags:
      - compute
    post:
      description: |
        Captures the most recent serial console data (up to a megabyte) for the
        specified instance.

        The `CaptureConsoleHistory` operation works with the other console history operations
        as described below.

        1. Use `CaptureConsoleHistory` to request the capture of up to a megabyte of the
        most recent console history. This call returns a `ConsoleHistory`
        object. The object will have a state of REQUESTED.
        2. Wait for the capture operation to succeed by polling `GetConsoleHistory` with
        the identifier of the console history metadata. The state of the
        `ConsoleHistory` object will go from REQUESTED to GETTING-HISTORY and
        then SUCCEEDED (or FAILED).
        3. Use `GetConsoleHistoryContent` to get the actual console history data (not the
        metadata).
        4. Optionally, use `DeleteConsoleHistory` to delete the console history metadata
        and the console history data.
      operationId: CaptureConsoleHistory
      parameters:
      - $ref: '#/parameters/RetryTokenHeader'
      - description: Console history details
        in: body
        name: CaptureConsoleHistoryDetails
        required: true
        schema:
          $ref: '#/definitions/CaptureConsoleHistoryDetails'
      responses:
        200:
          description: The console history is being captured.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/ConsoleHistory'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CaptureConsoleHistory
      tags:
      - compute
  /instanceConsoleHistories/{instanceConsoleHistoryId}:
    delete:
      description: Deletes the specified console history metadata and the console history data.
      operationId: DeleteConsoleHistory
      x-related-resource: '#/definitions/ConsoleHistory'
      parameters:
      - $ref: '#/parameters/InstanceConsoleHistoryIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The information is being deleted.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteConsoleHistory
      tags:
      - compute
    get:
      description: |
        Shows the metadata for the specified console history.
        See [CaptureConsoleHistory](#/en/iaas/20160918/ConsoleHistory/CaptureConsoleHistory)
        for details about using the console history operations.
      operationId: GetConsoleHistory
      parameters:
      - $ref: '#/parameters/InstanceConsoleHistoryIdPathParam'
      responses:
        200:
          description: Console history metadata
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/ConsoleHistory'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetConsoleHistory
      tags:
      - compute
    put:
      description: Updates the specified console history metadata.
      operationId: UpdateConsoleHistory
      parameters:
      - $ref: '#/parameters/IfMatchHeader'
      - $ref: '#/parameters/InstanceConsoleHistoryIdPathParam'
      - description: Update instance fields
        in: body
        name: UpdateConsoleHistoryDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateConsoleHistoryDetails'

      responses:
        200:
          description: The request was accepted by the server
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
            etag:
              $ref: '#/x-descriptions/etag'
          schema:
            $ref: '#/definitions/ConsoleHistory'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateConsoleHistory
      tags:
      - compute
  /instanceConsoleHistories/{instanceConsoleHistoryId}/data:
    get:
      description: |
        Gets the actual console history data (not the metadata).
        See [CaptureConsoleHistory](#/en/iaas/20160918/ConsoleHistory/CaptureConsoleHistory)
        for details about using the console history operations.
      operationId: GetConsoleHistoryContent
      x-related-resource: '#/definitions/ConsoleHistory'
      parameters:
      - $ref: '#/parameters/InstanceConsoleHistoryIdPathParam'
      - description: Offset of the snapshot data to retrieve.
        format: int32
        in: query
        minimum: 0
        name: offset
        type: integer
      - description: Length of the snapshot data to retrieve.
        format: int32
        in: query
        minimum: 10240
        name: length
        type: integer
      responses:
        200:
          description: The information is being retrieved.
          headers:
            opc-bytes-remaining:
              description: The number of bytes remaining in the snapshot.
              format: int32
              type: integer
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            type: string
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetConsoleHistoryContent
      tags:
      - compute
  /instances/:
    get:
      description: |
        Lists the instances in the specified compartment and the specified Availability Domain.
        You can filter the results by specifying an instance name (the list will include all the identically-named
        instances in the compartment).
      operationId: ListInstances
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - name: lifecycleState
        in: query
        required: false
        type: string
        x-obmcs-enumref: "#/definitions/Instance/lifecycleState"
        description: |
          A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
      produces:
      - application/json
      - application/x-json-stream
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/Instance'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListInstances
      tags:
      - compute
    post:
      description: |
        Creates a new instance in the specified compartment and the specified Availability Domain.
        For general information about instances, see
        [Overview of the Compute Service](/Content/Compute/Concepts/computeoverview.htm).

        For information about access control and compartments, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm).

        For information about Availability Domains, see
        [Regions and Availability Domains](/Content/General/Concepts/regions.htm).
        To get a list of Availability Domains, use the `ListAvailabilityDomains` operation
        in the Identity and Access Management Service API.

        All Oracle Cloud Infrastructure resources, including instances, get an Oracle-assigned,
        unique ID called an Oracle Cloud Identifier (OCID).
        When you create a resource, you can find its OCID in the response. You can
        also retrieve a resource's OCID by using a List API operation
        on that resource type, or by viewing the resource in the Console.

        To launch an instance using an image or a boot volume use the `sourceDetails` parameter in [LaunchInstanceDetails](#/en/iaas/20160918/LaunchInstanceDetails).

        When you launch an instance, it is automatically attached to a virtual
        network interface card (VNIC), called the *primary VNIC*. The VNIC
        has a private IP address from the subnet's CIDR. You can either assign a
        private IP address of your choice or let Oracle automatically assign one.
        You can choose whether the instance has a public IP address. To retrieve the
        addresses, use the [ListVnicAttachments](#/en/iaas/20160918/VnicAttachment/ListVnicAttachments)
        operation to get the VNIC ID for the instance, and then call
        [GetVnic](#/en/iaas/20160918/Vnic/GetVnic) with the VNIC ID.

        You can later add secondary VNICs to an instance. For more information, see
        [Virtual Network Interface Cards (VNICs)](/Content/Network/Tasks/managingVNICs.htm).
      operationId: LaunchInstance
      parameters:
      - $ref: '#/parameters/RetryTokenHeader'
      - $ref: '#/parameters/OpcHostSerialQueryParam'
      - $ref: '#/parameters/OpcPoolNameQueryParam'
      - $ref: '#/parameters/OpcVnicIdQueryParam'
      - description: Instance details
        in: body
        name: LaunchInstanceDetails
        required: true
        schema:
          $ref: '#/definitions/LaunchInstanceDetails'
      responses:
        200:
          description: The instance is being launched.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/Instance'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: LaunchInstance
      tags:
      - compute
  /instances/{instanceId}:
    delete:
      description: |
        Terminates the specified instance. Any attached VNICs and volumes are automatically detached
        when the instance terminates.

        To preserve the boot volume associated with the instance, specify `true` for `PreserveBootVolumeQueryParam`.
        To delete the boot volume when the instance is deleted, specify `false` or do not specify a value for `PreserveBootVolumeQueryParam`.

        This is an asynchronous operation. The instance's `lifecycleState` will change to TERMINATING temporarily
        until the instance is completely removed.
      operationId: TerminateInstance
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - $ref: '#/parameters/PreserveBootVolumeQueryParam'
      responses:
        204:
          description: The instance is being terminated.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: TerminateInstance
      tags:
      - compute
    get:
      description: Gets information about the specified instance.
      operationId: GetInstance
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      responses:
        200:
          description: The instance was retrieved.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/Instance'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetInstance
      tags:
      - compute
    post:
      description: |
        Performs one of the power actions (start, stop, softreset, or reset)
        on the specified instance.

        **start** - power on

        **stop** - power off

        **softreset** - ACPI shutdown and power on

        **reset** - power off and power on

        Note that the **stop** state has no effect on the resources you consume.
        Billing continues for instances that you stop, and related resources continue
        to apply against any relevant quotas. You must terminate an instance
        ([TerminateInstance](#/en/iaas/20160918/Instance/TerminateInstance))
        to remove its resources from billing and quotas.
      operationId: InstanceAction
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      - $ref: '#/parameters/InstanceActionQueryParam'
      - $ref: '#/parameters/RetryTokenHeader'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The action is being performed.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/Instance'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: InstanceAction
      tags:
      - compute
    put:
      description: |
        Updates the display name of the specified instance. Avoid entering confidential information.
        The OCID of the instance remains the same.
      operationId: UpdateInstance
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      - $ref: '#/parameters/RetryTokenHeader'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Update instance fields
        in: body
        name: UpdateInstanceDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateInstanceDetails'
      responses:
        200:
          description: The instance was updated.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/Instance'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateInstance
      tags:
      - compute
  /instanceHealth/:
    x-obmcs-internal-only: true
    get:
      description: |
        Get health status of all instances in the specified compartment and the specified Availability Domain.
      operationId: ListInstanceHealth
      parameters:
        - $ref: '#/parameters/AvailabilityDomainQueryParam'
        - $ref: '#/parameters/CompartmentIdQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: Instance health information in list.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/InstanceHealth'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListInstanceHealth
      tags:
        - compute
  /instanceHealth/{instanceId}:
    x-obmcs-internal-only: true
    get:
      description: Gets health status of the specified instance.
      operationId: GetInstanceHealth
      parameters:
        - $ref: '#/parameters/InstanceIdPathParam'
      responses:
        200:
          description: The health information for the specified instance
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/InstanceHealth'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetInstanceHealth
      tags:
        - compute
  /instances/{instanceId}/initialCredentials:
    get:
      description: |
        Gets the generated credentials for the instance. Only works for Windows instances. The returned credentials
        are only valid for the initial login.
      operationId: GetWindowsInstanceInitialCredentials
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      responses:
        200:
          description: The credentials were retrieved.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/InstanceCredentials'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetWindowsInstanceInitialCredentials
      tags:
      - compute
  /shapes:
    get:
      description: |
        Lists the shapes that can be used to launch an instance within the specified compartment. You can
        filter the list by compatibility with a specific image.
      operationId: ListShapes
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/ImageIdQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/Shape'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListShapes
      tags:
      - compute
  /vnicAttachments/:
    get:
      description: |
        Lists the VNIC attachments in the specified compartment. A VNIC attachment
        resides in the same compartment as the attached instance. The list can be
        filtered by instance, VNIC, or Availability Domain.
      operationId: ListVnicAttachments
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/InstanceIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/VnicIdOptionalQueryParam'
      produces:
      - application/json
      - application/x-json-stream
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/VnicAttachment'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVnicAttachments
      tags:
      - compute
    post:
      description: |
        Creates a secondary VNIC and attaches it to the specified instance.
        For more information about secondary VNICs, see
        [Virtual Network Interface Cards (VNICs)](/Content/Network/Tasks/managingVNICs.htm).
      operationId: AttachVnic
      parameters:
      - description: Attach VNIC details.
        in: body
        name: AttachVnicDetails
        required: true
        schema:
          $ref: '#/definitions/AttachVnicDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The VNIC is being attached.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/VnicAttachment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: AttachVnic
      tags:
      - compute
  /vnicAttachments/{vnicAttachmentId}:
    get:
      description: |
        Gets the information for the specified VNIC attachment.
      operationId: GetVnicAttachment
      parameters:
      - $ref: '#/parameters/VnicAttachmentIdPathParam'
      responses:
        200:
          description: The VNIC attachment was retrieved.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/VnicAttachment'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVnicAttachment
      tags:
      - compute
    delete:
      description: |
        Detaches and deletes the specified secondary VNIC.
        This operation cannot be used on the instance's primary VNIC.
        When you terminate an instance, all attached VNICs (primary
        and secondary) are automatically detached and deleted.

        **Important:** If the VNIC has a
        [private IP](#/en/iaas/20160918/PrivateIp/) that is the
        [target of a route rule](/Content/Network/Tasks/managingroutetables.htm#privateip),
        deleting the VNIC causes that route rule to blackhole and the traffic
        will be dropped.
      operationId: DetachVnic
      parameters:
      - $ref: '#/parameters/VnicAttachmentIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The VNIC is being detached.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      x-related-resource: '#/definitions/VnicAttachment'
      summary: DetachVnic
      tags:
      - compute
  /volumeAttachments/:
    get:
      description: |
        Lists the volume attachments in the specified compartment. You can filter the
        list by specifying an instance OCID, volume OCID, or both.

        Currently, the only supported volume attachment type is [IScsiVolumeAttachment](#/en/iaas/20160918/IScsiVolumeAttachment/).
      operationId: ListVolumeAttachments
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/InstanceIdQueryParam'
      - $ref: '#/parameters/VolumeIdQueryParam'
      produces:
      - application/json
      - application/x-json-stream
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/VolumeAttachment'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVolumeAttachments
      tags:
      - compute
    post:
      description: |
        Attaches the specified storage volume to the specified instance.
      operationId: AttachVolume
      parameters:
      - description: Attach volume request
        in: body
        name: AttachVolumeDetails
        required: true
        schema:
          $ref: '#/definitions/AttachVolumeDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The volume is being attached.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/VolumeAttachment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: AttachVolume
      tags:
      - compute
  /volumeAttachments/{volumeAttachmentId}:
    delete:
      description: |
        Detaches a storage volume from an instance. You must specify the OCID of the volume attachment.

        This is an asynchronous operation. The attachment's `lifecycleState` will change to DETACHING temporarily
        until the attachment is completely removed.
      operationId: DetachVolume
      parameters:
      - $ref: '#/parameters/VolumeAttachmentIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The request was accepted by the server
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DetachVolume
      tags:
      - compute
    get:
      description: Gets information about the specified volume attachment.
      operationId: GetVolumeAttachment
      parameters:
      - $ref: '#/parameters/VolumeAttachmentIdPathParam'
      responses:
        200:
          description: The volume attachment was retrieved.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/VolumeAttachment'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVolumeAttachment
      tags:
      - compute
  /bootVolumeAttachments/:
    get:
      description: |
        Lists the boot volume attachments in the specified compartment. You can filter the
        list by specifying an instance OCID, boot volume OCID, or both.
      operationId: ListBootVolumeAttachments
      parameters:
      - $ref: '#/parameters/RequiredAvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/InstanceIdQueryParam'
      - $ref: '#/parameters/BootVolumeIdQueryParam'
      produces:
      - application/json
      - application/x-json-stream
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/BootVolumeAttachment'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListBootVolumeAttachments
      tags:
      - compute
      x-obmcs-feature-id:
      - udx-117
    post:
      description: |
        Attaches the specified boot volume to the specified instance.
      operationId: AttachBootVolume
      parameters:
      - description: Attach boot volume request
        in: body
        name: AttachBootVolumeDetails
        required: true
        schema:
          $ref: '#/definitions/AttachBootVolumeDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The boot volume is being attached.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/BootVolumeAttachment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: AttachBootVolume
      tags:
      - compute
      x-obmcs-feature-id:
      - udx-117
  /bootVolumeAttachments/{bootVolumeAttachmentId}:
    delete:
      description: |
        Detaches a boot volume from an instance. You must specify the OCID of the boot volume attachment.

        This is an asynchronous operation. The attachment's `lifecycleState` will change to DETACHING temporarily
        until the attachment is completely removed.
      operationId: DetachBootVolume
      parameters:
      - $ref: '#/parameters/BootVolumeAttachmentIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The request was accepted by the server
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DetachBootVolume
      tags:
      - compute
      x-obmcs-feature-id:
      - udx-117
    get:
      description: Gets information about the specified boot volume attachment.
      operationId: GetBootVolumeAttachment
      parameters:
      - $ref: '#/parameters/BootVolumeAttachmentIdPathParam'
      responses:
        200:
          description: The boot volume attachment was retrieved.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/BootVolumeAttachment'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetBootVolumeAttachment
      tags:
      - compute
      x-obmcs-feature-id:
      - udx-117
definitions:
  AttachBootVolumeDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it cannot be changed. Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance.
        maxLength: 255
        minLength: 1
        type: string
      bootVolumeId:
        description: The OCID of the  boot volume.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - instanceId
    - bootVolumeId
    x-obmcs-feature-id:
    - udx-117
  AttachIScsiVolumeDetails:
    allOf:
    - $ref: '#/definitions/AttachVolumeDetails'
    - discriminator: iscsi
      properties:
        useChap:
          description: Whether to use CHAP authentication for the volume attachment. Defaults to false.
          type: boolean
  AttachVnicDetails:
    properties:
      displayName:
        description: |
          A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance.
        maxLength: 255
        minLength: 1
        type: string
      nicIndex:
        x-obmcs-feature-id:
          - udx-473
        description: |
          Which physical network interface card (NIC) the VNIC will use. Defaults to 0.
          Certain bare metal instance shapes have two active physical NICs (0 and 1). If
          you add a secondary VNIC to one of these instances, you can specify which NIC
          the VNIC will use. For more information, see
          [Virtual Network Interface Cards (VNICs)](/Content/Network/Tasks/managingVNICs.htm).
        format: int32
        maximum: 31
        minimum: 0
        type: integer
      createVnicDetails:
        description: |
          Details for creating a new VNIC.
        $ref: "#/definitions/CreateVnicDetails"
    required:
    - instanceId
    - createVnicDetails
  AttachVolumeDetails:
    discriminator: type
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it cannot be changed. Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      type:
        description: The type of volume. The only supported value is "iscsi".
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance.
        maxLength: 255
        minLength: 1
        type: string
      volumeId:
        description: The OCID of the volume.
        maxLength: 255
        minLength: 1
        type: string
      isReadOnly:
        description: Whether the attachment was created in read-only mode.
        type: boolean
    required:
    - instanceId
    - volumeId
    - type
  CreateInstanceConsoleConnectionDetails:
    description: |
       The details for creating a instance console connection.
       The instance console connection is created in the same compartment as the instance.
    properties:
      instanceId:
        type: string
        description: The OCID of the instance to create the console connection to.
      publicKey:
        type: string
        description: The SSH public key used to authenticate the console connection.
        format: ssh-authorized-key
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
    required:
    - instanceId
    - publicKey
  InstanceConsoleConnection:
    description: |
      The `InstanceConsoleConnection` API provides you with console access to virtual machine (VM) instances,
      enabling you to troubleshoot malfunctioning instances remotely.

      For more information about console access, see
      [Accessing the Console](/Content/Compute/References/serialconsole.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the console connection.
        maxLength: 255
        minLength: 1
        type: string
      connectionString:
        type: string
        description: The SSH connection string for the console connection.
      vncConnectionString:
        type: string
        description: |
           The SSH connection string for the SSH tunnel used to
           connect to the console connection over VNC.
        x-obmcs-feature-id:
        - udx-637
      id:
        type: string
        description: The OCID of the console connection.
      instanceId:
        type: string
        description: The OCID of the instance the console connection connects to.
      lifecycleState:
        type: string
        description: The current state of the console connection.
        enum:
        - ACTIVE
        - CREATING
        - DELETED
        - DELETING
        - FAILED
      fingerprint:
        type: string
        description: The SSH public key fingerprint for the console connection.
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
  BootVolumeAttachment:
    description: |
      Represents an attachment between a boot volume and an instance.
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of an instance.

          Example: `Uocm:PHX-AD-1`

        type: string
        maxLength: 255
        minLength: 1
      compartmentId:
        description: The OCID of the compartment.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it cannot be changed.
          Avoid entering confidential information.

          Example: `My boot volume`

        type: string
        maxLength: 255
        minLength: 1
      id:
        description: The OCID of the boot volume attachment.
        type: string
        maxLength: 255
        minLength: 1
      instanceId:
        description: The OCID of the instance the boot volume is attached to.
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The current state of the boot volume attachment.
        enum:
        - ATTACHING
        - ATTACHED
        - DETACHING
        - DETACHED
        type: string
      timeCreated:
        description: |
          The date and time the boot volume was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`

        format: date-time
        type: string
      bootVolumeId:
        description: The OCID of the boot volume.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - id
    - instanceId
    - bootVolumeId
    - lifecycleState
    - compartmentId
    - availabilityDomain
    - timeCreated
    x-obmcs-feature-id:
    - udx-117
  CaptureConsoleHistoryDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance to get the console history from.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
    required:
    - instanceId
  ConsoleHistory:
    description: |
      An instance's serial console data. It includes configuration messages that occur when the
      instance boots, such as kernel and BIOS messages, and is useful for checking the status of
      the instance or diagnosing problems. The console data is minimally formatted ASCII text.
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of an instance.

          Example: `Uocm:PHX-AD-1`

        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.

          Example: `My console history metadata`

        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The OCID of the console history metadata object.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance this console history was fetched from.
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The current state of the console history.
        enum:
        - REQUESTED
        - GETTING-HISTORY
        - SUCCEEDED
        - FAILED
        type: string
      timeCreated:
        description:  |
          The date and time the history was created, in the format defined by RFC3339.
          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
    required:
    - id
    - compartmentId
    - lifecycleState
    - availabilityDomain
    - timeCreated
    - instanceId
  Image:
    description: |
      A boot disk image for launching an instance. For more information, see
      [Overview of the Compute Service](/Content/Compute/Concepts/computeoverview.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      compartmentId:
        description: |
          The OCID of the compartment containing the instance you want to use as the basis for the image.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        type: string
        maxLength: 255
        minLength: 1
        description: |
          A user-friendly name for the image. It does not have to be unique, and it's changeable.
          Avoid entering confidential information.
          You cannot use an Oracle-provided image name as a custom image name.

          Example: `My custom Oracle Linux image`

      id:
        description: The OCID of the image.
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        type: string
        enum:
          - PROVISIONING
          - IMPORTING
          - AVAILABLE
          - EXPORTING
          - DISABLED
          - DELETED
      timeCreated:
        description: |
          The date and time the image was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`

        format: date-time
        type: string
      baseImageId:
        type: string
        maxLength: 255
        minLength: 1
        description: The OCID of the image originally used to launch the instance.
      operatingSystem:
        description: |
          The image's operating system.

          Example: `Oracle Linux`

        type: string
        minLength: 1
        maxLength: 255
      operatingSystemVersion:
        description: |
          The image's operating system version.

          Example: `7.2`

        type: string
        minLength: 1
        maxLength: 255
      createImageAllowed:
        description: |
          Whether instances launched with this image can be used to create new images.
          For example, you cannot create an image of an Oracle Database instance.
          Example: `true`
        type: boolean
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
      launchMode:
        $ref: '#/x-descriptions/LaunchMode'
      launchOptions:
        $ref: "#/definitions/LaunchOptions"
    required:
      - compartmentId
      - id
      - lifecycleState
      - timeCreated
      - operatingSystem
      - operatingSystemVersion
      - createImageAllowed
  ExportImageDetails:
    description: |
      The destination details for the image export.

      Set `destinationType` to `objectStorageTuple`
      and use [ExportImageViaObjectStorageTupleDetails](#/en/iaas/latest/requests/ExportImageViaObjectStorageTupleDetails)
      when specifying the namespace, bucket name, and object name.

      Set `destinationType` to `objectStorageUri` and
      use [ExportImageViaObjectStorageUriDetails](#/en/iaas/latest/requests/ExportImageViaObjectStorageUriDetails)
      when specifying the Object Storage URL.
    discriminator: destinationType
    properties:
      destinationType:
        description: |
          The destination type. Use `objectStorageTuple` when specifying the namespace, bucket name, and object name.
          Use `objectStorageUri` when specifying the Object Storage URL.
        type: string
    required:
      - destinationType
  ExportImageViaObjectStorageUriDetails:
    allOf:
    - $ref: '#/definitions/ExportImageDetails'
    - discriminator: 'objectStorageUri'
      properties:
        destinationUri:
          description: |
            The Object Storage URL to export the image to. See [Object Storage URLs](/Content/Compute/Tasks/imageimportexport.htm#URLs)
            and [pre-authenticated requests](/Content/Object/Tasks/managingaccess.htm#pre-auth) for constructing URLs for image import/export.
          type: string
      required:
        - destinationUri
  ExportImageViaObjectStorageTupleDetails:
    allOf:
    - $ref: '#/definitions/ExportImageDetails'
    - discriminator: 'objectStorageTuple'
      properties:
        namespaceName:
          description: The Object Storage namespace to export the image to.
          type: string
        bucketName:
          description: The Object Storage bucket to export the image to.
          type: string
        objectName:
          description: The Object Storage object name for the exported image.
          type: string
  ImageShapeCompatibilityEntry:
    x-obmcs-preview-only: true
    description: An image and shape that are compatible.
    properties:
      imageId:
        type: string
        minLength: 1
        maxLength: 255
        description: The image OCID.
      shape:
        type: string
        minLength: 1
        maxLength: 255
        description: The shape name.
    required:
    - imageId
    - shape
  ImageSourceDetails:
    discriminator: sourceType
    properties:
      sourceType:
        description: |
          The source type for the image. Use `objectStorageTuple` when specifying the namespace,
          bucket name, and object name. Use `objectStorageUri` when specifying the Object Storage URL.
        type: string
      sourceImageType:
        description:  |
           The format of the image to be imported.  Exported Oracle images are QCOW2.  Only monolithic
           images are supported.
        type: string
        enum:
          - QCOW2
          - VMDK
    required:
      - sourceType
  ImageSourceViaObjectStorageUriDetails:
    allOf:
    - $ref: '#/definitions/ImageSourceDetails'
    - discriminator: 'objectStorageUri'
      properties:
        sourceUri:
          description: The Object Storage URL for the image.
          type: string
      required:
      - sourceUri
  ImageSourceViaObjectStorageTupleDetails:
    allOf:
    - $ref: '#/definitions/ImageSourceDetails'
    - discriminator: 'objectStorageTuple'
      properties:
        namespaceName:
          description: The Object Storage namespace for the image.
          type: string
        bucketName:
          description: The Object Storage bucket for the image.
          type: string
        objectName:
          description: The Object Storage name for the image.
          type: string
      required:
      - namespaceName
      - bucketName
      - objectName
  Instance:
    description: |
      A compute host. The image used to launch the instance determines its operating system and other
      software. The shape specified during the launch process determines the number of CPUs and memory
      allocated to the instance. For more information, see
      [Overview of the Compute Service](/Content/Compute/Concepts/computeoverview.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      availabilityDomain:
        description: |
          The Availability Domain the instance is running in.

          Example: `Uocm:PHX-AD-1`

        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment that contains the instance.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.

          Example: `My bare metal instance`

        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The OCID of the instance.
        maxLength: 255
        minLength: 1
        type: string
      imageId:
        description: |
          Deprecated. Use `sourceDetails` instead.
        maxLength: 255
        minLength: 1
        type: string
      ipxeScript:
        description: |
            When a bare metal or virtual machine
            instance boots, the iPXE firmware that runs on the instance is
            configured to run an iPXE script to continue the boot process.

            If you want more control over the boot process, you can provide
            your own custom iPXE script that will run when the instance boots;
            however, you should be aware that the same iPXE script will run
            every time an instance boots; not only after the initial
            LaunchInstance call.

            The default iPXE script connects to the instance's local boot
            volume over iSCSI and performs a network boot. If you use a custom iPXE
            script and want to network-boot from the instance's local boot volume
            over iSCSI the same way as the default iPXE script, you should use the
            following iSCSI IP address: 169.254.0.2, and boot volume IQN:
            iqn.2015-02.oracle.boot.

            For more information about the Bring Your Own Image feature of
            Oracle Cloud Infrastructure, see
            [Bring Your Own Image](/Content/Compute/References/bringyourownimage.htm).

            For more information about iPXE, see http://ipxe.org.

        maxLength: 10240
        minLength: 1
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Custom metadata that you provide.
        type: object
      extendedMetadata:
        type: object
        additionalProperties:
          type: object
        description: |
          Additional metadata key/value pairs that you provide.  They serve a similar purpose and functionality from fields in the 'metadata' object.

          They are distinguished from 'metadata' fields in that these can be nested JSON objects (whereas 'metadata' fields are string/string maps only).

          If you don't need nested metadata values, it is strongly advised to avoid using this object and use the Metadata object instead.
      region:
        description: |
          The region that contains the Availability Domain the instance is running in.

          Example: `phx`

        maxLength: 255
        minLength: 1
        type: string
      shape:
        description: |
          The shape of the instance. The shape determines the number of CPUs and the amount of memory
          allocated to the instance. You can enumerate all available shapes by calling
          [ListShapes](#/en/iaas/20160918/Shape/ListShapes).
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The current state of the instance.
        enum:
        - PROVISIONING
        - RUNNING
        - STARTING
        - STOPPING
        - STOPPED
        - CREATING_IMAGE
        - TERMINATING
        - TERMINATED
        type: string
      sourceDetails:
        description: Details for creating an instance
        $ref: "#/definitions/InstanceSourceDetails"
      timeCreated:
        description: |
          The date and time the instance was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`

        format: date-time
        type: string
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
      launchMode:
        $ref: "#/x-descriptions/LaunchMode"
      launchOptions:
        $ref: "#/definitions/LaunchOptions"
    required:
    - id
    - compartmentId
    - shape
    - region
    - availabilityDomain
    - lifecycleState
    - timeCreated
  InstanceCredentials:
    description: The credentials for a particular instance.
    properties:
      username:
        description: The username.
        maxLength: 255
        minLength: 1
        type: string
      password:
        description: The password for the username.
        maxLength: 255
        minLength: 1
        type: string
    required:
     - username
     - password
  InstanceHealth:
    x-obmcs-internal-only: true
    description: Health status of an instance.
    properties:
      instanceId:
        description: The OCID of the instance.
        maxLength: 255
        minLength: 1
        type: string
      status:
        description: |
          The health status of the instance, which can have 3 possible values:
          HEALTHY: The instance is healthy.
          UNHEALTHY: The instance is not healthy.
          UNKNOWN: The instance health status cannot be determined. The instance might be healthy
          or not healthy.
        enum:
        - HEALTHY
        - UNHEALTHY
        - UNKNOWN
        type: string
    required:
    - id
    - status
  InstanceSourceDetails:
    discriminator: sourceType
    properties:
      sourceType:
        description: |
          The source type for the instance.
          Use `image` when specifying the image OCID. Use `bootVolume` when specifying
          the boot volume OCID.
        type: string
    required:
      - sourceType
    x-obmcs-feature-id:
    - udx-117
  InstanceSourceViaImageDetails:
    allOf:
    - $ref: '#/definitions/InstanceSourceDetails'
    - discriminator: 'image'
      properties:
        imageId:
          description: The OCID of the image used to boot the instance.
          maxLength: 255
          minLength: 1
          type: string
      required:
      - imageId
    x-obmcs-feature-id:
    - udx-117
  InstanceSourceViaBootVolumeDetails:
    allOf:
    - $ref: '#/definitions/InstanceSourceDetails'
    - discriminator: 'bootVolume'
      properties:
        bootVolumeId:
          description: The OCID of the boot volume used to boot the instance.
          maxLength: 255
          minLength: 1
          type: string
      required:
      - bootVolumeId
    x-obmcs-feature-id:
    - udx-117
  IScsiVolumeAttachment:
    allOf:
    - $ref: '#/definitions/VolumeAttachment'
    - discriminator: iscsi
      properties:
        chapSecret:
          description: |
            The Challenge-Handshake-Authentication-Protocol (CHAP) secret valid for the associated CHAP user name.
            (Also called the "CHAP password".)

            Example: `d6866c0d-298b-48ba-95af-309b4faux45e`

          type: string
        chapUsername:
          description: |
            The volume's system-generated Challenge-Handshake-Authentication-Protocol (CHAP) user name.

            Example: `ocid1.volume.oc1.phx.abyhqljrgvttnlx73nmrwfaux7kcvzfs3s66izvxf2h4lgvyndsdsnoiwr5q`

          type: string
        ipv4:
          description: |
            The volume's iSCSI IP address.

            Example: `169.254.0.2`

          maxLength: 15
          minLength: 7
          type: string
        iqn:
          description: |
            The target volume's iSCSI Qualified Name in the format defined by RFC 3720.

            Example: `iqn.2015-12.us.oracle.com:456b0391-17b8-4122-bbf1-f85fc0bb97d9`

          minLength: 1
          type: string
        port:
          description: |
            The volume's iSCSI port.

            Example: `3260`

          maximum: 65535
          minimum: 1
          type: integer
      required:
      - iqn
      - ipv4
      - port
    description: An ISCSI volume attachment.
  LaunchInstanceDetails:
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of the instance.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.

          Example: `My bare metal instance`
        maxLength: 255
        minLength: 1
        type: string
      hostnameLabel:
        description: |
          Deprecated. Instead use `hostnameLabel` in
          [CreateVnicDetails](#/en/iaas/20160918/CreateVnicDetails/).
          If you provide both, the values must match.
        maxLength: 63
        minLength: 1
        type: string
      imageId:
        description: |
          Deprecated. Use `sourceDetails` with [InstanceSourceViaImageDetails](#/en/iaas/latest/requests/InstanceSourceViaImageDetails)
          source type instead. If you specify values for both, the values must match.
        maxLength: 255
        minLength: 1
        type: string
      ipxeScript:
        description: |
            This is an advanced option.

            When a bare metal or virtual machine
            instance boots, the iPXE firmware that runs on the instance is
            configured to run an iPXE script to continue the boot process.

            If you want more control over the boot process, you can provide
            your own custom iPXE script that will run when the instance boots;
            however, you should be aware that the same iPXE script will run
            every time an instance boots; not only after the initial
            LaunchInstance call.

            The default iPXE script connects to the instance's local boot
            volume over iSCSI and performs a network boot. If you use a custom iPXE
            script and want to network-boot from the instance's local boot volume
            over iSCSI the same way as the default iPXE script, you should use the
            following iSCSI IP address: 169.254.0.2, and boot volume IQN:
            iqn.2015-02.oracle.boot.

            For more information about the Bring Your Own Image feature of
            Oracle Cloud Infrastructure, see
            [Bring Your Own Image](/Content/Compute/References/bringyourownimage.htm).

            For more information about iPXE, see http://ipxe.org.

        minLength: 1
        maxLength: 10240
        type: string
      metadata:
        additionalProperties:
          type: string
        description: |
          Custom metadata key/value pairs that you provide, such as the SSH public key
          required to connect to the instance.

          A metadata service runs on every launched instance. The service is an HTTP
          endpoint listening on 169.254.169.254. You can use the service to:

          * Provide information to [Cloud-Init](https://cloudinit.readthedocs.org/en/latest/)
            to be used for various system initialization tasks.

          * Get information about the instance, including the custom metadata that you
            provide when you launch the instance.

           **Providing Cloud-Init Metadata**

           You can use the following metadata key names to provide information to
           Cloud-Init:

           **"ssh_authorized_keys"** - Provide one or more public SSH keys to be
           included in the `~/.ssh/authorized_keys` file for the default user on the
           instance. Use a newline character to separate multiple keys. The SSH
           keys must be in the format necessary for the `authorized_keys` file, as shown
           in the example below.

           **"user_data"** - Provide your own base64-encoded data to be used by
           Cloud-Init to run custom scripts or provide custom Cloud-Init configuration. For
           information about how to take advantage of user data, see the
           [Cloud-Init Documentation](http://cloudinit.readthedocs.org/en/latest/topics/format.html).

           **Note:** Cloud-Init does not pull this data from the `http://169.254.169.254/opc/v1/instance/metadata/`
           path. When the instance launches and either of these keys are provided, the key values are formatted as
           OpenStack metadata and copied to the following locations, which are recognized by Cloud-Init:

           `http://169.254.169.254/openstack/latest/meta_data.json` - This JSON blob
           contains, among other things, the SSH keys that you provided for
            **"ssh_authorized_keys"**.

           `http://169.254.169.254/openstack/latest/user_data` - Contains the
           base64-decoded data that you provided for **"user_data"**.

           **Metadata Example**

                "metadata" : {
                   "quake_bot_level" : "Severe",
                   "ssh_authorized_keys" : "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCZ06fccNTQfq+xubFlJ5ZR3kt+uzspdH9tXL+lAejSM1NXM+CFZev7MIxfEjas06y80ZBZ7DUTQO0GxJPeD8NCOb1VorF8M4xuLwrmzRtkoZzU16umt4y1W0Q4ifdp3IiiU0U8/WxczSXcUVZOLqkz5dc6oMHdMVpkimietWzGZ4LBBsH/LjEVY7E0V+a0sNchlVDIZcm7ErReBLcdTGDq0uLBiuChyl6RUkX1PNhusquTGwK7zc8OBXkRuubn5UKXhI3Ul9Nyk4XESkVWIGNKmw8mSpoJSjR8P9ZjRmcZVo8S+x4KVPMZKQEor== ryan.smith@company.com
                   ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAzJSAtwEPoB3Jmr58IXrDGzLuDYkWAYg8AsLYlo6JZvKpjY1xednIcfEVQJm4T2DhVmdWhRrwQ8DmayVZvBkLt+zs2LdoAJEVimKwXcJFD/7wtH8Lnk17HiglbbbNXsemjDY0hea4JUE5CfvkIdZBITuMrfqSmA4n3VNoorXYdvtTMoGG8fxMub46RPtuxtqi9bG9Zqenordkg5FJt2mVNfQRqf83CWojcOkklUWq4CjyxaeLf5i9gv1fRoBo4QhiA8I6NCSppO8GnoV/6Ox6TNoh9BiifqGKC9VGYuC89RvUajRBTZSK2TK4DPfaT+2R+slPsFrwiT/oPEhhEK1S5Q== rsa-key-20160227",
                   "user_data" : "SWYgeW91IGNhbiBzZWUgdGhpcywgdGhlbiBpdCB3b3JrZWQgbWF5YmUuCg=="
                }
           **Getting Metadata on the Instance**

           To get information about your instance, connect to the instance using SSH and issue any of the
           following GET requests:

               curl http://169.254.169.254/opc/v1/instance/
               curl http://169.254.169.254/opc/v1/instance/metadata/
               curl http://169.254.169.254/opc/v1/instance/metadata/<any-key-name>

           You'll get back a response that includes all the instance information; only the metadata information; or
           the metadata information for the specified key name, respectively.
        type: object
      extendedMetadata:
        type: object
        additionalProperties:
          type: object
        description: |
          Additional metadata key/value pairs that you provide.  They serve a similar purpose and functionality from fields in the 'metadata' object.

          They are distinguished from 'metadata' fields in that these can be nested JSON objects (whereas 'metadata' fields are string/string maps only).

          If you don't need nested metadata values, it is strongly advised to avoid using this object and use the Metadata object instead.
      shape:
        description: |
          The shape of an instance. The shape determines the number of CPUs, amount of memory,
          and other resources allocated to the instance.

          You can enumerate all available shapes by calling [ListShapes](#/en/iaas/20160918/Shape/ListShapes).
        maxLength: 255
        minLength: 1
        type: string
      subnetId:
        description: |
          Deprecated. Instead use `subnetId` in
          [CreateVnicDetails](#/en/iaas/20160918/CreateVnicDetails/).
          At least one of them is required; if you provide both, the values must match.
        maxLength: 255
        minLength: 1
        type: string
      createVnicDetails:
        description: |
          Details for the primary VNIC, which is automatically created and attached when
          the instance is launched.
        $ref: "#/definitions/CreateVnicDetails"
      sourceDetails:
        description: |
          Details for creating an instance.
          Use this parameter to specify whether a boot volume or an image should be used to launch a new instance.
        $ref: "#/definitions/InstanceSourceDetails"
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
    required:
    - compartmentId
    - shape
    - availabilityDomain
    description: |
      Instance launch details.
      Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
  LaunchOptions:
    description: |
      Options for tuning compatibility and performance of VM shapes.
    properties:
      firmware:
        description: |
          Firmware used to boot VM.  Select the option that matches your operating system.
          * `BIOS` - Boot VM using BIOS style firmware.  This is compatible with both 32 bit and 64 bit operating
          systems that boot using MBR style bootloaders.
          * `UEFI_64` - Boot VM using UEFI style firmware compatible with 64 bit operating systems.  This is the
          default for Oracle provided images.
        type: string
        enum:
          - BIOS
          - UEFI_64
      networkType:
        description: |
          Emulation type for NIC.
          * `E1000` - Emulated Gigabit ethernet controller.  Compatible with Linux e1000 network driver.
          * `VFIO` - Direct attached Virtual Function network controller.  Default for Oracle provided images.
#          * `VIRTIO` - High performance emulated ethernet controller.  Compatible with Linux virtio network driver.
        type: string
        enum:
          - E1000
          - VFIO
      bootVolumeType:
        $ref: "#/x-descriptions/VolumeType"
#      localDataVolumeType:
#        $ref: "#/x-descriptions/VolumeType"
      remoteDataVolumeType:
        $ref: "#/x-descriptions/VolumeType"
    required:
    - architecture
    - firmware
    - networkType
    - bootVolumeType
#    - localDataVolumeType
    - remoteDataVolumeType
  Shape:
    description: |
      A compute instance shape that can be used in [LaunchInstance](#/en/iaas/20160918/Instance/LaunchInstance).
      For more information, see [Overview of the Compute Service](/Content/Compute/Concepts/computeoverview.htm).
    properties:
      shape:
        description: |
          The name of the shape. You can enumerate all available shapes by calling
          [ListShapes](#/en/iaas/20160918/Shape/ListShapes).
        maxLength: 255
        minLength: 1
        type: string
    required:
    - shape
  CreateImageDetails:
    description: Either instanceId or imageSourceDetails must be provided in addition to other required parameters.
    properties:
      compartmentId:
        description: The OCID of the compartment containing the instance you want to use as the basis for the image.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name for the image. It does not have to be unique, and it's changeable.
          Avoid entering confidential information.

          You cannot use an Oracle-provided image name as a custom image name.

          Example: `My Oracle Linux image`

        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance you want to use as the basis for the image.
        maxLength: 255
        minLength: 1
        type: string
      imageSourceDetails:
        description: Details for creating an image through import
        $ref: "#/definitions/ImageSourceDetails"
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
      launchMode:
        x-obmcs-resolve-component-ref: true
        $ref: "#/x-descriptions/LaunchMode"
      launchOptions:
        x-obmcs-internal-only: true
        description: When launchMode is `CUSTOM`, this parameter is required, otherwise it is disallowed.
        $ref: "#/definitions/LaunchOptions"
    required:
      - compartmentId
  UpdateConsoleHistoryDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
  UpdateImageDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.

          Example: `My custom Oracle Linux image`

        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
  UpdateInstanceDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.

          Example: `My bare metal instance`

        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
  VnicAttachment:
    description: |
      Represents an attachment between a VNIC and an instance. For more information, see
      [Virtual Network Interface Cards (VNICs)](/Content/Network/Tasks/managingVNICs.htm).
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of the instance.

          Example: `Uocm:PHX-AD-1`

        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: |
          The OCID of the compartment the VNIC attachment is in, which is the same
          compartment the instance is in.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The OCID of the VNIC attachment.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance.
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The current state of the VNIC attachment.
        enum:
        - ATTACHING
        - ATTACHED
        - DETACHING
        - DETACHED
        type: string
      nicIndex:
        x-obmcs-feature-id:
          - udx-473
        description: |
          Which physical network interface card (NIC) the VNIC uses.
          Certain bare metal instance shapes have two active physical NICs (0 and 1). If
          you add a secondary VNIC to one of these instances, you can specify which NIC
          the VNIC will use. For more information, see
          [Virtual Network Interface Cards (VNICs)](/Content/Network/Tasks/managingVNICs.htm).
        format: int32
        maximum: 31
        minimum: 0
        type: integer
      subnetId:
        description: The OCID of the VNIC's subnet.
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: |
          The date and time the VNIC attachment was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`

        format: date-time
        type: string
      vnicId:
        description: The OCID of the VNIC. Available after the attachment process is complete.
        maxLength: 255
        minLength: 1
        type: string
      vlanTag:
        description: |
          The Oracle-assigned VLAN tag of the attached VNIC. Available after the
          attachment process is complete.

          Example: `0`
        format: int32
        type: integer
    required:
    - id
    - compartmentId
    - instanceId
    - subnetId
    - lifecycleState
    - availabilityDomain
    - timeCreated
  VolumeAttachment:
    description: |
      A base object for all types of attachments between a storage volume and an instance.
      For specific details about iSCSI attachments, see
      [IScsiVolumeAttachment Reference](#/en/iaas/20160918/IScsiVolumeAttachment/).

      For general information about volume attachments, see
      [Overview of Block Volume Storage](/Content/Block/Concepts/overview.htm).
    discriminator: attachmentType
    properties:
      attachmentType:
        description: The type of volume attachment.
        type: string
        maxLength: 255
        minLength: 1
      availabilityDomain:
        description: |
          The Availability Domain of an instance.

          Example: `Uocm:PHX-AD-1`

        type: string
        maxLength: 255
        minLength: 1
      compartmentId:
        description: The OCID of the compartment.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it cannot be changed.
          Avoid entering confidential information.

          Example: `My volume attachment`

        type: string
        maxLength: 255
        minLength: 1
      id:
        description: The OCID of the volume attachment.
        type: string
        maxLength: 255
        minLength: 1
      instanceId:
        description: The OCID of the instance the volume is attached to.
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The current state of the volume attachment.
        enum:
        - ATTACHING
        - ATTACHED
        - DETACHING
        - DETACHED
        type: string
      timeCreated:
        description: |
          The date and time the volume was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`

        format: date-time
        type: string
      volumeId:
        description: The OCID of the volume.
        maxLength: 255
        minLength: 1
        type: string
      isReadOnly:
        description: Whether the attachment was created in read-only mode.
        type: boolean
    required:
    - id
    - attachmentType
    - instanceId
    - volumeId
    - lifecycleState
    - compartmentId
    - availabilityDomain
    - timeCreated
parameters:
  BootVolumeAttachmentIdPathParam:
    description: The OCID of the boot volume attachment.
    in: path
    name: bootVolumeAttachmentId
    required: true
    type: string
    x-obmcs-feature-id:
    - udx-117
  BootVolumeIdQueryParam:
    description: The OCID of the boot volume.
    in: query
    name: bootVolumeId
    type: string
    x-obmcs-feature-id:
    - udx-117
  ImageIdPathParam:
    description: The OCID of the image.
    in: path
    name: imageId
    required: true
    type: string
  ImageIdQueryParam:
    description: The OCID of an image.
    in: query
    name: imageId
    type: string
  InstanceActionQueryParam:
    description: The action to perform on the instance.
    enum:
    - STOP
    - START
    - SOFTRESET
    - RESET
    in: query
    name: action
    required: true
    type: string
    x-obmcs-inline-enum: false
  InstanceConsoleConnectionIdPathParam:
    description: The OCID of the intance console connection
    in: path
    name: instanceConsoleConnectionId
    required: true
    type: string
  InstanceConsoleHistoryIdPathParam:
    description: The OCID of the console history.
    in: path
    name: instanceConsoleHistoryId
    required: true
    type: string
  InstanceIdPathParam:
    description: The OCID of the instance.
    in: path
    name: instanceId
    required: true
    type: string
  InstanceIdQueryParam:
    description: The OCID of the instance.
    in: query
    name: instanceId
    type: string
  OpcHostSerialQueryParam:
    description: For Oracle internal use only.
    in: query
    name: opc-host-serial
    type: string
    x-obmcs-internal-only: true
  OpcPoolNameQueryParam:
    x-obmcs-preview-only: true
    description: Name of the pool in which to launch an instance.
    in: query
    name: opc-pool-name
    type: string
  OpcVnicIdQueryParam:
    description: For Oracle internal use only.
    in: query
    name: opc-vnic-id
    type: string
    x-obmcs-internal-only: true
  OperatingSystemQueryParam:
    description: |
      The image's operating system.

      Example: `Oracle Linux`

    in: query
    name: operatingSystem
    type: string
  OperatingSystemVersionQueryParam:
    description: |
      The image's operating system version.

      Example: `7.2`

    in: query
    name: operatingSystemVersion
    type: string
  PreserveBootVolumeQueryParam:
    description: |
      Specifies whether to delete or preserve the boot volume when terminating an instance.
      The default value is false.
    name: preserveBootVolume
    in: query
    required: false
    type: boolean
    x-obmcs-feature-id:
    - udx-117
  ShapeNamePathParam:
    description: Shape name.
    in: path
    maxLength: 255
    minLength: 1
    name: shapeName
    required: true
    type: string
  ShapeNameQueryParam:
    description: Shape name.
    in: query
    name: shape
    type: string
  VolumeAttachmentIdPathParam:
    description: The OCID of the volume attachment.
    in: path
    name: volumeAttachmentId
    required: true
    type: string
x-descriptions:
  LaunchMode:
    description: |
      Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
      * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for Oracle-provided images.
      * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
      * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
    type: string
    enum:
      - NATIVE
      - EMULATED
      - CUSTOM
