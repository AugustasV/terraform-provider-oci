swagger: '2.0'
info:
  description: APIs for Networking Service, Compute Service, and Block Volume Service.
  license:
    name: Oracle Corporation
  title: Core Services API
  version: '20160918'
schemes:
- http
consumes:
- application/json
produces:
- application/json
basePath: /20160918
paths:
  /bootVolumeAttachments/:
    get:
      description: |
        Lists the boot volume attachments in the specified compartment. You can filter the
        list by specifying an instance OCID, boot volume OCID, or both.
      operationId: ListBootVolumeAttachments
      parameters:
      - $ref: '#/parameters/RequiredAvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/InstanceIdQueryParam'
      - $ref: '#/parameters/BootVolumeIdQueryParam'
      produces:
      - application/json
      - application/x-json-stream
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/BootVolumeAttachment'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListBootVolumeAttachments
      tags:
      - compute
      x-obmcs-feature-id:
      - udx-117
    post:
      description: |
        Attaches the specified boot volume to the specified instance.
      operationId: AttachBootVolume
      parameters:
      - description: Attach boot volume request
        in: body
        name: AttachBootVolumeDetails
        required: true
        schema:
          $ref: '#/definitions/AttachBootVolumeDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The boot volume is being attached.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/BootVolumeAttachment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: AttachBootVolume
      tags:
      - compute
      x-obmcs-feature-id:
      - udx-117
  /bootVolumeAttachments/{bootVolumeAttachmentId}:
    delete:
      description: |
        Detaches a boot volume from an instance. You must specify the OCID of the boot volume attachment.

        This is an asynchronous operation. The attachment's `lifecycleState` will change to DETACHING temporarily
        until the attachment is completely removed.
      operationId: DetachBootVolume
      parameters:
      - $ref: '#/parameters/BootVolumeAttachmentIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The request was accepted by the server
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DetachBootVolume
      tags:
      - compute
      x-obmcs-feature-id:
      - udx-117
    get:
      description: Gets information about the specified boot volume attachment.
      operationId: GetBootVolumeAttachment
      parameters:
      - $ref: '#/parameters/BootVolumeAttachmentIdPathParam'
      responses:
        200:
          description: The boot volume attachment was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/BootVolumeAttachment'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetBootVolumeAttachment
      tags:
      - compute
      x-obmcs-feature-id:
      - udx-117
  /bootVolumes:
    get:
      description: |
        Lists the boot volumes in the specified compartment and Availability Domain.
      operationId: ListBootVolumes
      parameters:
      - $ref: '#/parameters/RequiredAvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/BootVolume'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListBootVolumes
      tags:
      - blockstorage
      x-obmcs-feature-id:
      - udx-117
  /bootVolumes/{bootVolumeId}:
    delete:
      description: |
        Deletes the specified boot volume. The volume cannot have an active connection to an instance.
        To disconnect the boot volume from a connected instance, see
        [Disconnecting From a Boot Volume](/Content/Block/Tasks/deletingbootvolume.htm).
        **Warning:** All data on the boot volume will be permanently lost when the boot volume is deleted.
      operationId: DeleteBootVolume
      parameters:
      - $ref: '#/parameters/BootVolumeIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The boot volume is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteBootVolume
      tags:
      - blockstorage
      x-obmcs-feature-id:
      - udx-117
    get:
      description: Gets information for the specified boot volume.
      operationId: GetBootVolume
      parameters:
      - $ref: '#/parameters/BootVolumeIdPathParam'
      responses:
        200:
          description: The boot volume's information has been retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/BootVolume'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetBootVolume
      tags:
      - blockstorage
      x-obmcs-feature-id:
      - udx-117
    put:
      description: Updates the specified boot volume's display name.
      operationId: UpdateBootVolume
      parameters:
      - $ref: '#/parameters/BootVolumeIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Update boot volume's display name.
        in: body
        name: UpdateBootVolumeDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateBootVolumeDetails'
      responses:
        200:
          description: The boot volume was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/BootVolume'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateBootVolume
      tags:
      - blockstorage
      x-obmcs-feature-id:
      - udx-117
  /cpes:
    get:
      description: |
        Lists the Customer-Premises Equipment objects (CPEs) in the specified compartment.
      operationId: ListCpes
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/Cpe'
            type: array
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListCpes
      tags:
      - virtualNetwork
    post:
      description: |
        Creates a new virtual Customer-Premises Equipment (CPE) object in the specified compartment. For
        more information, see [IPSec VPNs](/Content/Network/Tasks/managingIPsec.htm).

        For the purposes of access control, you must provide the OCID of the compartment where you want
        the CPE to reside. Notice that the CPE doesn't have to be in the same compartment as the IPSec
        connection or other Networking Service components. If you're not sure which compartment to
        use, put the CPE in the same compartment as the DRG. For more information about
        compartments and access control, see [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm).
        For information about OCIDs, see [Resource Identifiers](/Content/General/Concepts/identifiers.htm).

        You must provide the public IP address of your on-premises router. See
        [Configuring Your On-Premises Router for an IPSec VPN](/Content/Network/Tasks/configuringCPE.htm).

        You may optionally specify a *display name* for the CPE, otherwise a default is provided. It does not have to
        be unique, and you can change it. Avoid entering confidential information.
      operationId: CreateCpe
      parameters:
      - description: Details for creating a CPE.
        in: body
        name: CreateCpeDetails
        required: true
        schema:
          $ref: '#/definitions/CreateCpeDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The CPE has been created.
          examples:
            application-json: |
              {
                "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "displayName" : "MyCpe",
                "id" : "ocid1.cpe.oc1.phx.aaaaaaaauceeaxawury4ri72wjcmdgqkwb3cgpj4f67fdh7kcnbay5mpk65q",
                "ipAddress" : "189.44.2.135",
                "timeCreated" : "2016-12-16T22:40:52.059Z"
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Cpe'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateCpe
      tags:
      - virtualNetwork
      x-example: |
        POST /20160918/cpes
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "ipAddress" : "189.44.2.135",
          "displayName" : "MyCpe",
          "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq"
        }
  /cpes/{cpeId}:
    delete:
      description: |
        Deletes the specified CPE object. The CPE must not be connected to a DRG. This is an asynchronous
        operation. The CPE's `lifecycleState` will change to TERMINATING temporarily until the CPE is completely
        removed.
      operationId: DeleteCpe
      parameters:
      - $ref: '#/parameters/CpeIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The CPE is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteCpe
      tags:
      - virtualNetwork
    get:
      description: Gets the specified CPE's information.
      operationId: GetCpe
      parameters:
      - $ref: '#/parameters/CpeIdPathParam'
      responses:
        200:
          description: The CPE was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Cpe'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetCpe
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the specified CPE's display name.
        Avoid entering confidential information.
      operationId: UpdateCpe
      parameters:
      - $ref: '#/parameters/CpeIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Details object for updating a CPE.
        in: body
        name: UpdateCpeDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateCpeDetails'
      responses:
        200:
          description: The CPE was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Cpe'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateCpe
      tags:
      - virtualNetwork
  /crossConnectGroups:
    get:
      description: |
        Lists the cross-connect groups in the specified compartment.
      operationId: ListCrossConnectGroups
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to return only resources that match the specified lifecycle
          state. The value is case insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/CrossConnectGroup/lifecycleState'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/CrossConnectGroup'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListCrossConnectGroups
      tags:
      - virtualNetwork
    post:
      description: |
        Creates a new cross-connect group to use with Oracle Cloud Infrastructure
        FastConnect. For more information, see
        [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).

        For the purposes of access control, you must provide the OCID of the
        compartment where you want the cross-connect group to reside. If you're
        not sure which compartment to use, put the cross-connect group in the
        same compartment with your VCN. For more information about
        compartments and access control, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm).
        For information about OCIDs, see
        [Resource Identifiers](/Content/General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the cross-connect group.
        It does not have to be unique, and you can change it. Avoid entering confidential information.
      operationId: CreateCrossConnectGroup
      parameters:
      - description: Details to create a CrossConnectGroup
        in: body
        name: CreateCrossConnectGroupDetails
        required: true
        schema:
          $ref: '#/definitions/CreateCrossConnectGroupDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The cross-connect group was created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/CrossConnectGroup'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateCrossConnectGroup
      tags:
      - virtualNetwork
  /crossConnectGroups/{crossConnectGroupId}:
    delete:
      description: |
        Deletes the specified cross-connect group. It must not contain any
        cross-connects, and it cannot be mapped to a
        [VirtualCircuit](#/en/iaas/20160918/VirtualCircuit/).
      operationId: DeleteCrossConnectGroup
      parameters:
      - $ref: '#/parameters/CrossConnectGroupIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The cross-connect group is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteCrossConnectGroup
      tags:
      - virtualNetwork
    get:
      description: Gets the specified cross-connect group's information.
      operationId: GetCrossConnectGroup
      parameters:
      - $ref: '#/parameters/CrossConnectGroupIdPathParam'
      responses:
        200:
          description: The cross-connect group was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/CrossConnectGroup'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetCrossConnectGroups
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the specified cross-connect group's display name.
        Avoid entering confidential information.
      operationId: UpdateCrossConnectGroup
      parameters:
      - $ref: '#/parameters/IfMatchHeader'
      - $ref: '#/parameters/CrossConnectGroupIdPathParam'
      - description: Update CrossConnectGroup fields
        in: body
        name: UpdateCrossConnectGroupDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateCrossConnectGroupDetails'
      responses:
        200:
          description: The cross-connect group was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/CrossConnectGroup'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateCrossConnectGroup
      tags:
      - virtualNetwork
  /crossConnectLocations:
    get:
      description: |
        Lists the available FastConnect locations for cross-connect installation. You need
        this information so you can specify your desired location when you create a cross-connect.
      operationId: ListCrossConnectLocations
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/CrossConnectLocation'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListCrossConnectLocations
      tags:
      - virtualNetwork
  /crossConnectPortSpeedShapes:
    get:
      description: |
        Lists the available port speeds for cross-connects. You need this information
        so you can specify your desired port speed (that is, shape) when you create a
        cross-connect.
      operationId: ListCrossconnectPortSpeedShapes
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/CrossConnectPortSpeedShape'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListCrossConnectPortSpeedShapes
      tags:
      - virtualNetwork
  /crossConnects:
    get:
      description: |
        Lists the cross-connects in the specified compartment. You can filter the list
        by specifying the OCID of a cross-connect group.
      operationId: ListCrossConnects
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/CrossConnectGroupIdOptionalQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to return only resources that match the specified lifecycle
          state. The value is case insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/CrossConnect/lifecycleState'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/CrossConnect'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListCrossConnects
      tags:
      - virtualNetwork
    post:
      description: |
        Creates a new cross-connect. Oracle recommends you create each cross-connect in a
        [CrossConnectGroup](#/en/iaas/20160918/CrossConnectGroup) so you can use link aggregation
        with the connection.

        After creating the `CrossConnect` object, you need to go the FastConnect location
        and request to have the physical cable installed. For more information, see
        [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).

        For the purposes of access control, you must provide the OCID of the
        compartment where you want the cross-connect to reside. If you're
        not sure which compartment to use, put the cross-connect in the
        same compartment with your VCN. For more information about
        compartments and access control, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm).
        For information about OCIDs, see
        [Resource Identifiers](/Content/General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the cross-connect.
        It does not have to be unique, and you can change it. Avoid entering confidential information.
      operationId: CreateCrossConnect
      parameters:
      - description: Details to create a CrossConnect
        in: body
        name: CreateCrossConnectDetails
        required: true
        schema:
          $ref: '#/definitions/CreateCrossConnectDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The cross-connect was created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/CrossConnect'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateCrossConnect
      tags:
      - virtualNetwork
  /crossConnects/{crossConnectId}:
    delete:
      description: |
        Deletes the specified cross-connect. It must not be mapped to a
        [VirtualCircuit](#/en/iaas/20160918/VirtualCircuit/).
      operationId: DeleteCrossConnect
      parameters:
      - $ref: '#/parameters/CrossConnectIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The cross-connect is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteCrossConnect
      tags:
      - virtualNetwork
    get:
      description: Gets the specified cross-connect's information.
      operationId: GetCrossConnect
      parameters:
      - $ref: '#/parameters/CrossConnectIdPathParam'
      responses:
        200:
          description: The cross-connect was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/CrossConnect'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetCrossConnect
      tags:
      - virtualNetwork
    put:
      description: Updates the specified cross-connect.
      operationId: UpdateCrossConnect
      parameters:
      - $ref: '#/parameters/CrossConnectIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Update CrossConnect fields.
        in: body
        name: UpdateCrossConnectDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateCrossConnectDetails'
      responses:
        200:
          description: The cross-connect was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/CrossConnect'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateCrossConnect
      tags:
      - virtualNetwork
  /crossConnects/{crossConnectId}/letterOfAuthority:
    get:
      description: Gets the Letter of Authority for the specified cross-connect.
      operationId: GetCrossConnectLetterOfAuthority
      parameters:
      - $ref: '#/parameters/CrossConnectIdPathParam'
      produces:
      - application/json
      - text/html
      responses:
        200:
          description: The Letter of Authority was retrieved.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/LetterOfAuthority'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetCrossConnectLetterOfAuthority
      tags:
      - virtualNetwork
  /crossConnects/{crossConnectId}/status:
    get:
      description: |
        Gets the status of the specified cross-connect.
      operationId: GetCrossConnectStatus
      parameters:
      - $ref: '#/parameters/CrossConnectIdPathParam'
      responses:
        200:
          description: The cross-connect's status was retrieved.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/CrossConnectStatus'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetCrossConnectStatus
      tags:
      - virtualNetwork
  /dhcps:
    get:
      description: |
        Lists the sets of DHCP options in the specified VCN and specified compartment.
        The response includes the default set of options that automatically comes with each VCN,
        plus any other sets you've created.
      operationId: ListDhcpOptions
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/VcnIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to only return resources that match the given lifecycle
          state.  The state value is case-insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/DhcpOptions/lifecycleState'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/DhcpOptions'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListDhcpOptions
      tags:
      - virtualNetwork
    post:
      description: |
        Creates a new set of DHCP options for the specified VCN. For more information, see
        [DhcpOptions](#/en/iaas/20160918/DhcpOptions/).

        For the purposes of access control, you must provide the OCID of the compartment where you want the set of
        DHCP options to reside. Notice that the set of options doesn't have to be in the same compartment as the VCN,
        subnets, or other Networking Service components. If you're not sure which compartment to use, put the set
        of DHCP options in the same compartment as the VCN. For more information about compartments and access control, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm). For information about OCIDs, see
        [Resource Identifiers](/Content/General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the set of DHCP options, otherwise a default is provided.
        It does not have to be unique, and you can change it. Avoid entering confidential information.
      operationId: CreateDhcpOptions
      parameters:
      - description: Request object for creating a new set of DHCP options.
        in: body
        name: CreateDhcpDetails
        required: true
        schema:
          $ref: '#/definitions/CreateDhcpDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The set of DHCP options has been created.
          examples:
            application-json: |
              {
                "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "displayName" : "MyDhcpOptions",
                "id" : "ocid1.dhcpoptions.oc1.phx.aaaaaaaahz5gthdbz2dx2cmdn2med57jjxzvspq563ziwro4jnxua7yvlg3q",
                "lifecycleState" : "AVAILABLE",
                "options" : [{
                  "type" : "DomainNameServer",
                  "customDnsServers" : ["202.44.61.9"],
                  "serverType":"CustomDnsServer"
                }],
                "timeCreated" : "2016-12-17T01:31:50.047Z",
                "vcnId" : "ocid1.vcn.oc1.phx.aaaaaaaamzvcg26irmlpkcmdzs33fb43lv2ej4lxshrdgpzvxsmb7zn427ma"
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/DhcpOptions'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateDhcpOptions
      tags:
      - virtualNetwork
      x-example: |
        POST /20160918/dhcps
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "options" : [{
            "type" : "DomainNameServer",
            "customDnsServers" : ["202.44.61.9"],
            "serverType" : "CustomDnsServer"
          }],
          "vcnId" : "ocid1.vcn.oc1.phx.aaaaaaaamzvcg26irmlpkcmdzs33fb43lv2ej4lxshrdgpzvxsmb7zn427ma",
          "displayName" : "MyDhcpOptions",
          "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq"
        }
  /dhcps/{dhcpId}:
    delete:
      description: |
        Deletes the specified set of DHCP options, but only if it's not associated with a subnet. You can't delete a
        VCN's default set of DHCP options.

        This is an asynchronous operation. The state of the set of options will switch to TERMINATING temporarily
        until the set is completely removed.
      operationId: DeleteDhcpOptions
      parameters:
      - $ref: '#/parameters/DhcpIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The set of DHCP options is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteDhcpOptions
      tags:
      - virtualNetwork
    get:
      description: Gets the specified set of DHCP options.
      operationId: GetDhcpOptions
      parameters:
      - $ref: '#/parameters/DhcpIdPathParam'
      responses:
        200:
          description: The set of DHCP options was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/DhcpOptions'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetDhcpOptions
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the specified set of DHCP options. You can update the display name or the options
        themselves. Avoid entering confidential information.

        Note that the `options` object you provide replaces the entire existing set of options.
      operationId: UpdateDhcpOptions
      parameters:
      - $ref: '#/parameters/DhcpIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Request object for updating a set of DHCP options.
        in: body
        name: UpdateDhcpDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateDhcpDetails'
      responses:
        200:
          description: The set of DHCP options was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/DhcpOptions'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateDhcpOptions
      tags:
      - virtualNetwork
      x-related-resource: '#/definitions/DhcpOptions'
  /drgAttachments:
    get:
      description: |
        Lists the `DrgAttachment` objects for the specified compartment. You can filter the
        results by VCN or DRG.
      operationId: ListDrgAttachments
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/VcnIdOptionalQueryParam'
      - $ref: '#/parameters/DrgIdOptionalQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/DrgAttachment'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListDrgAttachments
      tags:
      - virtualNetwork
    post:
      description: |
        Attaches the specified DRG to the specified VCN. A VCN can be attached to only one DRG at a time,
        and vice versa. The response includes a `DrgAttachment` object with its own OCID. For more
        information about DRGs, see
        [Dynamic Routing Gateways (DRGs)](/Content/Network/Tasks/managingDRGs.htm).

        You may optionally specify a *display name* for the attachment, otherwise a default is provided.
        It does not have to be unique, and you can change it. Avoid entering confidential information.

        For the purposes of access control, the DRG attachment is automatically placed into the same compartment
        as the VCN. For more information about compartments and access control, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm).
      operationId: CreateDrgAttachment
      parameters:
      - description: Details for creating a `DrgAttachment`.
        in: body
        name: CreateDrgAttachmentDetails
        required: true
        schema:
          $ref: '#/definitions/CreateDrgAttachmentDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The DRG was attached.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/DrgAttachment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateDrgAttachment
      tags:
      - virtualNetwork
  /drgAttachments/{drgAttachmentId}:
    delete:
      description: |
        Detaches a DRG from a VCN by deleting the corresponding `DrgAttachment`. This is an asynchronous
        operation. The attachment's `lifecycleState` will change to DETACHING temporarily until the attachment
        is completely removed.
      operationId: DeleteDrgAttachment
      parameters:
      - $ref: '#/parameters/DrgAttachmentIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The DRG is being detached.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteDrgAttachment
      tags:
      - virtualNetwork
    get:
      description: Gets the information for the specified `DrgAttachment`.
      operationId: GetDrgAttachment
      parameters:
      - $ref: '#/parameters/DrgAttachmentIdPathParam'
      responses:
        200:
          description: The `DrgAttachment` was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/DrgAttachment'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetDrgAttachment
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the display name for the specified `DrgAttachment`.
        Avoid entering confidential information.
      operationId: UpdateDrgAttachment
      parameters:
      - $ref: '#/parameters/DrgAttachmentIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Details object for updating a `DrgAttachment`.
        in: body
        name: UpdateDrgAttachmentDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateDrgAttachmentDetails'
      responses:
        200:
          description: The `DrgAttachment` was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/DrgAttachment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateDrgAttachment
      tags:
      - virtualNetwork
  /drgs:
    get:
      description: |
        Lists the DRGs in the specified compartment.
      operationId: ListDrgs
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/Drg'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListDrgs
      tags:
      - virtualNetwork
    post:
      description: |
        Creates a new Dynamic Routing Gateway (DRG) in the specified compartment. For more information,
        see [Dynamic Routing Gateways (DRGs)](/Content/Network/Tasks/managingDRGs.htm).

        For the purposes of access control, you must provide the OCID of the compartment where you want
        the DRG to reside. Notice that the DRG doesn't have to be in the same compartment as the VCN,
        the DRG attachment, or other Networking Service components. If you're not sure which compartment
        to use, put the DRG in the same compartment as the VCN. For more information about compartments
        and access control, see [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm).
        For information about OCIDs, see [Resource Identifiers](/Content/General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the DRG, otherwise a default is provided.
        It does not have to be unique, and you can change it. Avoid entering confidential information.
      operationId: CreateDrg
      parameters:
      - description: Details for creating a DRG.
        in: body
        name: CreateDrgDetails
        required: true
        schema:
          $ref: '#/definitions/CreateDrgDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The DRG was created.
          examples:
            application-json: |
              {
                "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "displayName" : "MyDrg",
                "id" : "ocid1.drg.oc1.phx.aaaaaaaabxstxix6rsvg4fisjgmcmdzdl6dscqfrm77ag3s57hlobj6xvfswq",
                "lifecycleState" : "PROVISIONING",
                "timeCreated" : "2016-12-16T22:34:20.948Z"
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Drg'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateDrg
      tags:
      - virtualNetwork
      x-example: |
        POST /20160918/drgs
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "displayName" : "MyDrg",
          "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq"
        }
  /drgs/{drgId}:
    delete:
      description: |
        Deletes the specified DRG. The DRG must not be attached to a VCN or be connected to your on-premise
        network. Also, there must not be a route table that lists the DRG as a target. This is an asynchronous
        operation. The DRG's `lifecycleState` will change to TERMINATING temporarily until the DRG is completely
        removed.
      operationId: DeleteDrg
      parameters:
      - $ref: '#/parameters/DrgIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The DRG is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteDrg
      tags:
      - virtualNetwork
    get:
      description: Gets the specified DRG's information.
      operationId: GetDrg
      parameters:
      - $ref: '#/parameters/DrgIdPathParam'
      responses:
        200:
          description: The DRG was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Drg'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetDrg
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the specified DRG's display name. Avoid entering confidential information.
      operationId: UpdateDrg
      parameters:
      - $ref: '#/parameters/DrgIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Details object for updating a DRG.
        in: body
        name: UpdateDrgDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateDrgDetails'
      responses:
        200:
          description: The DRG was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Drg'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateDrg
      tags:
      - virtualNetwork
  /fastConnectProviderServices:
    get:
      description: |
        Lists the service offerings from supported providers. You need this
        information so you can specify your desired provider and service
        offering when you create a virtual circuit.

        For the compartment ID, provide the OCID of your tenancy (the root compartment).

        For more information, see [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).
      operationId: ListFastConnectProviderServices
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/FastConnectProviderService'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListFastConnectProviderServices
      tags:
      - virtualNetwork
  /fastConnectProviderServices/{providerServiceId}:
    get:
      description: |
        Gets the specified provider service.
        For more information, see [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).
      operationId: GetFastConnectProviderService
      parameters:
      - $ref: '#/parameters/ProviderServiceIdPathParam'
      responses:
        200:
          description: The provider service is being retrieved.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/FastConnectProviderService'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetFastConnectProviderService
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-645
  /fastConnectProviderServices/{providerServiceId}/virtualCircuitBandwidthShapes:
    get:
      description: |
        Gets the list of available virtual circuit bandwidth levels for a provider.
        You need this information so you can specify your desired bandwidth level (shape) when you create a virtual circuit.

        For more information about virtual circuits, see [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).
      operationId: ListFastConnectProviderVirtualCircuitBandwidthShapes
      parameters:
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/ProviderServiceIdPathParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/VirtualCircuitBandwidthShape'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListFastConnectProviderVirtualCircuitBandwidthShapes
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-645
      x-related-resource: '#/definitions/FastConnectProviderService'
  /images:
    get:
      description: |
        Lists the available images in the specified compartment.
        If you specify a value for the `sortBy` parameter, Oracle-provided images appear first in the list, followed by custom images.
        For more
        information about images, see
        [Managing Custom Images](/Content/Compute/Tasks/managingcustomimages.htm).
      operationId: ListImages
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/OperatingSystemQueryParam'
      - $ref: '#/parameters/OperatingSystemVersionQueryParam'
      - $ref: '#/parameters/ShapeNameQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to only return resources that match the given lifecycle
          state.  The state value is case-insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/Image/lifecycleState'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/Image'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListImages
      tags:
      - compute
    post:
      description: |
        Creates a boot disk image for the specified instance or imports an exported image from the Oracle Cloud Infrastructure Object Storage service.

        When creating a new image, you must provide the OCID of the instance you want to use as the basis for the image, and
        the OCID of the compartment containing that instance. For more information about images,
        see [Managing Custom Images](/Content/Compute/Tasks/managingcustomimages.htm).

        When importing an exported image from Object Storage, you specify the source information
        in [ImageSourceDetails](#/en/iaas/latest/requests/ImageSourceDetails).

        When importing an image based on the namespace, bucket name, and object name,
        use [ImageSourceViaObjectStorageTupleDetails](#/en/iaas/latest/requests/ImageSourceViaObjectStorageTupleDetails).

        When importing an image based on the Object Storage URL, use
        [ImageSourceViaObjectStorageUriDetails](#/en/iaas/latest/requests/ImageSourceViaObjectStorageUriDetails).
        See [Object Storage URLs](/Content/Compute/Tasks/imageimportexport.htm#URLs) and [pre-authenticated requests](/Content/Object/Tasks/managingaccess.htm#pre-auth)
        for constructing URLs for image import/export.

        For more information about importing exported images, see
        [Image Import/Export](/Content/Compute/Tasks/imageimportexport.htm).

        You may optionally specify a *display name* for the image, which is simply a friendly name or description.
        It does not have to be unique, and you can change it. See [UpdateImage](#/en/iaas/20160918/Image/UpdateImage).
        Avoid entering confidential information.
      operationId: CreateImage
      parameters:
      - $ref: '#/parameters/RetryTokenHeader'
      - description: Image creation details
        in: body
        name: CreateImageDetails
        required: true
        schema:
          $ref: '#/definitions/CreateImageDetails'
      responses:
        200:
          description: The image is being created.
          examples:
            application-json: |
              Example 1 response: Create new image for specified instance.
              {
                "baseImageId": "ocid1.image.oc1.phx.aaaaaaaasx242pybtwuqgsvmcxrnu53bu6sdamv2ehtqvuvivmvmo6cizavq",
                "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "createImageAllowed": true,
                "displayName": "MyCustomImage",
                "id": "ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq",
                "lifecycleState": "PROVISIONING",
                "timeCreated": "2016-10-03T17:04:47.627Z"
              }

              Examples 2 and 3 response: Import exported image.
              {
                "baseImageId": null,
                "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "createImageAllowed": true,
                "displayName": "MyCustomImage",
                "id": "ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq",
                "lifecycleState": "IMPORTING",
                "timeCreated": "2016-10-03T17:04:47.627Z"
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Image'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateImage
      tags:
      - compute
      x-example: |
        Example 1 request: Create new image for specified instance.
        POST /20160918/images
        {
          "instanceId": "ocid1.instance.oc1.phx.abyhqljrqyriphyccj75yut36ybxmlfgawtl7m77vqanhg6w4bdszaitd3da",
          "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
          "displayName": "MyCustomImage"
        }

        Example 2 request: Import image using the namespace, bucket name, and object name.
        POST /20160918/images
        {
          "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
          "imageSourceDetails": {
              "objectName": "image-to-import.qcow2",
              "bucketName": "MyBucket",
              "namespaceName": "MyNamespace",
              "sourceType": "objectStorageTuple"
          }
        }

        Example 3 request: Import image using the Object Storage URL.
        POST /20160918/images
        {
          "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
          "displayName": "MyImportedImage",
          "imageSourceDetails": {
              "sourceUri": "https://objectstorage.us-phoenix-1.oraclecloud.com/n/MyNamespace/b/MyBucket/o/image-to-import.qcow2",
              "sourceType": "objectStorageUri"
            }
        }
  /images/{imageId}:
    delete:
      description: Deletes an image.
      operationId: DeleteImage
      parameters:
      - $ref: '#/parameters/ImageIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The image is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteImage
      tags:
      - compute
    get:
      description: Gets the specified image.
      operationId: GetImage
      parameters:
      - $ref: '#/parameters/ImageIdPathParam'
      responses:
        200:
          description: The image was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Image'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetImage
      tags:
      - compute
    put:
      description: Updates the display name of the image. Avoid entering confidential
        information.
      operationId: UpdateImage
      parameters:
      - $ref: '#/parameters/ImageIdPathParam'
      - $ref: '#/parameters/RetryTokenHeader'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Updates the image display name field. Avoid entering confidential
          information.
        in: body
        name: UpdateImageDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateImageDetails'
      responses:
        200:
          description: The image name was updated.
          examples:
            application-json: |
              {
                "baseImageId": null,
                "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "createImageAllowed": true,
                "displayName": "MyFavoriteImage",
                "id": "ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq",
                "lifecycleState": "AVAILABLE",
                "timeCreated": "2016-10-03T17:04:47.627Z"
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Image'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateImage
      tags:
      - compute
      x-example: |
        PUT /20160918/images/ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq
        {
          "displayName": "MyFavoriteImage"
        }
  /images/{imageId}/actions/export:
    post:
      description: |
        Exports the specified image to the Oracle Cloud Infrastructure Object Storage service. You can use the Object Storage URL,
        or the namespace, bucket name, and object name when specifying the location to export to.

        For more information about exporting images, see [Image Import/Export](/Content/Compute/Tasks/imageimportexport.htm).

        To perform an image export, you need write access to the Object Storage bucket for the image,
        see [Let Users Write Objects to Object Storage Buckets](/Content/Identity/Concepts/commonpolicies.htm#Let4).

        See [Object Storage URLs](/Content/Compute/Tasks/imageimportexport.htm#URLs) and [pre-authenticated requests](/Content/Object/Tasks/managingaccess.htm#pre-auth)
        for constructing URLs for image import/export.
      operationId: ExportImage
      parameters:
      - $ref: '#/parameters/ImageIdPathParam'
      - $ref: '#/parameters/RetryTokenHeader'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Details for the image export.
        in: body
        name: ExportImageDetails
        required: true
        schema:
          $ref: '#/definitions/ExportImageDetails'
      responses:
        200:
          description: The export is being performed.
          examples:
            application-json: |
              {
                "baseImageId": null,
                "compartmentId": "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "createImageAllowed": true,
                "displayName": "MyCustomImage",
                "id": "ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq",
                "lifecycleState": "EXPORTING",
                "timeCreated": "2016-10-03T17:04:47.627Z"
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Image'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ExportImage
      tags:
      - compute
      x-example: |
        Example 1 request: Export image using the namespace, bucket name, and object name.
        POST /20160918/images/ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq/actions/export
        {
          "objectName": "exported-image.qcow2",
          "bucketName": "MyBucket",
          "namespaceName": "MyNamespace",
          "destinationType": "objectStorageTuple"
        }

        Example 2 request: Export image using the Object Storage URL.
        POST /20160918/images/ocid1.image.oc1.phx.aaaaaaaa75r7njv2xtldlskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq/actions/export
        {
          "destinationUri": "https://objectstorage.us-phoenix-1.oraclecloud.com/n/MyNamespace/b/MyBucket/o/exported-image.qcow2",
          "destinationType": "objectStorageUri"
        }
  /images/{imageId}/shapes/{shapeName}:
    delete:
      description: Removes a shape from the compatible shapes list for the image.
      operationId: RemoveImageShapeCompatibilityEntry
      parameters:
      - $ref: '#/parameters/ImageIdPathParam'
      - $ref: '#/parameters/ShapeNamePathParam'
      responses:
        204:
          description: The shape has been removed from the compatible shapes list.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: RemoveImageShapeCompatibilityEntry
      tags:
      - compute
      x-obmcs-preview-only: true
    put:
      description: Adds a shape to the compatible shapes list for the image.
      operationId: AddImageShapeCompatibilityEntry
      parameters:
      - $ref: '#/parameters/ImageIdPathParam'
      - $ref: '#/parameters/ShapeNamePathParam'
      responses:
        200:
          description: The shape has been added to the compatible shapes list.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/ImageShapeCompatibilityEntry'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: AddImageShapeCompatibilityEntry
      tags:
      - compute
      x-obmcs-preview-only: true
  /instanceConsoleConnections:
    get:
      description: |
        Lists the console connections for the specified compartment or instance.

        For more information about console access, see [Accessing the Instance Console](/Content/Compute/References/serialconsole.htm).
      operationId: ListInstanceConsoleConnections
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/InstanceIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          examples:
            application-json: |
              [
                {
                    "compartmentId": "ocid1.compartment.oc1..aaaaaaaarmxxpoknfudl5odjs2samplecveuzzgzry6u2fjuqgw66cdacm2dq",
                    "connectionString": "ssh -o ProxyCommand='ssh -W %h:%p -p 443 ocid1.instanceconsoleconnection.oc1.iad.abyhqljrqyriphycjo2stam6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da@instance-console.us-ashburn-1.oraclecloud.com' ocid1.instance.oc1.iad.aaaaaaaa75r7njv2xtldljo2sampleskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq",
                    "fingerprint": "4a:46:c1:72:14:de:9f:a8:fe:89:a9:6c:6c:63:77:83",
                    "id": "ocid1.instanceconsoleconnection.oc1.iad.abyhqljrqyriphycjo2stam6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da",
                    "instanceId": "ocid1.instance.oc1.iad.aaaaaaaa75r7njv2xtldljo2sampleskpdsdr2ah7y53a4ywtp4svc4tqpmyzxhtzdoiq",
                    "lifecycleState": "ACTIVE",
                }
                {
                    "compartmentId": "ocid1.compartment.oc1..aaaaaaaarmxxpoknfudl5odjs2samplecveuzzgzry6u2fjuqgw66cdacm2dq",
                    "connectionString": "ssh -o ProxyCommand='ssh -W %h:%p -p 443 ocid1.instanceconsoleconnection.oc1.iad.abuwcljtrhq56odqlarjo2samplelflwcabrjpcfoiwcqu3uraqbjv3yu53q@instance-console.us-ashburn-1.oraclecloud.com' ocid1.instance.oc1.iad.abuwcljtt5nmttyrqw73hw6c2jo2sampleoapfzs3moucqjduvafihse3wa55jvu7a",
                    "fingerprint": "4a:46:c1:72:14:de:9f:a8:fe:89:a9:6c:6c:63:77:83",
                    "id": "ocid1.instanceconsoleconnection.oc1.iad.abuwcljtrhq56odqlarjo2samplelflwcabrjpcfoiwcqu3uraqbjv3yu53q",
                    "instanceId": "ocid1.instance.oc1.iad.abuwcljtt5nmttyrqw73hw6c2jo2sampleoapfzs3moucqjduvafihse3wa55jvu7a",
                    "lifecycleState": "DELETED",
                }
              ]
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/InstanceConsoleConnection'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListInstanceConsoleConnections
      tags:
      - compute
      x-example: |
        GET /20160918/instanceConsoleConnections?compartmentId=ocid1.compartment.oc1..aaaaaaaarmxxpoknfudl5odjs2samplecveuzzgzry6u2fjuqgw66cdacm2dq
    post:
      description: |
        Creates a new console connection to the specified instance.
        Once the console connection has been created and is available,
        you connect to the console using SSH.

        For more information about console access, see [Accessing the Console](/Content/Compute/References/serialconsole.htm).
      operationId: CreateInstanceConsoleConnection
      parameters:
      - description: Request object for creating an InstanceConsoleConnection
        in: body
        name: CreateInstanceConsoleConnectionDetails
        required: true
        schema:
          $ref: '#/definitions/CreateInstanceConsoleConnectionDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The instance console connection is being configured.
          examples:
            application-json: |
              {
                "compartmentId": "ocid1.compartment.oc1..aaaaaaaarmxxpoknfudl5odjs2samplecveuzzgzry6u2fjuqgw66cdacm2dq",
                "connectionString": "ssh -o ProxyCommand='ssh -W %h:%p -p 443 ocid1.instanceconsoleconnection.oc1.iad.abuwcljtllmj26i65ggjs2samplezn43r7d5zkuzj3pfjv2dcervi77p4va@instance-console.us-ashburn-1.oraclecloud.com' ocid1.instance.oc1.iad.abyhqljrqyriphycjo75stam6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da",
                "fingerprint": "4a:46:c1:72:14:de:9f:a8:fe:89:a9:6c:6c:63:77:83",
                "id": "ocid1.instanceconsoleconnection.oc1.iad.abuwcljtllmj26i65ggjs2samplezn43r7d5zkuzj3pfjv2dcervi77p4va",
                "instanceId": "ocid1.instance.oc1.iad.abyhqljrqyriphycjo75stam6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da",
                "lifecycleState": "CREATING",
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/InstanceConsoleConnection'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateInstanceConsoleConnection
      tags:
      - compute
      x-example: |
        POST /20160918/instanceConsoleConnections
        {
          "instanceId":"ocid1.instance.oc1.phx.abyhqljrqyriphycjo75stam6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da",
          "publicKey":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCZ06fccNTQfq+xubFlJ5ZR3kt+uzspdH9tXL+lAejSM1NXM+CFZev7MIxfEjas06y80ZBZ7DUTQO0GsampleVorF8M4xuLwrmzRtkoZzU16umt4y1W0Q4ifdp3IiiU0U8/WxczSXcUVZOLqkz5dc6oMHdMVpkimietWzGZ4LBBsH/LjEVY7E0V+a0sNchlVDIZcm7ErReBLcdTGDq0uLBiuChyl6RUkX1PNhusquTGwK7zc8OBXkRuubn5UKXhI3Ul9Nyk4XESkVWIGNKmw8mSpoJSjR8P9ZjRmcZVo8S+x4KVPMZKQEor== smith@company.com 8GnoV/6Ox6TNoh9BiifqGKC9VGYuC89RvUajRBTZSK2TK4DPfaT+2R+slPsFrwiT/oPEhhEK1S5Q== rsa-key-20160227"
        }
  /instanceConsoleConnections/{instanceConsoleConnectionId}:
    delete:
      description: Deletes the specified instance console connection.
      operationId: DeleteInstanceConsoleConnection
      parameters:
      - $ref: '#/parameters/InstanceConsoleConnectionIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The instance console connection is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteInstanceConsoleConnection
      tags:
      - compute
      x-example: |
        DELETE /20160918/instanceConsoleConnections/ocid1.instanceconsoleconnection.iad.abyhqljrqyriphycjo2sample6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da
    get:
      description: Gets the specified instance console connection's information.
      operationId: GetInstanceConsoleConnection
      parameters:
      - $ref: '#/parameters/InstanceConsoleConnectionIdPathParam'
      responses:
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        '200':
          description: The instance console connection was retrieved.
          examples:
            application-json: |
              {
                "compartmentId": "ocid1.compartment.oc1..aaaaaaaarmxxpoknfudl5odjs2samplecveuzzgzry6u2fjuqgw66cdacm2dq",
                "connectionString": "ssh -o ProxyCommand='ssh -W %h:%p -p 443 ocid1.instanceconsoleconnection.oc1.iad.abuwcljtllmj26i65ggjs2samplezn43r7d5zkuzj3pfjv2dcervi77p4va@instance-console.us-ashburn-1.oraclecloud.com' ocid1.instance.oc1.iad.abuwcljtt5nmtjs2sampleom6oapfzs3moucqjduvafihse3wa55jvu7a",
                "fingerprint": "4a:46:c1:72:45:de:9f:a8:fe:89:a9:6c:6c:63:77:25",
                "id": "ocid1.instanceconsoleconnection.oc1.iad.abuwcljtllmj26i65ggjs2samplezn43r7d5zkuzj3pfjv2dcervi77p4va",
                "instanceId": "ocid1.instance.oc1.iad.abuwcljtt5nmtjs2sampleom6oapfzs3moucqjduvafihse3wa55jvu7a",
                "lifecycleState": "ACTIVE",
              }
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/InstanceConsoleConnection'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetInstanceConsoleConnection
      tags:
      - compute
      x-example: |
        GET /20160918/instanceConsoleConnections/ocid1.instanceconsoleconnection.iad.abyhqljrqyriphycjo2sample6ybxmlfgawtl7m77vqanhg6w4bdszaitd3da
  /instanceConsoleHistories/:
    get:
      description: |
        Lists the console history metadata for the specified compartment or instance.
      operationId: ListConsoleHistories
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/InstanceIdQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to only return resources that match the given lifecycle
          state.  The state value is case-insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/ConsoleHistory/lifecycleState'
      responses:
        200:
          description: The metadata is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/ConsoleHistory'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListConsoleHistories
      tags:
      - compute
    post:
      description: |
        Captures the most recent serial console data (up to a megabyte) for the
        specified instance.

        The `CaptureConsoleHistory` operation works with the other console history operations
        as described below.

        1. Use `CaptureConsoleHistory` to request the capture of up to a megabyte of the
        most recent console history. This call returns a `ConsoleHistory`
        object. The object will have a state of REQUESTED.
        2. Wait for the capture operation to succeed by polling `GetConsoleHistory` with
        the identifier of the console history metadata. The state of the
        `ConsoleHistory` object will go from REQUESTED to GETTING-HISTORY and
        then SUCCEEDED (or FAILED).
        3. Use `GetConsoleHistoryContent` to get the actual console history data (not the
        metadata).
        4. Optionally, use `DeleteConsoleHistory` to delete the console history metadata
        and the console history data.
      operationId: CaptureConsoleHistory
      parameters:
      - $ref: '#/parameters/RetryTokenHeader'
      - description: Console history details
        in: body
        name: CaptureConsoleHistoryDetails
        required: true
        schema:
          $ref: '#/definitions/CaptureConsoleHistoryDetails'
      responses:
        200:
          description: The console history is being captured.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/ConsoleHistory'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CaptureConsoleHistory
      tags:
      - compute
  /instanceConsoleHistories/{instanceConsoleHistoryId}:
    delete:
      description: Deletes the specified console history metadata and the console
        history data.
      operationId: DeleteConsoleHistory
      parameters:
      - $ref: '#/parameters/InstanceConsoleHistoryIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The information is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteConsoleHistory
      tags:
      - compute
      x-related-resource: '#/definitions/ConsoleHistory'
    get:
      description: |
        Shows the metadata for the specified console history.
        See [CaptureConsoleHistory](#/en/iaas/20160918/ConsoleHistory/CaptureConsoleHistory)
        for details about using the console history operations.
      operationId: GetConsoleHistory
      parameters:
      - $ref: '#/parameters/InstanceConsoleHistoryIdPathParam'
      responses:
        200:
          description: Console history metadata
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/ConsoleHistory'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetConsoleHistory
      tags:
      - compute
    put:
      description: Updates the specified console history metadata.
      operationId: UpdateConsoleHistory
      parameters:
      - $ref: '#/parameters/IfMatchHeader'
      - $ref: '#/parameters/InstanceConsoleHistoryIdPathParam'
      - description: Update instance fields
        in: body
        name: UpdateConsoleHistoryDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateConsoleHistoryDetails'
      responses:
        200:
          description: The request was accepted by the server
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/ConsoleHistory'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateConsoleHistory
      tags:
      - compute
  /instanceConsoleHistories/{instanceConsoleHistoryId}/data:
    get:
      description: |
        Gets the actual console history data (not the metadata).
        See [CaptureConsoleHistory](#/en/iaas/20160918/ConsoleHistory/CaptureConsoleHistory)
        for details about using the console history operations.
      operationId: GetConsoleHistoryContent
      parameters:
      - $ref: '#/parameters/InstanceConsoleHistoryIdPathParam'
      - description: Offset of the snapshot data to retrieve.
        format: int32
        in: query
        minimum: 0
        name: offset
        type: integer
      - description: Length of the snapshot data to retrieve.
        format: int32
        in: query
        minimum: 10240
        name: length
        type: integer
      responses:
        200:
          description: The information is being retrieved.
          headers:
            opc-bytes-remaining:
              description: The number of bytes remaining in the snapshot.
              format: int32
              type: integer
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            type: string
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetConsoleHistoryContent
      tags:
      - compute
      x-related-resource: '#/definitions/ConsoleHistory'
  /instances/:
    get:
      description: |
        Lists the instances in the specified compartment and the specified Availability Domain.
        You can filter the results by specifying an instance name (the list will include all the identically-named
        instances in the compartment).
      operationId: ListInstances
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to only return resources that match the given lifecycle
          state.  The state value is case-insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/Instance/lifecycleState'
      produces:
      - application/json
      - application/x-json-stream
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/Instance'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListInstances
      tags:
      - compute
    post:
      description: |
        Creates a new instance in the specified compartment and the specified Availability Domain.
        For general information about instances, see
        [Overview of the Compute Service](/Content/Compute/Concepts/computeoverview.htm).

        For information about access control and compartments, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm).

        For information about Availability Domains, see
        [Regions and Availability Domains](/Content/General/Concepts/regions.htm).
        To get a list of Availability Domains, use the `ListAvailabilityDomains` operation
        in the Identity and Access Management Service API.

        All Oracle Cloud Infrastructure resources, including instances, get an Oracle-assigned,
        unique ID called an Oracle Cloud Identifier (OCID).
        When you create a resource, you can find its OCID in the response. You can
        also retrieve a resource's OCID by using a List API operation
        on that resource type, or by viewing the resource in the Console.

        To launch an instance using an image or a boot volume use the `sourceDetails` parameter in [LaunchInstanceDetails](#/en/iaas/20160918/LaunchInstanceDetails).

        When you launch an instance, it is automatically attached to a virtual
        network interface card (VNIC), called the *primary VNIC*. The VNIC
        has a private IP address from the subnet's CIDR. You can either assign a
        private IP address of your choice or let Oracle automatically assign one.
        You can choose whether the instance has a public IP address. To retrieve the
        addresses, use the [ListVnicAttachments](#/en/iaas/20160918/VnicAttachment/ListVnicAttachments)
        operation to get the VNIC ID for the instance, and then call
        [GetVnic](#/en/iaas/20160918/Vnic/GetVnic) with the VNIC ID.

        You can later add secondary VNICs to an instance. For more information, see
        [Virtual Network Interface Cards (VNICs)](/Content/Network/Tasks/managingVNICs.htm).
      operationId: LaunchInstance
      parameters:
      - $ref: '#/parameters/RetryTokenHeader'
      - $ref: '#/parameters/OpcPoolNameQueryParam'
      - description: Instance details
        in: body
        name: LaunchInstanceDetails
        required: true
        schema:
          $ref: '#/definitions/LaunchInstanceDetails'
      responses:
        200:
          description: The instance is being launched.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Instance'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: LaunchInstance
      tags:
      - compute
  /instances/{instanceId}:
    delete:
      description: |
        Terminates the specified instance. Any attached VNICs and volumes are automatically detached
        when the instance terminates.

        To preserve the boot volume associated with the instance, specify `true` for `PreserveBootVolumeQueryParam`.
        To delete the boot volume when the instance is deleted, specify `false` or do not specify a value for `PreserveBootVolumeQueryParam`.

        This is an asynchronous operation. The instance's `lifecycleState` will change to TERMINATING temporarily
        until the instance is completely removed.
      operationId: TerminateInstance
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - $ref: '#/parameters/PreserveBootVolumeQueryParam'
      responses:
        204:
          description: The instance is being terminated.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: TerminateInstance
      tags:
      - compute
    get:
      description: Gets information about the specified instance.
      operationId: GetInstance
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      responses:
        200:
          description: The instance was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Instance'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetInstance
      tags:
      - compute
    post:
      description: |
        Performs one of the power actions (start, stop, softreset, or reset)
        on the specified instance.

        **start** - power on

        **stop** - power off

        **softreset** - ACPI shutdown and power on

        **reset** - power off and power on

        Note that the **stop** state has no effect on the resources you consume.
        Billing continues for instances that you stop, and related resources continue
        to apply against any relevant quotas. You must terminate an instance
        ([TerminateInstance](#/en/iaas/20160918/Instance/TerminateInstance))
        to remove its resources from billing and quotas.
      operationId: InstanceAction
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      - $ref: '#/parameters/InstanceActionQueryParam'
      - $ref: '#/parameters/RetryTokenHeader'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The action is being performed.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Instance'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: InstanceAction
      tags:
      - compute
    put:
      description: |
        Updates the display name of the specified instance. Avoid entering confidential information.
        The OCID of the instance remains the same.
      operationId: UpdateInstance
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      - $ref: '#/parameters/RetryTokenHeader'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Update instance fields
        in: body
        name: UpdateInstanceDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateInstanceDetails'
      responses:
        200:
          description: The instance was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Instance'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateInstance
      tags:
      - compute
  /instances/{instanceId}/initialCredentials:
    get:
      description: |
        Gets the generated credentials for the instance. Only works for Windows instances. The returned credentials
        are only valid for the initial login.
      operationId: GetWindowsInstanceInitialCredentials
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      responses:
        200:
          description: The credentials were retrieved.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/InstanceCredentials'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetWindowsInstanceInitialCredentials
      tags:
      - compute
  /internetGateways:
    get:
      description: |
        Lists the Internet Gateways in the specified VCN and the specified compartment.
      operationId: ListInternetGateways
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/VcnIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to only return resources that match the given lifecycle
          state.  The state value is case-insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/InternetGateway/lifecycleState'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/InternetGateway'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListInternetGateways
      tags:
      - virtualNetwork
    post:
      description: |
        Creates a new Internet Gateway for the specified VCN. For more information, see
        [Connectivity to the Internet](/Content/Network/Tasks/managingIGs.htm).

        For the purposes of access control, you must provide the OCID of the compartment where you want the Internet
        Gateway to reside. Notice that the Internet Gateway doesn't have to be in the same compartment as the VCN or
        other Networking Service components. If you're not sure which compartment to use, put the Internet
        Gateway in the same compartment with the VCN. For more information about compartments and access control, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm). For information about OCIDs, see
        [Resource Identifiers](/Content/General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the Internet Gateway, otherwise a default is provided. It
        does not have to be unique, and you can change it. Avoid entering confidential information.

        For traffic to flow between a subnet and an Internet Gateway, you must create a route rule accordingly in
        the subnet's route table (for example, 0.0.0.0/0 > Internet Gateway). See
        [UpdateRouteTable](#/en/iaas/20160918/RouteTable/UpdateRouteTable).

        You must specify whether the Internet Gateway is enabled when you create it. If it's disabled, that means no
        traffic will flow to/from the internet even if there's a route rule that enables that traffic. You can later
        use [UpdateInternetGateway](#/en/iaas/20160918/InternetGateway/UpdateInternetGateway) to easily disable/enable
        the gateway without changing the route rule.
      operationId: CreateInternetGateway
      parameters:
      - $ref: '#/parameters/RetryTokenHeader'
      - description: Details for creating a new Internet Gateway.
        in: body
        name: CreateInternetGatewayDetails
        required: true
        schema:
          $ref: '#/definitions/CreateInternetGatewayDetails'
      responses:
        200:
          description: The Internet Gateway was created.
          examples:
            application-json: |
              {
                "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "displayName" : "MyInternetGateway",
                "id" : "ocid1.internetgateway.oc1.phx.aaaaaaaaaivauc5s2zocmdgxy3ytcylaflcckl2bhwrdawwc5it5hlm6rykq",
                "isEnabled" : true,
                "lifecycleState" : "AVAILABLE",
                "timeCreated" : "2016-12-14T20:56:24.516Z",
                "vcnId" : "ocid1.vcn.oc1.phx.aaaaaaaamzvcg26irmlpkcmdzs33fb43lv2ej4lxshrdgpzvxsmb7zn427ma"
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/InternetGateway'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateInternetGateway
      tags:
      - virtualNetwork
      x-example: |
        POST /20160918/internetGateways
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "displayName" : "MyInternetGateway",
          "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
          "vcnId" : "ocid1.vcn.oc1.phx.aaaaaaaamzvcg26irmlpkcmdzs33fb43lv2ej4lxshrdgpzvxsmb7zn427ma",
          "isEnabled" : true
        }
  /internetGateways/{igId}:
    delete:
      description: |
        Deletes the specified Internet Gateway. The Internet Gateway does not have to be disabled, but
        there must not be a route table that lists it as a target.

        This is an asynchronous operation. The gateway's `lifecycleState` will change to TERMINATING temporarily
        until the gateway is completely removed.
      operationId: DeleteInternetGateway
      parameters:
      - $ref: '#/parameters/InternetGatewayIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The Internet Gateway is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteInternetGateway
      tags:
      - virtualNetwork
    get:
      description: Gets the specified Internet Gateway's information.
      operationId: GetInternetGateway
      parameters:
      - $ref: '#/parameters/InternetGatewayIdPathParam'
      responses:
        200:
          description: The Internet Gateway was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/InternetGateway'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetInternetGateway
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the specified Internet Gateway. You can disable/enable it, or change its display name.
        Avoid entering confidential information.

        If the gateway is disabled, that means no traffic will flow to/from the internet even if there's
        a route rule that enables that traffic.
      operationId: UpdateInternetGateway
      parameters:
      - $ref: '#/parameters/InternetGatewayIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Details for updating the Internet Gateway.
        in: body
        name: UpdateInternetGatewayDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateInternetGatewayDetails'
      responses:
        200:
          description: The Internet Gateway was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/InternetGateway'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateInternetGateway
      tags:
      - virtualNetwork
  /ipsecConnections:
    get:
      description: |
        Lists the IPSec connections for the specified compartment. You can filter the
        results by DRG or CPE.
      operationId: ListIPSecConnections
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/DrgIdOptionalQueryParam'
      - $ref: '#/parameters/CpeIdOptionalQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/IPSecConnection'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListIPSecConnections
      tags:
      - virtualNetwork
    post:
      description: |
        Creates a new IPSec connection between the specified DRG and CPE. For more information, see
        [IPSec VPNs](/Content/Network/Tasks/managingIPsec.htm).

        In the request, you must include at least one static route to the CPE object (you're allowed a maximum
        of 10). For example: 10.0.8.0/16.

        For the purposes of access control, you must provide the OCID of the compartment where you want the
        IPSec connection to reside. Notice that the IPSec connection doesn't have to be in the same compartment
        as the DRG, CPE, or other Networking Service components. If you're not sure which compartment to
        use, put the IPSec connection in the same compartment as the DRG. For more information about
        compartments and access control, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm).
        For information about OCIDs, see [Resource Identifiers](/Content/General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the IPSec connection, otherwise a default is provided.
        It does not have to be unique, and you can change it. Avoid entering confidential information.

        After creating the IPSec connection, you need to configure your on-premises router
        with tunnel-specific information returned by
        [GetIPSecConnectionDeviceConfig](#/en/iaas/20160918/IPSecConnectionDeviceConfig/GetIPSecConnectionDeviceConfig).
        For each tunnel, that operation gives you the IP address of Oracle's VPN headend and the shared secret
        (that is, the pre-shared key). For more information, see
        [Configuring Your On-Premises Router for an IPSec VPN](/Content/Network/Tasks/configuringCPE.htm).

        To get the status of the tunnels (whether they're up or down), use
        [GetIPSecConnectionDeviceStatus](#/en/iaas/20160918/IPSecConnectionDeviceStatus/GetIPSecConnectionDeviceStatus).
      operationId: CreateIPSecConnection
      parameters:
      - description: Details for creating an `IPSecConnection`.
        in: body
        name: CreateIPSecConnectionDetails
        required: true
        schema:
          $ref: '#/definitions/CreateIPSecConnectionDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The IPSec connection was created.
          examples:
            application-json: |
              {
                "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "cpeId" : "ocid1.cpe.oc1.phx.aaaaaaaauceeaxawury4ri72wjqqdgqkwb3cgpj4f67fdh7kcnbay5mpk65q",
                "displayName" : "MyIPSecConnection",
                "drgId" : "ocid1.drg.oc1.phx.aaaaaaaabxstxix6rsvg4fisjgmcmdzdl6dscqfrm77ag3s57hlobj6xvfswq",
                "id" : "ocid1.ipsecconnection.oc1.phx.aaaaaaaas5oujex5mocmd3rdpcz4hcad42bzxnp3t3uwvhhz26kirogb4uoa",
                "lifecycleState" : "PROVISIONING",
                "staticRoutes" : [ "172.16.10.0/24" ],
                "timeCreated" : "2016-12-16T22:43:25.588Z"
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/IPSecConnection'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateIPSecConnection
      tags:
      - virtualNetwork
      x-example: |
        POST /20160918/ipsecConnections
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "displayName" : "MyIPSecConnection",
          "cpeId" : "ocid1.cpe.oc1.phx.aaaaaaaauceeaxawury4ri72wjcmdgqkwb3cgpj4f67fdh7kcnbay5mpk65q",
          "staticRoutes" : ["172.16.10.0/24"],
          "drgId" : "ocidv1:drg:oc1:phx:aaaaaaaany43ugr3m5mxir3cuub2i254me",
          "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq"
        }
  /ipsecConnections/{ipscId}:
    delete:
      description: |
        Deletes the specified IPSec connection. If your goal is to disable the IPSec VPN between your VCN and
        on-premises network, it's easiest to simply detach the DRG but keep all the IPSec VPN components intact.
        If you were to delete all the components and then later need to create an IPSec VPN again, you would
        need to configure your on-premises router again with the new information returned from
        [CreateIPSecConnection](#/en/iaas/20160918/IPSecConnection/CreateIPSecConnection).

        This is an asynchronous operation. The connection's `lifecycleState` will change to TERMINATING temporarily
        until the connection is completely removed.
      operationId: DeleteIPSecConnection
      parameters:
      - $ref: '#/parameters/IPSecConnectionIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The request has been accepted
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteIPSecConnection
      tags:
      - virtualNetwork
    get:
      description: |
        Gets the specified IPSec connection's basic information, including the static routes for the
        on-premises router. If you want the status of the connection (whether it's up or down), use
        [GetIPSecConnectionDeviceStatus](#/en/iaas/20160918/IPSecConnectionDeviceStatus/GetIPSecConnectionDeviceStatus).
      operationId: GetIPSecConnection
      parameters:
      - $ref: '#/parameters/IPSecConnectionIdPathParam'
      responses:
        200:
          description: The information was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/IPSecConnection'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetIPSecConnection
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the display name for the specified IPSec connection.
        Avoid entering confidential information.
      operationId: UpdateIPSecConnection
      parameters:
      - $ref: '#/parameters/IPSecConnectionIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Details object for updating a IPSec connection.
        in: body
        name: UpdateIPSecConnectionDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateIPSecConnectionDetails'
      responses:
        200:
          description: The IPSec connection was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/IPSecConnection'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateIPSecConnection
      tags:
      - virtualNetwork
  /ipsecConnections/{ipscId}/deviceConfig:
    get:
      description: |
        Gets the configuration information for the specified IPSec connection. For each tunnel, the
        response includes the IP address of Oracle's VPN headend and the shared secret.
      operationId: GetIPSecConnectionDeviceConfig
      parameters:
      - $ref: '#/parameters/IPSecConnectionIdPathParam'
      responses:
        200:
          description: The configuration information was retrieved.
          examples:
            application-json: |
              {
                "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "id" : "ocid1.ipsecconnection.oc1.phx.aaaaaaaas5oujex5mocmd3rdpcz4hcad42bzxnp3t3uwvhhz26kirogb4uoa",
                "timeCreated" : "2016-12-16T22:43:25.588Z",
                "tunnels" : [{
                  "ipAddress" : "123.45.67.50",
                  "sharedSecret" : "zA6pmRB9sFtDipnaKyjVTAB1x.g_0wdJr5IeicmdINhDlh.gbMktLJPiIlwQSBe",
                  "timeCreated" : "2016-12-16T22:43:31.826Z"
                }, {
                  "ipAddress" : "123.45.67.52",
                  "sharedSecret" : "fmy0SpVwGF3vZ_y1bbJdhjm_K.EmbHejqO6fcmd3aWJP24kTZVT.1gghqe4nN7tB",
                  "timeCreated" : "2016-12-16T22:43:31.861Z"
                }, {
                  "ipAddress" : "123.45.67.51",
                  "sharedSecret" : "qBNpDpJmRiGd00zpyTH1TXbQ34DKBcyE.DlFJjEQscmdEpuqBpSeS_AQyZlQZSqA",
                  "timeCreated" : "2016-12-16T22:43:31.844Z"
                }]
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/IPSecConnectionDeviceConfig'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetIPSecConnectionDeviceConfig
      tags:
      - virtualNetwork
      x-example: |
        GET /20160918/ipsecConnections/<var>&lt;ipscId&gt;</var>/deviceConfig
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
  /ipsecConnections/{ipscId}/deviceStatus:
    get:
      description: |
        Gets the status of the specified IPSec connection (whether it's up or down).
      operationId: GetIPSecConnectionDeviceStatus
      parameters:
      - $ref: '#/parameters/IPSecConnectionIdPathParam'
      responses:
        200:
          description: The status was retrieved.
          examples:
            application-json: |
              {
                "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "id" : "ocid1.ipsecconnection.oc1.phx.aaaaaaaas5oujex5mocmd3rdpcz4hcad42bzxnp3t3uwvhhz26kirogb4uoa",
                "timeCreated" : "2016-12-16T22:43:25.588Z",
                "tunnels" : [{
                  "ipAddress" : "123.45.67.50",
                  "lifecycleState" : "DOWN",
                  "timeCreated" : "2016-12-16T22:43:31.826Z",
                  "timeStateModified" : "2016-12-16T22:43:31.826Z"
                }, {
                  "ipAddress" : "123.45.67.52",
                  "lifecycleState" : "DOWN",
                  "timeCreated" : "2016-12-16T22:43:31.861Z"
                  "timeStateModified" : "2016-12-16T22:43:31.861Z"
                }, {
                  "ipAddress" : "123.45.67.51",
                  "lifecycleState" : "DOWN",
                  "timeCreated" : "2016-12-16T22:43:31.844Z"
                  "timeStateModified" : "2016-12-16T22:43:31.844Z"
                }]
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/IPSecConnectionDeviceStatus'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetIPSecConnectionDeviceStatus
      tags:
      - virtualNetwork
      x-example: |
        GET /20160918/ipsecConnections/<var>&lt;ipscId&gt;</var>/deviceStatus
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
  /localPeeringGateways:
    get:
      description: |
        Lists the local peering gateways (LPGs) for the specified VCN and compartment
        (the LPG's compartment).
      operationId: ListLocalPeeringGateways
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/VcnIdQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/LocalPeeringGateway'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListLocalPeeringGateways
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-141
    post:
      description: |
        Creates a new local peering gateway (LPG) for the specified VCN.
      operationId: CreateLocalPeeringGateway
      parameters:
      - description: Details for creating a new local peering gateway.
        in: body
        name: CreateLocalPeeringGatewayDetails
        required: true
        schema:
          $ref: '#/definitions/CreateLocalPeeringGatewayDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The local peering gateway was created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/LocalPeeringGateway'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateLocalPeeringGateway
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-141
  /localPeeringGateways/{localPeeringGatewayId}:
    delete:
      description: |
        Deletes the specified local peering gateway (LPG).

        This is an asynchronous operation; the local peering gateway's `lifecycleState` changes to TERMINATING temporarily
        until the local peering gateway is completely removed.
      operationId: DeleteLocalPeeringGateway
      parameters:
      - $ref: '#/parameters/LocalPeeringGatewayIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The local peering gateway is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteLocalPeeringGateway
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-141
    get:
      description: Gets the specified local peering gateway's information.
      operationId: GetLocalPeeringGateway
      parameters:
      - $ref: '#/parameters/LocalPeeringGatewayIdPathParam'
      responses:
        200:
          description: The local peering gateway was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/LocalPeeringGateway'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetLocalPeeringGateway
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-141
    put:
      description: |
        Updates the specified local peering gateway (LPG).
      operationId: UpdateLocalPeeringGateway
      parameters:
      - $ref: '#/parameters/LocalPeeringGatewayIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Details object for updating a local peering gateway.
        in: body
        name: UpdateLocalPeeringGatewayDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateLocalPeeringGatewayDetails'
      responses:
        200:
          description: The local peering gateway was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/LocalPeeringGateway'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateLocalPeeringGateway
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-141
  /localPeeringGateways/{localPeeringGatewayId}/actions/connect:
    post:
      description: |
        Connects this local peering gateway (LPG) to another one in the same region.

        This operation must be called by the VCN administrator who is designated as
        the *requestor* in the peering relationship. The *acceptor* must implement
        an Identity and Access Management (IAM) policy that gives the requestor permission
        to connect to LPGs in the acceptor's compartment. Without that permission, this
        operation will fail. For more information, see
        [VCN Peering](/Content/Network/Tasks/VCNpeering.htm).
      operationId: ConnectLocalPeeringGateways
      parameters:
      - $ref: '#/parameters/LocalPeeringGatewayIdPathParam'
      - description: Details regarding the local peering gateway to connect.
        in: body
        name: ConnectLocalPeeringGatewaysDetails
        required: true
        schema:
          $ref: '#/definitions/ConnectLocalPeeringGatewaysDetails'
      responses:
        204:
          description: The connect request was accepted and a peering is being established.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ConnectLocalPeeringGateways
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-141
      x-related-resource: '#/definitions/LocalPeeringGateway'
  /privateIps:
    get:
      description: |
        Lists the [PrivateIp](#/en/iaas/20160918/PrivateIp/) objects based
        on one of these filters:

          - Subnet OCID.
          - VNIC OCID.
          - Both private IP address and subnet OCID: This lets
          you get a `privateIP` object based on its private IP
          address (for example, 10.0.3.3) and not its OCID. For comparison,
          [GetPrivateIp](#/en/iaas/20160918/PrivateIp/GetPrivateIp)
          requires the OCID.

        If you're listing all the private IPs associated with a given subnet
        or VNIC, the response includes both primary and secondary private IPs.
      operationId: ListPrivateIps
      parameters:
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/IpAddressOptionalQueryParam'
      - $ref: '#/parameters/SubnetIdOptionalQueryParam'
      - $ref: '#/parameters/VnicIdOptionalQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/PrivateIp'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListPrivateIps
      tags:
      - virtualNetwork
    post:
      description: |
        Creates a secondary private IP for the specified VNIC.
        For more information about secondary private IPs, see
        [IP Addresses](/Content/Network/Tasks/managingIPaddresses.htm).
      operationId: CreatePrivateIp
      parameters:
      - description: Create private IP details.
        in: body
        name: CreatePrivateIpDetails
        required: true
        schema:
          $ref: '#/definitions/CreatePrivateIpDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The private IP was created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/PrivateIp'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreatePrivateIp
      tags:
      - virtualNetwork
  /privateIps/{privateIpId}:
    delete:
      description: |
        Unassigns and deletes the specified private IP. You must
        specify the object's OCID. The private IP address is returned to
        the subnet's pool of available addresses.

        This operation cannot be used with primary private IPs, which are
        automatically unassigned and deleted when the VNIC is terminated.

        **Important:** If a secondary private IP is the
        [target of a route rule](/Content/Network/Tasks/managingroutetables.htm#privateip),
        unassigning it from the VNIC causes that route rule to blackhole and the traffic
        will be dropped.
      operationId: DeletePrivateIp
      parameters:
      - $ref: '#/parameters/PrivateIpIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The private IP is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeletePrivateIp
      tags:
      - virtualNetwork
    get:
      description: |
        Gets the specified private IP. You must specify the object's OCID.
        Alternatively, you can get the object by using
        [ListPrivateIps](#/en/iaas/20160918/PrivateIp/ListPrivateIps)
        with the private IP address (for example, 10.0.3.3) and subnet OCID.
      operationId: GetPrivateIp
      parameters:
      - $ref: '#/parameters/PrivateIpIdPathParam'
      responses:
        200:
          description: The private IP.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/PrivateIp'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetPrivateIp
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the specified private IP. You must specify the object's OCID.
        Use this operation if you want to:

          - Move a secondary private IP to a different VNIC in the same subnet.
          - Change the display name for a secondary private IP.
          - Change the hostname for a secondary private IP.

        This operation cannot be used with primary private IPs.
        To update the hostname for the primary IP on a VNIC, use
        [UpdateVnic](#/en/iaas/20160918/Vnic/UpdateVnic).
      operationId: UpdatePrivateIp
      parameters:
      - $ref: '#/parameters/PrivateIpIdPathParam'
      - description: Private IP details.
        in: body
        name: UpdatePrivateIpDetails
        required: true
        schema:
          $ref: '#/definitions/UpdatePrivateIpDetails'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The private IP was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/PrivateIp'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdatePrivateIp
      tags:
      - virtualNetwork
  /publicIps:
    get:
      description: |
        Lists either the ephemeral or reserved [PublicIp](#/en/iaas/20160918/PublicIp/) objects
        in the specified compartment.

        To list your reserved public IPs, set `scope` = `REGION`, and leave the
        `availabilityDomain` parameter empty.

        To list your ephemeral public IPs, set `scope` = `AVAILABILITY_DOMAIN`, and set the
        `availabilityDomain` parameter to the desired Availability Domain. An ephemeral public IP
        is always in the same Availability Domain and compartment as the private IP it's assigned to.
      operationId: ListPublicIps
      parameters:
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/PublicIpScopeQueryParam'
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/PublicIp'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListPublicIps
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-136
    post:
      description: |
        Creates a public IP. Use the `lifetime` property to specify whether it's an ephemeral or
        reserved public IP. For information about limits on how many you can create, see
        [Public IP Addresses](/Content/Network/Tasks/managingpublicIPs.htm).

        * **For an ephemeral public IP:** You must also specify a `privateIpId` with the OCID of
        the primary private IP you want to assign the public IP to. The public IP is created in
        the same Availability Domain as the private IP. An ephemeral public IP must always be
        assigned to a private IP, and only to the *primary* private IP on a VNIC, not a secondary
        private IP.

        * **For a reserved public IP:** You may also optionally assign the public IP to a private
        IP by specifying `privateIpId`. Or you can later assign the public IP with
        [UpdatePublicIp](#/en/iaas/20160918/PublicIp/UpdatePublicIp).

        **Note:** When assigning a public IP to a private IP, the private IP must not already have
        a public IP with `lifecycleState` = ASSIGNING or ASSIGNED. If it does, an error is returned.

        Also, for reserved public IPs, the optional assignment part of this operation is
        asynchronous. Poll the public IP's `lifecycleState` to determine if the assignment
        succeeded.
      operationId: CreatePublicIp
      parameters:
      - description: Create public IP details.
        in: body
        name: CreatePublicIpDetails
        required: true
        schema:
          $ref: '#/definitions/CreatePublicIpDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The public IP was created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/PublicIp'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreatePublicIp
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-136
  /publicIps/actions/getByIpAddress:
    post:
      description: |
        Gets the public IP based on the public IP address (for example, 129.146.2.1).

        **Note:** If you're fetching a reserved public IP that is in the process of being
        moved to a different private IP, the service returns the public IP object with
        `lifecycleState` = ASSIGNING and `privateIpId` = OCID of the target private IP.
      operationId: GetPublicIpByIpAddress
      parameters:
      - description: IP address details for fetching the public IP.
        in: body
        name: GetPublicIpByIpAddressDetails
        required: true
        schema:
          $ref: '#/definitions/GetPublicIpByIpAddressDetails'
      responses:
        200:
          description: The public IP was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/PublicIp'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetPublicIpByIpAddress
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-136
  /publicIps/actions/getByPrivateIpId:
    post:
      description: |
        Gets the public IP assigned to the specified private IP. You must specify the OCID
        of the private IP. If no public IP is assigned, a 404 is returned.

        **Note:** If you're fetching a reserved public IP that is in the process of being
        moved to a different private IP, and you provide the OCID of the original private
        IP, this operation returns a 404. If you instead provide the OCID of the target
        private IP, or if you instead call
        [GetPublicIp](#/en/iaas/20160918/PublicIp/GetPublicIp) or
        [GetPublicIpByIpAddress](#/en/iaas/20160918/PublicIp/GetPublicIpByIpAddress), the
        service returns the public IP object with `lifecycleState` = ASSIGNING and `privateIpId` = OCID
        of the target private IP.
      operationId: GetPublicIpByPrivateIpId
      parameters:
      - description: Private IP details for fetching the public IP.
        in: body
        name: GetPublicIpByPrivateIpIdDetails
        required: true
        schema:
          $ref: '#/definitions/GetPublicIpByPrivateIpIdDetails'
      responses:
        200:
          description: The public IP was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/PublicIp'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetPublicIpByPrivateIpId
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-136
  /publicIps/{publicIpId}:
    delete:
      description: |
        Unassigns and deletes the specified public IP (either ephemeral or reserved).
        You must specify the object's OCID. The public IP address is returned to the
        Oracle Cloud Infrastructure public IP pool.

        For an assigned reserved public IP, the initial unassignment portion of this operation
        is asynchronous. Poll the public IP's `lifecycleState` to determine
        if the operation succeeded.

        If you want to simply unassign a reserved public IP and return it to your pool
        of reserved public IPs, instead use
        [UpdatePublicIp](#/en/iaas/20160918/PublicIp/UpdatePublicIp).
      operationId: DeletePublicIp
      parameters:
      - $ref: '#/parameters/PublicIpIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The public IP is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeletePublicIp
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-136
    get:
      description: |
        Gets the specified public IP. You must specify the object's OCID.

        Alternatively, you can get the object by using [GetPublicIpByIpAddress](#/en/iaas/20160918/PublicIp/GetPublicIpByIpAddress)
        with the public IP address (for example, 129.146.2.1).

        Or you can use [GetPublicIpByPrivateIpId](#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId)
        with the OCID of the private IP that the public IP is assigned to.

        **Note:** If you're fetching a reserved public IP that is in the process of being
        moved to a different private IP, the service returns the public IP object with
        `lifecycleState` = ASSIGNING and `privateIpId` = OCID of the target private IP.
      operationId: GetPublicIp
      parameters:
      - $ref: '#/parameters/PublicIpIdPathParam'
      responses:
        200:
          description: The public IP was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/PublicIp'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetPublicIp
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-136
    put:
      description: |
        Updates the specified public IP. You must specify the object's OCID. Use this operation if you want to:

        * Assign a reserved public IP in your pool to a private IP.
        * Move a reserved public IP to a different private IP.
        * Unassign a reserved public IP from a private IP (which returns it to your pool
        of reserved public IPs).
        * Change the display name for a public IP (either ephemeral or reserved).

        Assigning, moving, and unassigning a reserved public IP are asynchronous
        operations. Poll the public IP's `lifecycleState` to determine if the operation
        succeeded.

        **Note:** When moving a reserved public IP, the target private IP
        must not already have a public IP with `lifecycleState` = ASSIGNING or ASSIGNED. If it
        does, an error is returned. Also, the initial unassignment from the original
        private IP always succeeds, but the assignment to the target private IP is asynchronous and
        could fail silently (for example, if the target private IP is deleted or has a different public IP
        assigned to it in the interim). If that occurs, the public IP remains unassigned and its
        `lifecycleState` switches to AVAILABLE (it is not reassigned to its original private IP).
        You must poll the public IP's `lifecycleState` to determine if the move succeeded.

        Regarding ephemeral public IPs:

        * If you want to assign an ephemeral public IP to a primary private IP, use
        [CreatePublicIp](#/en/iaas/20160918/PublicIp/CreatePublicIp).
        * You can't move an ephemeral public IP to a different private IP.
        * If you want to unassign an ephemeral public IP from its private IP, use
        [DeletePublicIp](#/en/iaas/20160918/PublicIp/DeletePublicIp), which
        unassigns and deletes the ephemeral public IP.

        **Note:** If a public IP (either ephemeral or reserved) is assigned to a secondary private
        IP (see [PrivateIp](#/en/iaas/20160918/PrivateIp)), and you move that secondary
        private IP to another VNIC, the public IP moves with it.

        **Note:** There's a limit to the number of [public IPs](#/en/iaas/20160918/PublicIp/)
        a VNIC or instance can have. If you try to move a reserved public IP
        to a VNIC or instance that has already reached its public IP limit, an error is
        returned. For information about the public IP limits, see
        [Public IP Addresses](/Content/Network/Tasks/managingpublicIPs.htm).
      operationId: UpdatePublicIp
      parameters:
      - $ref: '#/parameters/PublicIpIdPathParam'
      - description: Public IP details.
        in: body
        name: UpdatePublicIpDetails
        required: true
        schema:
          $ref: '#/definitions/UpdatePublicIpDetails'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The public IP was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/PublicIp'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdatePublicIp
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-136
  /routeTables:
    get:
      description: |
        Lists the route tables in the specified VCN and specified compartment. The response
        includes the default route table that automatically comes with each VCN, plus any route tables
        you've created.
      operationId: ListRouteTables
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/VcnIdQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to only return resources that match the given lifecycle
          state.  The state value is case-insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/RouteTable/lifecycleState'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/RouteTable'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListRouteTables
      tags:
      - virtualNetwork
    post:
      description: |
        Creates a new route table for the specified VCN. In the request you must also include at least one route
        rule for the new route table. For information on the number of rules you can have in a route table, see
        [Service Limits](/Content/General/Concepts/servicelimits.htm). For general information about route
        tables in your VCN and the types of targets you can use in route rules,
        see [Route Tables](/Content/Network/Tasks/managingroutetables.htm).

        For the purposes of access control, you must provide the OCID of the compartment where you want the route
        table to reside. Notice that the route table doesn't have to be in the same compartment as the VCN, subnets,
        or other Networking Service components. If you're not sure which compartment to use, put the route
        table in the same compartment as the VCN. For more information about compartments and access control, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm). For information about OCIDs, see
        [Resource Identifiers](/Content/General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the route table, otherwise a default is provided.
        It does not have to be unique, and you can change it. Avoid entering confidential information.
      operationId: CreateRouteTable
      parameters:
      - description: Details for creating a new route table.
        in: body
        name: CreateRouteTableDetails
        required: true
        schema:
          $ref: '#/definitions/CreateRouteTableDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The route table was created.
          examples:
            application-json: |
              {
                "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "displayName" : "MyRouteTable",
                "id" : "ocid1.routetable.oc1.phx.aaaaaaaah2ebauqczxr3vyatcmdwsu3u26pu77633r3icfubdotca5lowszq",
                "lifecycleState" : "AVAILABLE",
                "routeRules" : [{
                  "cidrBlock" : "0.0.0.0/0",
                  "networkEntityId" : "ocid1.internetgateway.oc1.phx.aaaaaaaaxtfqb2srw7hoi5cmdum4n6ow2xm2zhrzqqypmlteiiebtmvl75ya"
                }],
                "timeCreated" : "2016-12-14T20:50:04.956Z",
                "vcnId" : "ocid1.vcn.oc1.phx.aaaaaaaamzvcg26irmlpkcmdzs33fb43lv2ej4lxshrdgpzvxsmb7zn427ma"
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/RouteTable'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateRouteTable
      tags:
      - virtualNetwork
      x-example: |
        POST /20160918/routeTables
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "displayName" : "MyRouteTable",
          "vcnId" : "ocid1.vcn.oc1.phx.aaaaaaaamzvcg26irmlpkcmdzs33fb43lv2ej4lxshrdgpzvxsmb7zn427ma",
          "routeRules" : [{
            "cidrBlock" : "0.0.0.0/0",
            "networkEntityId" : "ocid1.internetgateway.oc1.phx.aaaaaaaaxtfqb2srw7hoi5cmdum4n6ow2xm2zhrzqqypmlteiiebtmvl75ya"
          }],
          "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq"
        }
  /routeTables/{rtId}:
    delete:
      description: |
        Deletes the specified route table, but only if it's not associated with a subnet. You can't delete a
        VCN's default route table.

        This is an asynchronous operation. The route table's `lifecycleState` will change to TERMINATING temporarily
        until the route table is completely removed.
      operationId: DeleteRouteTable
      parameters:
      - $ref: '#/parameters/RouteTableIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The route table is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteRouteTable
      tags:
      - virtualNetwork
    get:
      description: Gets the specified route table's information.
      operationId: GetRouteTable
      parameters:
      - $ref: '#/parameters/RouteTableIdPathParam'
      responses:
        200:
          description: The route table was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/RouteTable'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetRouteTable
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the specified route table's display name or route rules.
        Avoid entering confidential information.

        Note that the `routeRules` object you provide replaces the entire existing set of rules.
      operationId: UpdateRouteTable
      parameters:
      - $ref: '#/parameters/RouteTableIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Details object for updating a route table.
        in: body
        name: UpdateRouteTableDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateRouteTableDetails'
      responses:
        200:
          description: The route table was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/RouteTable'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateRouteTable
      tags:
      - virtualNetwork
  /securityLists:
    get:
      description: |
        Lists the security lists in the specified VCN and compartment.
      operationId: ListSecurityLists
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/VcnIdQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to only return resources that match the given lifecycle
          state.  The state value is case-insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/SecurityList/lifecycleState'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/SecurityList'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListSecurityLists
      tags:
      - virtualNetwork
    post:
      description: |
        Creates a new security list for the specified VCN. For more information
        about security lists, see [Security Lists](/Content/Network/Concepts/securitylists.htm).
        For information on the number of rules you can have in a security list, see
        [Service Limits](/Content/General/Concepts/servicelimits.htm).

        For the purposes of access control, you must provide the OCID of the compartment where you want the security
        list to reside. Notice that the security list doesn't have to be in the same compartment as the VCN, subnets,
        or other Networking Service components. If you're not sure which compartment to use, put the security
        list in the same compartment as the VCN. For more information about compartments and access control, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm). For information about OCIDs, see
        [Resource Identifiers](/Content/General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the security list, otherwise a default is provided.
        It does not have to be unique, and you can change it. Avoid entering confidential information.
      operationId: CreateSecurityList
      parameters:
      - description: Details regarding the security list to create.
        in: body
        name: CreateSecurityListDetails
        required: true
        schema:
          $ref: '#/definitions/CreateSecurityListDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The security list has been created.
          examples:
            application-json: |
              {
                "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "displayName" : "MyPrivateSubnetSecurityList",
                "egressSecurityRules" : [{
                  "destination" : "10.0.2.0/24",
                  "protocol" : "6",
                  "tcpOptions" : {
                    "destinationPortRange" : {
                      "max" : 1521,
                      "min" : 1521
                    }
                  }
                }],
                "id" : "ocid1.securitylist.oc1.phx.aaaaaaaakk5wuktgqmc2v7bfwcmd34jxenzhdwjic7jrmynreloyoawi5faq",
                "ingressSecurityRules" : [{
                  "protocol" : "6",
                  "source" : "10.0.1.0/24",
                  "tcpOptions" : {
                    "destinationPortRange" : {
                      "max" : 1521,
                      "min" : 1521
                    }
                  }
                },{
                  "protocol" : "6",
                  "source" : "10.0.2.0/24",
                  "tcpOptions" : {
                    "destinationPortRange" : {
                      "max" : 1521,
                      "min" : 1521
                    }
                  }
                }],
                "lifecycleState" : "AVAILABLE",
                "timeCreated" : "2016-12-14T21:02:46.357Z",
                "vcnId" : "ocid1.vcn.oc1.phx.aaaaaaaax45nyk226ps4pknnef7nmcmd5cgeenrkpbqtiotszg3hmacocrfq"
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/SecurityList'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateSecurityList
      tags:
      - virtualNetwork
      x-example: |
        POST /20160918/securityLists
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "vcnId" : "ocid1.vcn.oc1.phx.aaaaaaaax45nyk226ps4pknnef7nmcmd5cgeenrkpbqtiotszg3hmacocrfq",
          "displayName" : "MyPrivateSubnetSecurityList",
          "ingressSecurityRules" : [{
            "protocol" : "6",
            "source" : "10.0.1.0/24",
            "tcpOptions" : {
              "destinationPortRange" : {
                "min" : "1521",
                "max" : "1521"
              }
            }
          },{
            "protocol" : "6",
            "source" : "10.0.2.0/24",
            "tcpOptions" : {
              "destinationPortRange" : {
                "min" : "1521",
                "max" : "1521"
              }
            }
          }],
          "egressSecurityRules" : [{
            "protocol" : "6",
            "destination" : "10.0.2.0/24",
            "tcpOptions" : {
              "destinationPortRange" : {
                "min" : "1521",
                "max" : "1521"
              }
            }
          }],
          "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq"
        }
  /securityLists/{securityListId}:
    delete:
      description: |
        Deletes the specified security list, but only if it's not associated with a subnet. You can't delete
        a VCN's default security list.

        This is an asynchronous operation. The security list's `lifecycleState` will change to TERMINATING temporarily
        until the security list is completely removed.
      operationId: DeleteSecurityList
      parameters:
      - $ref: '#/parameters/SecurityListIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The security list is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteSecurityList
      tags:
      - virtualNetwork
    get:
      description: Gets the specified security list's information.
      operationId: GetSecurityList
      parameters:
      - $ref: '#/parameters/SecurityListIdPathParam'
      responses:
        200:
          description: The security list was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/SecurityList'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetSecurityList
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the specified security list's display name or rules.
        Avoid entering confidential information.

        Note that the `egressSecurityRules` or `ingressSecurityRules` objects you provide replace the entire
        existing objects.
      operationId: UpdateSecurityList
      parameters:
      - $ref: '#/parameters/SecurityListIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Updated details for the security list.
        in: body
        name: UpdateSecurityListDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateSecurityListDetails'
      responses:
        200:
          description: The security list was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/SecurityList'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateSecurityList
      tags:
      - virtualNetwork
  /shapes:
    get:
      description: |
        Lists the shapes that can be used to launch an instance within the specified compartment. You can
        filter the list by compatibility with a specific image.
      operationId: ListShapes
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/ImageIdQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/Shape'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListShapes
      tags:
      - compute
  /subnets:
    get:
      description: |
        Lists the subnets in the specified VCN and the specified compartment.
      operationId: ListSubnets
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/VcnIdQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to only return resources that match the given lifecycle
          state.  The state value is case-insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/Subnet/lifecycleState'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/Subnet'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListSubnets
      tags:
      - virtualNetwork
    post:
      description: |
        Creates a new subnet in the specified VCN. You can't change the size of the subnet after creation,
        so it's important to think about the size of subnets you need before creating them.
        For more information, see [VCNs and Subnets](/Content/Network/Tasks/managingVCNs.htm).
        For information on the number of subnets you can have in a VCN, see
        [Service Limits](/Content/General/Concepts/servicelimits.htm).

        For the purposes of access control, you must provide the OCID of the compartment where you want the subnet
        to reside. Notice that the subnet doesn't have to be in the same compartment as the VCN, route tables, or
        other Networking Service components. If you're not sure which compartment to use, put the subnet in
        the same compartment as the VCN. For more information about compartments and access control, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm). For information about OCIDs,
        see [Resource Identifiers](/Content/General/Concepts/identifiers.htm).

        You may optionally associate a route table with the subnet. If you don't, the subnet will use the
        VCN's default route table. For more information about route tables, see
        [Route Tables](/Content/Network/Tasks/managingroutetables.htm).

        You may optionally associate a security list with the subnet. If you don't, the subnet will use the
        VCN's default security list. For more information about security lists, see
        [Security Lists](/Content/Network/Concepts/securitylists.htm).

        You may optionally associate a set of DHCP options with the subnet. If you don't, the subnet will use the
        VCN's default set. For more information about DHCP options, see
        [DHCP Options](/Content/Network/Tasks/managingDHCP.htm).

        You may optionally specify a *display name* for the subnet, otherwise a default is provided.
        It does not have to be unique, and you can change it. Avoid entering confidential information.

        You can also add a DNS label for the subnet, which is required if you want the Internet and
        VCN Resolver to resolve hostnames for instances in the subnet. For more information, see
        [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).
      operationId: CreateSubnet
      parameters:
      - description: Details for creating a subnet.
        in: body
        name: CreateSubnetDetails
        required: true
        schema:
          $ref: '#/definitions/CreateSubnetDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The subnet was created.
          examples:
            application-json: |
              {
                "availabilityDomain" : "crmS:PHX-AD-1",
                "cidrBlock" : "10.0.2.0/24",
                "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "dhcpOptionsId" : "ocid1.dhcpoptions.oc1.phx.aaaaaaaauqemh7hsa35d7dx5m46f3prnxzgw4nevb6z6cmdmckvy7odixthq",
                "displayName" : "MySubnet",
                "id" : "ocid1.subnet.oc1.phx.aaaaaaaawuhbgctekorm5emf7mh7rnun7jqdxedpa4tbv66ez2bjhatnvv7a",
                "lifecycleState" : "AVAILABLE",
                "routeTableId" : "ocid1.routetable.oc1.phx.aaaaaaaabkzwmlew7tb7orbcsaq7hx6wcmdeuh5slbosmbbdy52oxaahsitq",
                "securityListIds" : [ "ocid1.securitylist.oc1.phx.aaaaaaaadyndu2n3hcmdsjfiljwyq7vpxsvv7ynp4ori7aealcvhzicnzhyq" ],
                "timeCreated" : "2016-11-18T22:26:14.639Z",
                "vcnId" : "ocid1.vcn.oc1.phx.aaaaaaaax45nyk226ps4pknnef7nmcmd5cgeenrkpbqtiotszg3hmacocrfq",
                "virtualRouterIp" : "10.0.1.1",
                "virtualRouterMac" : "00:00:19:4C:62:98"
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Subnet'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateSubnet
      tags:
      - virtualNetwork
      x-example: |
        POST /20160918/subnets
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "displayName" : "MySubnet",
          "cidrBlock" : "10.0.2.0/24",
          "availabilityDomain" : "crmS:PHX-AD-1",
          "routeTableId" : "ocid1.routetable.oc1.phx.aaaaaaaabkzwmlew7tb7orbcsaq7hx6wcmdeuh5slbosmbbdy52oxaahsitq",
          "securityListIds" : [ "ocid1.securitylist.oc1.phx.aaaaaaaadyndu2n3hcmdsjfiljwyq7vpxsvv7ynp4ori7aealcvhzicnzhyq" ],
          "dhcpOptionsId" : "ocid1.dhcpoptions.oc1.phx.aaaaaaaauqemh7hsa35d7dx5m46f3prnxzgw4nevb6z6cmdmckvy7odixthq",
          "vcnId" : "ocid1.vcn.oc1.phx.aaaaaaaax45nyk226ps4pknnef7nmcmd5cgeenrkpbqtiotszg3hmacocrfq",
          "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq"
        }
  /subnets/{subnetId}:
    delete:
      description: |
        Deletes the specified subnet, but only if there are no instances in the subnet. This is an asynchronous
        operation. The subnet's `lifecycleState` will change to TERMINATING temporarily. If there are any
        instances in the subnet, the state will instead change back to AVAILABLE.
      operationId: DeleteSubnet
      parameters:
      - $ref: '#/parameters/SubnetIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The subnet is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteSubnet
      tags:
      - virtualNetwork
    get:
      description: Gets the specified subnet's information.
      operationId: GetSubnet
      parameters:
      - $ref: '#/parameters/SubnetIdPathParam'
      responses:
        200:
          description: The subnet was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Subnet'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetSubnet
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the specified subnet's display name. Avoid entering confidential information.
      operationId: UpdateSubnet
      parameters:
      - $ref: '#/parameters/SubnetIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Details object for updating a subnet.
        in: body
        name: UpdateSubnetDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateSubnetDetails'
      responses:
        200:
          description: The subnet was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Subnet'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateSubnet
      tags:
      - virtualNetwork
  /vcns:
    get:
      description: |
        Lists the Virtual Cloud Networks (VCNs) in the specified compartment.
      operationId: ListVcns
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to only return resources that match the given lifecycle
          state.  The state value is case-insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/Vcn/lifecycleState'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/Vcn'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVcns
      tags:
      - virtualNetwork
    post:
      description: |
        Creates a new Virtual Cloud Network (VCN). For more information, see
        [VCNs and Subnets](/Content/Network/Tasks/managingVCNs.htm).

        For the VCN you must specify a single, contiguous IPv4 CIDR block. Oracle recommends using one of the
        private IP address ranges specified in [RFC 1918](https://tools.ietf.org/html/rfc1918) (10.0.0.0/8,
        172.16/12, and 192.168/16). Example: 172.16.0.0/16. The CIDR block can range from /16 to /30, and it
        must not overlap with your on-premises network. You can't change the size of the VCN after creation.

        For the purposes of access control, you must provide the OCID of the compartment where you want the VCN to
        reside. Consult an Oracle Cloud Infrastructure administrator in your organization if you're not sure which
        compartment to use. Notice that the VCN doesn't have to be in the same compartment as the subnets or other
        Networking Service components. For more information about compartments and access control, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm). For information about OCIDs, see
        [Resource Identifiers](/Content/General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the VCN, otherwise a default is provided. It does not have to
        be unique, and you can change it. Avoid entering confidential information.

        You can also add a DNS label for the VCN, which is required if you want the instances to use the
        Interent and VCN Resolver option for DNS in the VCN. For more information, see
        [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).

        The VCN automatically comes with a default route table, default security list, and default set of DHCP options.
        The OCID for each is returned in the response. You can't delete these default objects, but you can change their
        contents (that is, change the route rules, security list rules, and so on).

        The VCN and subnets you create are not accessible until you attach an Internet Gateway or set up an IPSec VPN
        or FastConnect. For more information, see
        [Overview of the Networking Service](/Content/Network/Concepts/overview.htm).
      operationId: CreateVcn
      parameters:
      - description: Details for creating a new VCN.
        in: body
        name: CreateVcnDetails
        required: true
        schema:
          $ref: '#/definitions/CreateVcnDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The VCN was created.
          examples:
            application-json: |
              {
                "cidrBlock" : "10.0.0.0/16",
                "compartmentId" : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
                "defaultDhcpOptionsId" : "ocid1.dhcpoptions.oc1.phx.aaaaaaaauqemh7hsa35d7dx5m46f3prnxzgw4nevb6z6cmdmckvy7odixthq",
                "defaultRouteTableId" : "ocid1.routetable.oc1.phx.aaaaaaaabkzwmlew7tb7orbcsaq7hx6wcmdeuh5slbosmbbdy52oxaahsitq",
                "defaultSecurityListId" : "ocid1.securitylist.oc1.phx.aaaaaaaadyndu2n3hcmdsjfiljwyq7vpxsvv7ynp4ori7aealcvhzicnzhyq",
                "displayName" : "MyVcn",
                "id" : "ocid1.vcn.oc1.phx.aaaaaaaax45nyk226ps4pknnef7nmcmd5cgeenrkpbqtiotszg3hmacocrfq",
                "lifecycleState" : "AVAILABLE",
                "timeCreated" : "2016-11-18T22:16:24.423Z"
              }
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Vcn'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateVcn
      tags:
      - virtualNetwork
      x-example: |
        POST /20160918/vcns
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          cidrBlock : "10.0.0.0/16",
          compartmentId : "ocid1.compartment.oc1..aaaaaaaayzfqeibduyox6iib3olcmdar3ugly4fmameq4h7lcdlihrvur7xq",
          displayName : "MyVcn"
        }
  /vcns/{vcnId}:
    delete:
      description: |
        Deletes the specified VCN. The VCN must be empty and have no attached gateways. This is an asynchronous
        operation. The VCN's `lifecycleState` will change to TERMINATING temporarily until the VCN is completely
        removed.
      operationId: DeleteVcn
      parameters:
      - $ref: '#/parameters/VcnIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The VCN is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteVcn
      tags:
      - virtualNetwork
    get:
      description: Gets the specified VCN's information.
      operationId: GetVcn
      parameters:
      - $ref: '#/parameters/VcnIdPathParam'
      responses:
        200:
          description: The VCN was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Vcn'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVcn
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the specified VCN's display name.
        Avoid entering confidential information.
      operationId: UpdateVcn
      parameters:
      - $ref: '#/parameters/VcnIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Details object for updating a VCN.
        in: body
        name: UpdateVcnDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateVcnDetails'
      responses:
        200:
          description: The VCN was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Vcn'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateVcn
      tags:
      - virtualNetwork
  /virtualCircuitBandwidthShapes:
    get:
      description: |
        The deprecated operation lists available bandwidth levels for virtual circuits. For the compartment ID, provide the OCID of your tenancy (the root compartment).
      operationId: ListVirtualCircuitBandwidthShapes
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/VirtualCircuitBandwidthShape'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVirtualCircuitBandwidthShapes
      tags:
      - virtualNetwork
  /virtualCircuits:
    get:
      description: |
        Lists the virtual circuits in the specified compartment.
      operationId: ListVirtualCircuits
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to return only resources that match the specified lifecycle
          state. The value is case insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/VirtualCircuit/lifecycleState'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/VirtualCircuit'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVirtualCircuits
      tags:
      - virtualNetwork
    post:
      description: |
        Creates a new virtual circuit to use with Oracle Cloud
        Infrastructure FastConnect. For more information, see
        [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).

        For the purposes of access control, you must provide the OCID of the
        compartment where you want the virtual circuit to reside. If you're
        not sure which compartment to use, put the virtual circuit in the
        same compartment with the DRG it's using. For more information about
        compartments and access control, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm).
        For information about OCIDs, see
        [Resource Identifiers](/Content/General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the virtual circuit.
        It does not have to be unique, and you can change it. Avoid entering confidential information.

        **Important:** When creating a virtual circuit, you specify a DRG for
        the traffic to flow through. Make sure you attach the DRG to your
        VCN and confirm the VCN's routing sends traffic to the DRG. Otherwise
        traffic will not flow. For more information, see
        [Route Tables](/Content/Network/Tasks/managingroutetables.htm).
      operationId: CreateVirtualCircuit
      parameters:
      - description: Details to create a VirtualCircuit.
        in: body
        name: CreateVirtualCircuitDetails
        required: true
        schema:
          $ref: '#/definitions/CreateVirtualCircuitDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The VirtualCircuit was created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/VirtualCircuit'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateVirtualCircuit
      tags:
      - virtualNetwork
  /virtualCircuits/{virtualCircuitId}:
    delete:
      description: |
        Deletes the specified virtual circuit.

        **Important:** If you're using FastConnect via a provider,
        make sure to also terminate the connection with
        the provider, or else the provider may continue to bill you.
      operationId: DeleteVirtualCircuit
      parameters:
      - $ref: '#/parameters/VirtualCircuitIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The virtual circuit is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteVirtualCircuit
      tags:
      - virtualNetwork
    get:
      description: Gets the specified virtual circuit's information.
      operationId: GetVirtualCircuit
      parameters:
      - $ref: '#/parameters/VirtualCircuitIdPathParam'
      responses:
        200:
          description: The virtual circuit was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/VirtualCircuit'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVirtualCircuit
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the specified virtual circuit. This can be called by
        either the customer who owns the virtual circuit, or the
        provider (when provisioning or de-provisioning the virtual
        circuit from their end). The documentation for
        [UpdateVirtualCircuitDetails](#/en/iaas/20160918/requests/UpdateVirtualCircuitDetails)
        indicates who can update each property of the virtual circuit.

        **Important:** If the virtual circuit is working and in the
        PROVISIONED state, updating any of the network-related properties
        (such as the DRG being used, the BGP ASN, and so on) will cause the virtual
        circuit's state to switch to PROVISIONING and the related BGP
        session to go down. After Oracle re-provisions the virtual circuit,
        its state will return to PROVISIONED. Make sure you confirm that
        the associated BGP session is back up. For more information
        about the various states and how to test connectivity, see
        [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).

        To change the list of public IP prefixes for a public virtual circuit,
        use [BulkAddVirtualCircuitPublicPrefixes](#/en/iaas/20160918/VirtualCircuitPublicPrefix/BulkAddVirtualCircuitPublicPrefixes)
        and
        [BulkDeleteVirtualCircuitPublicPrefixes](#/en/iaas/20160918/VirtualCircuitPublicPrefix/BulkDeleteVirtualCircuitPublicPrefixes).
        Updating the list of prefixes does NOT cause the BGP session to go down. However,
        Oracle must verify the customer's ownership of each added prefix before
        traffic for that prefix will flow across the virtual circuit.
      operationId: UpdateVirtualCircuit
      parameters:
      - $ref: '#/parameters/VirtualCircuitIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Update VirtualCircuit fields.
        in: body
        name: UpdateVirtualCircuitDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateVirtualCircuitDetails'
      responses:
        200:
          description: The virtual circuit was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/VirtualCircuit'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        403:
          $ref: '#/responses/403'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateVirtualCircuit
      tags:
      - virtualNetwork
  /virtualCircuits/{virtualCircuitId}/actions/bulkAddPublicPrefixes:
    post:
      description: |
        Adds one or more customer public IP prefixes to the specified public virtual circuit.
        Use this operation (and not [UpdateVirtualCircuit](#/en/iaas/20160918/VirtualCircuit/UpdateVirtualCircuit))
        to add prefixes to the virtual circuit. Oracle must verify the customer's ownership
        of each prefix before traffic for that prefix will flow across the virtual circuit.
      operationId: BulkAddVirtualCircuitPublicPrefixes
      parameters:
      - $ref: '#/parameters/VirtualCircuitIdPathParam'
      - description: Request with publix prefixes to be added to the virtual circuit
        in: body
        name: BulkAddVirtualCircuitPublicPrefixesDetails
        required: true
        schema:
          $ref: '#/definitions/BulkAddVirtualCircuitPublicPrefixesDetails'
      responses:
        204:
          description: Addition of public prefixes accepted.
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: BulkAddVirtualCircuitPublicPrefixes
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-507
      x-related-resource: '#/definitions/VirtualCircuitPublicPrefix'
  /virtualCircuits/{virtualCircuitId}/actions/bulkDeletePublicPrefixes:
    post:
      description: |
        Removes one or more customer public IP prefixes from the specified public virtual circuit.
        Use this operation (and not [UpdateVirtualCircuit](#/en/iaas/20160918/VirtualCircuit/UpdateVirtualCircuit))
        to remove prefixes from the virtual circuit. When the virtual circuit's state switches
        back to PROVISIONED, Oracle stops advertising the specified prefixes across the connection.
      operationId: BulkDeleteVirtualCircuitPublicPrefixes
      parameters:
      - $ref: '#/parameters/VirtualCircuitIdPathParam'
      - description: Request with publix prefixes to be deleted from the virtual circuit
        in: body
        name: BulkDeleteVirtualCircuitPublicPrefixesDetails
        required: true
        schema:
          $ref: '#/definitions/BulkDeleteVirtualCircuitPublicPrefixesDetails'
      responses:
        204:
          description: Deletion of public prefixes accepted.
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: BulkDeleteVirtualCircuitPublicPrefixes
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-507
      x-related-resource: '#/definitions/VirtualCircuitPublicPrefix'
  /virtualCircuits/{virtualCircuitId}/publicPrefixes:
    get:
      description: |
        Lists the public IP prefixes and their details for the specified
        public virtual circuit.
      operationId: ListVirtualCircuitPublicPrefixes
      parameters:
      - $ref: '#/parameters/VirtualCircuitIdPathParam'
      - description: 'A filter to only return resources that match the given verification
          state.

          The state value is case-insensitive.

          '
        in: query
        name: verificationState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/VirtualCircuitPublicPrefix/verificationState'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/VirtualCircuitPublicPrefix'
            type: array
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVirtualCircuitPublicPrefixes
      tags:
      - virtualNetwork
      x-obmcs-feature-id:
      - udx-507
  /vnicAttachments/:
    get:
      description: |
        Lists the VNIC attachments in the specified compartment. A VNIC attachment
        resides in the same compartment as the attached instance. The list can be
        filtered by instance, VNIC, or Availability Domain.
      operationId: ListVnicAttachments
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/InstanceIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/VnicIdOptionalQueryParam'
      produces:
      - application/json
      - application/x-json-stream
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/VnicAttachment'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVnicAttachments
      tags:
      - compute
    post:
      description: |
        Creates a secondary VNIC and attaches it to the specified instance.
        For more information about secondary VNICs, see
        [Virtual Network Interface Cards (VNICs)](/Content/Network/Tasks/managingVNICs.htm).
      operationId: AttachVnic
      parameters:
      - description: Attach VNIC details.
        in: body
        name: AttachVnicDetails
        required: true
        schema:
          $ref: '#/definitions/AttachVnicDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The VNIC is being attached.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/VnicAttachment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: AttachVnic
      tags:
      - compute
  /vnicAttachments/{vnicAttachmentId}:
    delete:
      description: |
        Detaches and deletes the specified secondary VNIC.
        This operation cannot be used on the instance's primary VNIC.
        When you terminate an instance, all attached VNICs (primary
        and secondary) are automatically detached and deleted.

        **Important:** If the VNIC has a
        [private IP](#/en/iaas/20160918/PrivateIp/) that is the
        [target of a route rule](/Content/Network/Tasks/managingroutetables.htm#privateip),
        deleting the VNIC causes that route rule to blackhole and the traffic
        will be dropped.
      operationId: DetachVnic
      parameters:
      - $ref: '#/parameters/VnicAttachmentIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The VNIC is being detached.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DetachVnic
      tags:
      - compute
      x-related-resource: '#/definitions/VnicAttachment'
    get:
      description: |
        Gets the information for the specified VNIC attachment.
      operationId: GetVnicAttachment
      parameters:
      - $ref: '#/parameters/VnicAttachmentIdPathParam'
      responses:
        200:
          description: The VNIC attachment was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/VnicAttachment'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVnicAttachment
      tags:
      - compute
  /vnics/{vnicId}:
    get:
      description: |
        Gets the information for the specified virtual network interface card (VNIC).
        You can get the VNIC OCID from the
        [ListVnicAttachments](#/en/iaas/20160918/VnicAttachment/ListVnicAttachments)
        operation.
      operationId: GetVnic
      parameters:
      - $ref: '#/parameters/VnicIdPathParam'
      responses:
        200:
          description: The VNIC was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Vnic'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVnic
      tags:
      - virtualNetwork
    put:
      description: |
        Updates the specified VNIC.
      operationId: UpdateVnic
      parameters:
      - $ref: '#/parameters/VnicIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Details object for updating a VNIC.
        in: body
        name: UpdateVnicDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateVnicDetails'
      responses:
        200:
          description: The VNIC was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Vnic'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateVnic
      tags:
      - virtualNetwork
  /volumeAttachments/:
    get:
      description: |
        Lists the volume attachments in the specified compartment. You can filter the
        list by specifying an instance OCID, volume OCID, or both.

        Currently, the only supported volume attachment type is [IScsiVolumeAttachment](#/en/iaas/20160918/IScsiVolumeAttachment/).
      operationId: ListVolumeAttachments
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/InstanceIdQueryParam'
      - $ref: '#/parameters/VolumeIdQueryParam'
      produces:
      - application/json
      - application/x-json-stream
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/VolumeAttachment'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVolumeAttachments
      tags:
      - compute
    post:
      description: |
        Attaches the specified storage volume to the specified instance.
      operationId: AttachVolume
      parameters:
      - description: Attach volume request
        in: body
        name: AttachVolumeDetails
        required: true
        schema:
          $ref: '#/definitions/AttachVolumeDetails'
      - $ref: '#/parameters/RetryTokenHeader'
      responses:
        200:
          description: The volume is being attached.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/VolumeAttachment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: AttachVolume
      tags:
      - compute
  /volumeAttachments/{volumeAttachmentId}:
    delete:
      description: |
        Detaches a storage volume from an instance. You must specify the OCID of the volume attachment.

        This is an asynchronous operation. The attachment's `lifecycleState` will change to DETACHING temporarily
        until the attachment is completely removed.
      operationId: DetachVolume
      parameters:
      - $ref: '#/parameters/VolumeAttachmentIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The request was accepted by the server
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DetachVolume
      tags:
      - compute
    get:
      description: Gets information about the specified volume attachment.
      operationId: GetVolumeAttachment
      parameters:
      - $ref: '#/parameters/VolumeAttachmentIdPathParam'
      responses:
        200:
          description: The volume attachment was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/VolumeAttachment'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVolumeAttachment
      tags:
      - compute
  /volumeBackupPolicies:
    get:
      description: Lists all volume backup policies available to the caller.
      operationId: ListVolumeBackupPolicies
      parameters:
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/VolumeBackupPolicy'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVolumeBackupPolicies
      tags:
      - blockstorage
  /volumeBackupPolicies/{policyId}:
    get:
      description: Gets information for the specified volume backup policy.
      operationId: GetVolumeBackupPolicy
      parameters:
      - $ref: '#/parameters/VolumeBackupPolicyIdPathParam'
      responses:
        200:
          description: The volume backup policy was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/VolumeBackupPolicy'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVolumeBackupPolicy
      tags:
      - blockstorage
  /volumeBackupPolicyAssignments:
    get:
      description: |
        Gets the volume backup policy assignment for the specified asset. Note that the
        assetId query parameter is required, and that the returned list will contain at most
        one item (since any given asset can only have one policy assigned to it).
      operationId: GetVolumeBackupPolicyAssetAssignment
      parameters:
      - $ref: '#/parameters/AssetIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/VolumeBackupPolicyAssignment'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVolumeBackupPolicyAssetAssignment
      tags:
      - blockstorage
    post:
      description: |
        Assigns a policy to the specified asset, such as a volume. Note that a given asset can
        only have one policy assigned to it; if this method is called for an asset that previously
        has a different policy assigned, the prior assignment will be silently deleted.
      operationId: CreateVolumeBackupPolicyAssignment
      parameters:
      - description: Request to assign a specified policy to a particular asset.
        in: body
        name: CreateVolumeBackupPolicyAssignmentDetails
        required: true
        schema:
          $ref: '#/definitions/CreateVolumeBackupPolicyAssignmentDetails'
      responses:
        200:
          description: The volume backup policy has been assigned.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/VolumeBackupPolicyAssignment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateVolumeBackupPolicyAssignment
      tags:
      - blockstorage
  /volumeBackupPolicyAssignments/{policyAssignmentId}:
    delete:
      description: Deletes a volume backup policy assignment (i.e. unassigns the policy
        from an asset).
      operationId: DeleteVolumeBackupPolicyAssignment
      parameters:
      - $ref: '#/parameters/VolumeBackupPolicyAssignmentIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The volume backup policy assignment has been deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteVolumeBackupPolicyAssignment
      tags:
      - blockstorage
    get:
      description: Gets information for the specified volume backup policy assignment.
      operationId: GetVolumeBackupPolicyAssignment
      parameters:
      - $ref: '#/parameters/VolumeBackupPolicyAssignmentIdPathParam'
      responses:
        200:
          description: The volume backup policy assignment was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/VolumeBackupPolicyAssignment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVolumeBackupPolicyAssignment
      tags:
      - blockstorage
  /volumeBackups:
    get:
      description: |
        Lists the volume backups in the specified compartment. You can filter the results by volume.
      operationId: ListVolumeBackups
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/VolumeIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to only return resources that match the given lifecycle
          state.  The state value is case-insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/VolumeBackup/lifecycleState'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/VolumeBackup'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVolumeBackups
      tags:
      - blockstorage
    post:
      description: |
        Creates a new backup of the specified volume. For general information about volume backups,
        see [Overview of Block Volume Service Backups](/Content/Block/Concepts/blockvolumebackups.htm)

        When the request is received, the backup object is in a REQUEST_RECEIVED state.
        When the data is imaged, it goes into a CREATING state.
        After the backup is fully uploaded to the cloud, it goes into an AVAILABLE state.
      operationId: CreateVolumeBackup
      parameters:
      - $ref: '#/parameters/RetryTokenHeader'
      - description: Request to create a new backup of given volume.
        in: body
        name: CreateVolumeBackupDetails
        required: true
        schema:
          $ref: '#/definitions/CreateVolumeBackupDetails'
      responses:
        200:
          description: The volume backup is being created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/VolumeBackup'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateVolumeBackup
      tags:
      - blockstorage
  /volumeBackups/{volumeBackupId}:
    delete:
      description: Deletes a volume backup.
      operationId: DeleteVolumeBackup
      parameters:
      - $ref: '#/parameters/VolumeBackupIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The volume backup is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteVolumeBackup
      tags:
      - blockstorage
    get:
      description: Gets information for the specified volume backup.
      operationId: GetVolumeBackup
      parameters:
      - $ref: '#/parameters/VolumeBackupIdPathParam'
      responses:
        200:
          description: The volume backup was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/VolumeBackup'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVolumeBackup
      tags:
      - blockstorage
    put:
      description: |
        Updates the display name for the specified volume backup.
        Avoid entering confidential information.
      operationId: UpdateVolumeBackup
      parameters:
      - $ref: '#/parameters/VolumeBackupIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Update volume backup fields
        in: body
        name: UpdateVolumeBackupDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateVolumeBackupDetails'
      responses:
        200:
          description: The volume backup was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
          schema:
            $ref: '#/definitions/VolumeBackup'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateVolumeBackup
      tags:
      - blockstorage
  /volumes:
    get:
      description: |
        Lists the volumes in the specified compartment and Availability Domain.
      operationId: ListVolumes
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - description: 'A filter to only return resources that match the given lifecycle
          state.  The state value is case-insensitive.

          '
        in: query
        name: lifecycleState
        required: false
        type: string
        x-obmcs-enumref: '#/definitions/Volume/lifecycleState'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then a partial list might have been returned. Include this value as the `page` parameter for the
                subsequent GET request to get the next batch of items.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/Volume'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVolumes
      tags:
      - blockstorage
    post:
      description: |
        Creates a new volume in the specified compartment. Volumes can be created in sizes ranging from
        50 GB (51200 MB) to 16 TB (16777216 MB), in 1 GB (1024 MB) increments. By default, volumes are 1 TB (1048576 MB).
        For general information about block volumes, see
        [Overview of Block Volume Service](/Content/Block/Concepts/overview.htm).

        A volume and instance can be in separate compartments but must be in the same Availability Domain.
        For information about access control and compartments, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm). For information about
        Availability Domains, see [Regions and Availability Domains](/Content/General/Concepts/regions.htm).
        To get a list of Availability Domains, use the `ListAvailabilityDomains` operation
        in the Identity and Access Management Service API.

        You may optionally specify a *display name* for the volume, which is simply a friendly name or
        description. It does not have to be unique, and you can change it. Avoid entering confidential information.
      operationId: CreateVolume
      parameters:
      - $ref: '#/parameters/RetryTokenHeader'
      - description: Request to create a new volume.
        in: body
        name: CreateVolumeDetails
        required: true
        schema:
          $ref: '#/definitions/CreateVolumeDetails'
      responses:
        200:
          description: The volume is being created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Volume'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateVolume
      tags:
      - blockstorage
  /volumes/{volumeId}:
    delete:
      description: |
        Deletes the specified volume. The volume cannot have an active connection to an instance.
        To disconnect the volume from a connected instance, see
        [Disconnecting From a Volume](/Content/Block/Tasks/disconnectingfromavolume.htm).
        **Warning:** All data on the volume will be permanently lost when the volume is deleted.
      operationId: DeleteVolume
      parameters:
      - $ref: '#/parameters/VolumeIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The volume is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteVolume
      tags:
      - blockstorage
    get:
      description: Gets information for the specified volume.
      operationId: GetVolume
      parameters:
      - $ref: '#/parameters/VolumeIdPathParam'
      responses:
        200:
          description: The volume's information has been retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Volume'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVolume
      tags:
      - blockstorage
    put:
      description: |
        Updates the specified volume's display name.
        Avoid entering confidential information.
      operationId: UpdateVolume
      parameters:
      - $ref: '#/parameters/VolumeIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Update volume's display name. Avoid entering confidential information.
        in: body
        name: UpdateVolumeDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateVolumeDetails'
      responses:
        200:
          description: The volume was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
                a particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Volume'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateVolume
      tags:
      - blockstorage
definitions:
  AttachBootVolumeDetails:
    properties:
      bootVolumeId:
        description: The OCID of the  boot volume.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it cannot be changed. Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - instanceId
    - bootVolumeId
    x-obmcs-feature-id:
    - udx-117
  AttachIScsiVolumeDetails:
    allOf:
    - $ref: '#/definitions/AttachVolumeDetails'
    - discriminator: iscsi
      properties:
        useChap:
          description: Whether to use CHAP authentication for the volume attachment.
            Defaults to false.
          type: boolean
  AttachVnicDetails:
    properties:
      createVnicDetails:
        $ref: '#/definitions/CreateVnicDetails'
        description: |
          Details for creating a new VNIC.
      displayName:
        description: |
          A user-friendly name for the attachment. Does not have to be unique, and it cannot be changed.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance.
        maxLength: 255
        minLength: 1
        type: string
      nicIndex:
        description: |
          Which physical network interface card (NIC) the VNIC will use. Defaults to 0.
          Certain bare metal instance shapes have two active physical NICs (0 and 1). If
          you add a secondary VNIC to one of these instances, you can specify which NIC
          the VNIC will use. For more information, see
          [Virtual Network Interface Cards (VNICs)](/Content/Network/Tasks/managingVNICs.htm).
        format: int32
        maximum: 31
        minimum: 0
        type: integer
        x-obmcs-feature-id:
        - udx-473
    required:
    - instanceId
    - createVnicDetails
  AttachVolumeDetails:
    discriminator: type
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it cannot be changed. Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance.
        maxLength: 255
        minLength: 1
        type: string
      isReadOnly:
        description: Whether the attachment was created in read-only mode.
        type: boolean
      type:
        description: The type of volume. The only supported value is "iscsi".
        maxLength: 255
        minLength: 1
        type: string
      volumeId:
        description: The OCID of the volume.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - instanceId
    - volumeId
    - type
  BootVolume:
    description: |
      A detachable boot volume device that contains the image used to boot an Compute instance. For more information, see
      [Overview of Boot Volumes](/Content/Block/Concepts/bootvolumes.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of the boot volume.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment that contains the boot volume.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The boot volume's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      imageId:
        description: The image OCID used to create the boot volume.
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The current state of a boot volume.
        enum:
        - PROVISIONING
        - RESTORING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        - FAULTY
        type: string
      sizeInGBs:
        description: The size of the boot volume in GBs.
        format: int64
        type: integer
      sizeInMBs:
        description: |
          The size of the volume in MBs. The value must be a multiple of 1024.
          This field is deprecated. Please use sizeInGBs.
        format: int64
        type: integer
      timeCreated:
        description: The date and time the boot volume was created. Format defined
          by RFC3339.
        format: date-time
        type: string
    required:
    - id
    - availabilityDomain
    - sizeInMBs
    - compartmentId
    - timeCreated
    - lifecycleState
    x-obmcs-feature-id:
    - udx-117
  BootVolumeAttachment:
    description: |
      Represents an attachment between a boot volume and an instance.
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of an instance.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      bootVolumeId:
        description: The OCID of the boot volume.
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it cannot be changed.
          Avoid entering confidential information.

          Example: `My boot volume`
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The OCID of the boot volume attachment.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance the boot volume is attached to.
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The current state of the boot volume attachment.
        enum:
        - ATTACHING
        - ATTACHED
        - DETACHING
        - DETACHED
        type: string
      timeCreated:
        description: |
          The date and time the boot volume was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
    required:
    - id
    - instanceId
    - bootVolumeId
    - lifecycleState
    - compartmentId
    - availabilityDomain
    - timeCreated
    x-obmcs-feature-id:
    - udx-117
  BulkAddVirtualCircuitPublicPrefixesDetails:
    properties:
      publicPrefixes:
        description: The public IP prefixes (CIDRs) to add to the public virtual circuit.
        items:
          $ref: '#/definitions/CreateVirtualCircuitPublicPrefixDetails'
        maximum: 50
        minimum: 0
        type: array
    required:
    - publicPrefixes
    x-obmcs-feature-id:
    - udx-507
  BulkDeleteVirtualCircuitPublicPrefixesDetails:
    properties:
      publicPrefixes:
        description: The public IP prefixes (CIDRs) to remove from the public virtual
          circuit.
        items:
          $ref: '#/definitions/DeleteVirtualCircuitPublicPrefixDetails'
        maximum: 50
        minimum: 0
        type: array
    required:
    - publicPrefixes
    x-obmcs-feature-id:
    - udx-507
  CaptureConsoleHistoryDetails:
    properties:
      definedTags:
        additionalProperties: &id001
          additionalProperties:
            description: |
              The value of the tag. Only the String type is supported.
            type: object
          description: |
            Key-value pair representing a defined tag key and value, scoped to a namespace.

            Example: `{"CostCenter": "42"}`
          type: object
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: &id002
          type: string
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      instanceId:
        description: The OCID of the instance to get the console history from.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - instanceId
  ConnectLocalPeeringGatewaysDetails:
    description: Information about the other local peering gateway (LPG).
    properties:
      peerId:
        description: The OCID of the LPG you want to peer with.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - peerId
    x-obmcs-feature-id:
    - udx-141
  ConsoleHistory:
    description: |
      An instance's serial console data. It includes configuration messages that occur when the
      instance boots, such as kernel and BIOS messages, and is useful for checking the status of
      the instance or diagnosing problems. The console data is minimally formatted ASCII text.
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of an instance.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.

          Example: `My console history metadata`
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      id:
        description: The OCID of the console history metadata object.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance this console history was fetched from.
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The current state of the console history.
        enum:
        - REQUESTED
        - GETTING-HISTORY
        - SUCCEEDED
        - FAILED
        type: string
      timeCreated:
        description: |
          The date and time the history was created, in the format defined by RFC3339.
          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
    required:
    - id
    - compartmentId
    - lifecycleState
    - availabilityDomain
    - timeCreated
    - instanceId
  Cpe:
    description: |
      An object you create when setting up an IPSec VPN between your on-premises network
      and VCN. The `Cpe` is a virtual representation of your Customer-Premises Equipment,
      which is the actual router on-premises at your site at your end of the IPSec VPN connection.
      For more information,
      see [Overview of the Networking Service](/Content/Network/Concepts/overview.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment containing the CPE.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The CPE's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      ipAddress:
        description: The public IP address of the on-premises router.
        maxLength: 46
        minLength: 1
        type: string
      timeCreated:
        description: |
          The date and time the CPE was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
    required:
    - compartmentId
    - id
    - ipAddress
  CreateCpeDetails:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the CPE.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      ipAddress:
        description: |
          The public IP address of the on-premises router.

          Example: `143.19.23.16`
        maxLength: 46
        minLength: 1
        type: string
    required:
    - compartmentId
    - ipAddress
  CreateCrossConnectDetails:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the cross-connect.
        maxLength: 255
        minLength: 1
        type: string
      crossConnectGroupId:
        description: The OCID of the cross-connect group to put this cross-connect
          in.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      farCrossConnectOrCrossConnectGroupId:
        description: |
          If you already have an existing cross-connect or cross-connect group at this FastConnect
          location, and you want this new cross-connect to be on a different router (for the
          purposes of redundancy), provide the OCID of that existing cross-connect or
          cross-connect group.
        maxLength: 255
        minLength: 1
        type: string
      locationName:
        description: |
          The name of the FastConnect location where this cross-connect will be installed.
          To get a list of the available locations, see
          [ListCrossConnectLocations](#/en/iaas/20160918/CrossConnectLocation/ListCrossConnectLocations).

          Example: `CyrusOne, Chandler, AZ`
        maxLength: 255
        minLength: 1
        type: string
      nearCrossConnectOrCrossConnectGroupId:
        description: |
          If you already have an existing cross-connect or cross-connect group at this FastConnect
          location, and you want this new cross-connect to be on the same router, provide the
          OCID of that existing cross-connect or cross-connect group.
        maxLength: 255
        minLength: 1
        type: string
      portSpeedShapeName:
        description: |
          The port speed for this cross-connect. To get a list of the available port speeds, see
          [ListCrossConnectPortSpeedShapes](#/en/iaas/20160918/CrossConnectPortSpeedShape/ListCrossconnectPortSpeedShapes).

          Example: `10 Gbps`
        type: string
    required:
    - locationName
    - portSpeedShapeName
    - compartmentId
  CreateCrossConnectGroupDetails:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the cross-connect group.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
  CreateDhcpDetails:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the set of DHCP options.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      options:
        description: A set of DHCP options.
        items:
          $ref: '#/definitions/DhcpOption'
        type: array
        uniqueItems: true
      vcnId:
        description: The OCID of the VCN the set of DHCP options belongs to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - options
    - vcnId
  CreateDrgAttachmentDetails:
    properties:
      displayName:
        description: A user-friendly name. Does not have to be unique. Avoid entering
          confidential information.
        maxLength: 255
        minLength: 1
        type: string
      drgId:
        description: The OCID of the DRG.
        maxLength: 255
        minLength: 1
        type: string
      vcnId:
        description: The OCID of the VCN.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - drgId
    - vcnId
  CreateDrgDetails:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the DRG.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
  CreateIPSecConnectionDetails:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the IPSec connection.
        maxLength: 255
        minLength: 1
        type: string
      cpeId:
        description: The OCID of the CPE.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      drgId:
        description: The OCID of the DRG.
        maxLength: 255
        minLength: 1
        type: string
      staticRoutes:
        description: |
          Static routes to the CPE. At least one route must be included. The CIDR must not be a
          multicast address or class E address.

          Example: `10.0.1.0/24`
        items:
          type: string
        maxLength: 10
        minLength: 1
        type: array
        uniqueItems: true
    required:
    - compartmentId
    - drgId
    - cpeId
    - staticRoutes
  CreateImageDetails:
    description: Either instanceId or imageSourceDetails must be provided in addition
      to other required parameters.
    properties:
      compartmentId:
        description: The OCID of the compartment containing the instance you want
          to use as the basis for the image.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name for the image. It does not have to be unique, and it's changeable.
          Avoid entering confidential information.

          You cannot use an Oracle-provided image name as a custom image name.

          Example: `My Oracle Linux image`
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      imageSourceDetails:
        $ref: '#/definitions/ImageSourceDetails'
        description: Details for creating an image through import
      instanceId:
        description: The OCID of the instance you want to use as the basis for the
          image.
        maxLength: 255
        minLength: 1
        type: string
      launchMode:
        description: |
          Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
          * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for Oracle-provided images.
          * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
          * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
        enum: &id003
        - NATIVE
        - EMULATED
        - CUSTOM
        type: string
        x-obmcs-resolve-component-ref: true
    required:
    - compartmentId
  CreateInstanceConsoleConnectionDetails:
    description: |
      The details for creating a instance console connection.
      The instance console connection is created in the same compartment as the instance.
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      instanceId:
        description: The OCID of the instance to create the console connection to.
        type: string
      publicKey:
        description: The SSH public key used to authenticate the console connection.
        format: ssh-authorized-key
        type: string
    required:
    - instanceId
    - publicKey
  CreateInternetGatewayDetails:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the Internet Gateway.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      isEnabled:
        description: Whether the gateway is enabled upon creation.
        type: boolean
      vcnId:
        description: The OCID of the VCN the Internet Gateway is attached to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - vcnId
    - isEnabled
  CreateLocalPeeringGatewayDetails:
    properties:
      compartmentId:
        description: The OCID of the compartment containing the local peering gateway
          (LPG).
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable. Avoid
          entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      vcnId:
        description: The OCID of the VCN the LPG belongs to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - vcnId
    x-obmcs-feature-id:
    - udx-141
  CreatePrivateIpDetails:
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable. Avoid
          entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      hostnameLabel:
        description: |
          The hostname for the private IP. Used for DNS. The value
          is the hostname portion of the private IP's fully qualified domain name (FQDN)
          (for example, `bminstance-1` in FQDN `bminstance-1.subnet123.vcn1.oraclevcn.com`).
          Must be unique across all VNICs in the subnet and comply with
          [RFC 952](https://tools.ietf.org/html/rfc952) and
          [RFC 1123](https://tools.ietf.org/html/rfc1123).

          For more information, see
          [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).

          Example: `bminstance-1`
        maxLength: 63
        minLength: 1
        type: string
      ipAddress:
        description: |
          A private IP address of your choice. Must be an available IP address within
          the subnet's CIDR. If you don't specify a value, Oracle automatically
          assigns a private IP address from the subnet.

          Example: `10.0.3.3`
        maxLength: 32
        minLength: 1
        type: string
      vnicId:
        description: |
          The OCID of the VNIC to assign the private IP to. The VNIC and private IP
          must be in the same subnet.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - vnicId
  CreatePublicIpDetails:
    properties:
      compartmentId:
        description: |
          The OCID of the compartment to contain the public IP. For ephemeral public IPs,
          you must set this to the private IP's compartment OCID.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable. Avoid
          entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      lifetime:
        description: |
          Defines when the public IP is deleted and released back to the Oracle Cloud
          Infrastructure public IP pool. For more information, see
          [Public IP Addresses](/Content/Network/Tasks/managingpublicIPs.htm).
        enum:
        - EPHEMERAL
        - RESERVED
        type: string
      privateIpId:
        description: |
          The OCID of the private IP to assign the public IP to.

          Required for an ephemeral public IP because it must always be assigned to a private IP
          (specifically a *primary* private IP).

          Optional for a reserved public IP. If you don't provide it, the public IP is created but not
          assigned to a private IP. You can later assign the public IP with
          [UpdatePublicIp](#/en/iaas/20160918/PublicIp/UpdatePublicIp).
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - lifetime
    x-obmcs-feature-id:
    - udx-136
  CreateRouteTableDetails:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the route table.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      routeRules:
        description: The collection of rules used for routing destination IPs to network
          devices.
        items:
          $ref: '#/definitions/RouteRule'
          maximum: 10
          minimum: 0
        type: array
      vcnId:
        description: The OCID of the VCN the route table belongs to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - routeRules
    - vcnId
  CreateSecurityListDetails:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the security list.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      egressSecurityRules:
        description: Rules for allowing egress IP packets.
        items:
          $ref: '#/definitions/EgressSecurityRule'
          maximum: 50
          minimum: 1
        type: array
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      ingressSecurityRules:
        description: Rules for allowing ingress IP packets.
        items:
          $ref: '#/definitions/IngressSecurityRule'
          maximum: 50
          minimum: 1
        type: array
      vcnId:
        description: The OCID of the VCN the security list belongs to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - egressSecurityRules
    - ingressSecurityRules
    - vcnId
  CreateSubnetDetails:
    properties:
      availabilityDomain:
        description: |
          The Availability Domain to contain the subnet.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      cidrBlock:
        description: |
          The CIDR IP address range of the subnet.

          Example: `172.16.1.0/24`
        maxLength: 32
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment to contain the subnet.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      dhcpOptionsId:
        description: |
          The OCID of the set of DHCP options the subnet will use. If you don't
          provide a value, the subnet will use the VCN's default set of DHCP options.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      dnsLabel:
        description: |
          A DNS label for the subnet, used in conjunction with the VNIC's hostname and
          VCN's DNS label to form a fully qualified domain name (FQDN) for each VNIC
          within this subnet (for example, `bminstance-1.subnet123.vcn1.oraclevcn.com`).
          Must be an alphanumeric string that begins with a letter and is unique within the VCN.
          The value cannot be changed.

          This value must be set if you want to use the Internet and VCN Resolver to resolve the
          hostnames of instances in the subnet. It can only be set if the VCN itself
          was created with a DNS label.

          For more information, see
          [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).

          Example: `subnet123`
        maxLength: 15
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      prohibitPublicIpOnVnic:
        description: |
          Whether VNICs within this subnet can have public IP addresses.
          Defaults to false, which means VNICs created in this subnet will
          automatically be assigned public IP addresses unless specified
          otherwise during instance launch or VNIC creation (with the
          `assignPublicIp` flag in [CreateVnicDetails](#/en/iaas/20160918/CreateVnicDetails/)).
          If `prohibitPublicIpOnVnic` is set to true, VNICs created in this
          subnet cannot have public IP addresses (that is, it's a private
          subnet).

          Example: `true`
        type: boolean
      routeTableId:
        description: |
          The OCID of the route table the subnet will use. If you don't provide a value,
          the subnet will use the VCN's default route table.
        maxLength: 255
        minLength: 1
        type: string
      securityListIds:
        description: |
          OCIDs for the security lists to associate with the subnet. If you don't
          provide a value, the VCN's default security list will be associated with
          the subnet. Remember that security lists are associated at the subnet
          level, but the rules are applied to the individual VNICs in the subnet.
        items:
          maxLength: 255
          maximum: 5
          minLength: 1
          minimum: 0
          type: string
        type: array
      vcnId:
        description: The OCID of the VCN to contain the subnet.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - availabilityDomain
    - cidrBlock
    - vcnId
  CreateVcnDetails:
    properties:
      cidrBlock:
        description: |
          The CIDR IP address block of the VCN.

          Example: `172.16.0.0/16`
        maxLength: 32
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment to contain the VCN.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      dnsLabel:
        description: |
          A DNS label for the VCN, used in conjunction with the VNIC's hostname and
          subnet's DNS label to form a fully qualified domain name (FQDN) for each VNIC
          within this subnet (for example, `bminstance-1.subnet123.vcn1.oraclevcn.com`).
          Not required to be unique, but it's a best practice to set unique DNS labels
          for VCNs in your tenancy. Must be an alphanumeric string that begins with a letter.
          The value cannot be changed.

          You must set this value if you want instances to be able to use hostnames to
          resolve other instances in the VCN. Otherwise the Internet and VCN Resolver
          will not work.

          For more information, see
          [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).

          Example: `vcn1`
        maxLength: 15
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
    required:
    - compartmentId
    - cidrBlock
  CreateVirtualCircuitDetails:
    properties:
      bandwidthShapeName:
        description: |
          The provisioned data rate of the connection.  To get a list of the
          available bandwidth levels (that is, shapes), see
          [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](#/en/iaas/20160918/VirtualCircuitBandwidthShape/ListFastConnectProviderVirtualCircuitBandwidthShapes).

          Example: `10 Gbps`
        type: string
      compartmentId:
        description: |
          The OCID of the compartment to contain the virtual circuit.
        maxLength: 255
        minLength: 1
        type: string
      crossConnectMappings:
        description: |
          Create a `CrossConnectMapping` for each cross-connect or cross-connect
          group this virtual circuit will run on.
        items:
          $ref: '#/definitions/CrossConnectMapping'
        maximum: 2
        minimum: 0
        type: array
      customerBgpAsn:
        description: |
          Your BGP ASN (either public or private). Provide this value only if
          there's a BGP session that goes from your edge router to Oracle.
          Otherwise, leave this empty or null.
        type: integer
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      gatewayId:
        description: |
          For private virtual circuits only. The OCID of the [Dynamic Routing Gateway (DRG)](#/en/iaas/20160918/Drg)
          that this virtual circuit uses.
        maxLength: 255
        minLength: 1
        type: string
      providerName:
        description: |
          Deprecated. Instead use `providerServiceId`.
          To get a list of the provider names, see
          [ListFastConnectProviderServices](#/en/iaas/20160918/FastConnectProviderService/ListFastConnectProviderServices).
        maxLength: 255
        minLength: 1
        type: string
      providerServiceId:
        description: |
          The OCID of the service offered by the provider (if you're connecting
          via a provider). To get a list of the available service offerings, see
          [ListFastConnectProviderServices](#/en/iaas/20160918/FastConnectProviderService/ListFastConnectProviderServices).
        maxLength: 255
        minLength: 1
        type: string
        x-obmcs-feature-id:
        - udx-645
      providerServiceName:
        description: |
          Deprecated. Instead use `providerServiceId`.
          To get a list of the provider names, see
          [ListFastConnectProviderServices](#/en/iaas/20160918/FastConnectProviderService/ListFastConnectProviderServices).
        maxLength: 255
        minLength: 1
        type: string
      publicPrefixes:
        description: |
          For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to
          advertise across the connection.
        items:
          $ref: '#/definitions/CreateVirtualCircuitPublicPrefixDetails'
        maximum: 50
        minimum: 0
        type: array
        x-obmcs-feature-id:
        - udx-507
      region:
        description: |
          The Oracle Cloud Infrastructure region where this virtual
          circuit is located.
          Example: `phx`
        maxLength: 255
        minLength: 1
        type: string
      type:
        description: |
          The type of IP addresses used in this virtual circuit. PRIVATE
          means [RFC 1918](https://tools.ietf.org/html/rfc1918) addresses
          (10.0.0.0/8, 172.16/12, and 192.168/16). Only PRIVATE is supported.
        enum:
        - PUBLIC
        - PRIVATE
        type: string
    required:
    - compartmentId
    - type
  CreateVirtualCircuitPublicPrefixDetails:
    properties:
      cidrBlock:
        description: |
          An individual public IP prefix (CIDR) to add to the public virtual circuit.
          Must be /24 or less specific.
        maxLength: 50
        minLength: 9
        type: string
    required:
    - cidrBlock
    x-obmcs-feature-id:
    - udx-507
  CreateVnicDetails:
    description: |
      Contains properties for a VNIC. You use this object when creating the
      primary VNIC during instance launch or when creating a secondary VNIC.
      For more information about VNICs, see
      [Virtual Network Interface Cards (VNICs)](/Content/Network/Tasks/managingVNICs.htm).
    properties:
      assignPublicIp:
        description: |
          Whether the VNIC should be assigned a public IP address. Defaults to whether
          the subnet is public or private. If not set and the VNIC is being created
          in a private subnet (that is, where `prohibitPublicIpOnVnic` = true in the
          [Subnet](#/en/iaas/20160918/Subnet/)), then no public IP address is assigned.
          If not set and the subnet is public (`prohibitPublicIpOnVnic` = false), then
          a public IP address is assigned. If set to true and
          `prohibitPublicIpOnVnic` = true, an error is returned.

          **Note:** This public IP address is associated with the primary private IP
          on the VNIC. For more information, see
          [IP Addresses](/Content/Network/Tasks/managingIPaddresses.htm).

          **Note:** There's a limit to the number of [public IPs](#/en/iaas/20160918/PublicIp/)
          a VNIC or instance can have. If you try to create a secondary VNIC
          with an assigned public IP for an instance that has already
          reached its public IP limit, an error is returned. For information
          about the public IP limits, see
          [Public IP Addresses](/Content/Network/Tasks/managingpublicIPs.htm).

          Example: `false`
        type: boolean
      displayName:
        description: |
          A user-friendly name for the VNIC. Does not have to be unique.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      hostnameLabel:
        description: |
          The hostname for the VNIC's primary private IP. Used for DNS. The value is the hostname
          portion of the primary private IP's fully qualified domain name (FQDN)
          (for example, `bminstance-1` in FQDN `bminstance-1.subnet123.vcn1.oraclevcn.com`).
          Must be unique across all VNICs in the subnet and comply with
          [RFC 952](https://tools.ietf.org/html/rfc952) and
          [RFC 1123](https://tools.ietf.org/html/rfc1123).
          The value appears in the [Vnic](#/en/iaas/20160918/Vnic/) object and also the
          [PrivateIp](#/en/iaas/20160918/PrivateIp/) object returned by
          [ListPrivateIps](#/en/iaas/20160918/PrivateIp/ListPrivateIps) and
          [GetPrivateIp](#/en/iaas/20160918/PrivateIp/GetPrivateIp).

          For more information, see
          [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).

          When launching an instance, use this `hostnameLabel` instead
          of the deprecated `hostnameLabel` in
          [LaunchInstanceDetails](#/en/iaas/20160918/requests/LaunchInstanceDetails).
          If you provide both, the values must match.

          Example: `bminstance-1`
        maxLength: 63
        minLength: 1
        type: string
      privateIp:
        description: |
          A private IP address of your choice to assign to the VNIC. Must be an
          available IP address within the subnet's CIDR. If you don't specify a
          value, Oracle automatically assigns a private IP address from the subnet.
          This is the VNIC's *primary* private IP address. The value appears in
          the [Vnic](#/en/iaas/20160918/Vnic/) object and also the
          [PrivateIp](#/en/iaas/20160918/PrivateIp/) object returned by
          [ListPrivateIps](#/en/iaas/20160918/PrivateIp/ListPrivateIps) and
          [GetPrivateIp](#/en/iaas/20160918/PrivateIp/GetPrivateIp).

          Example: `10.0.3.3`
        maxLength: 46
        minLength: 1
        type: string
      skipSourceDestCheck:
        description: |
          Whether the source/destination check is disabled on the VNIC.
          Defaults to `false`, which means the check is performed. For information
          about why you would skip the source/destination check, see
          [Using a Private IP as a Route Target](/Content/Network/Tasks/managingroutetables.htm#privateip).

          Example: `true`
        type: boolean
      subnetId:
        description: |
          The OCID of the subnet to create the VNIC in. When launching an instance,
          use this `subnetId` instead of the deprecated `subnetId` in
          [LaunchInstanceDetails](#/en/iaas/20160918/requests/LaunchInstanceDetails).
          At least one of them is required; if you provide both, the values must match.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - subnetId
  CreateVolumeBackupDetails:
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name for the volume backup. Does not have to be unique and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      type:
        description: The type of backup to create. If omitted, defaults to INCREMENTAL.
        enum:
        - FULL
        - INCREMENTAL
        type: string
      volumeId:
        description: The OCID of the volume that needs to be backed up.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - volumeId
  CreateVolumeBackupPolicyAssignmentDetails:
    properties:
      assetId:
        description: The OCID of the asset (e.g. a volume) to which to assign the
          policy.
        maxLength: 255
        minLength: 1
        type: string
      policyId:
        description: The OCID of the volume backup policy to assign to an asset.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - policyId
    - assetId
  CreateVolumeDetails:
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of the volume.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      backupPolicyId:
        description: |
          If provided, specifies the ID of the volume backup policy to assign to the newly
          created volume. If omitted, no policy will be assigned.
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment that contains the volume.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      sizeInGBs:
        description: The size of the volume in GBs.
        format: int64
        type: integer
      sizeInMBs:
        description: |
          The size of the volume in MBs. The value must be a multiple of 1024.
          This field is deprecated. Use sizeInGBs instead.
        format: int64
        type: integer
      sourceDetails:
        $ref: '#/definitions/VolumeSourceDetails'
        description: |
          Specifies the volume source details for a new Block volume. The volume source is either another Block volume in the same Availability Domain or a Block volume backup.
          This is an optional field. If not specified or set to null, the new Block volume will be empty.
          When specified, the new Block volume will contain data from the source volume or backup.
      volumeBackupId:
        description: |
          The OCID of the volume backup from which the data should be restored on the newly created volume.
          This field is deprecated. Use the sourceDetails field instead to specify the
          backup for the volume.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - availabilityDomain
    - compartmentId
  CrossConnect:
    description: |
      For use with Oracle Cloud Infrastructure FastConnect. A cross-connect represents a
      physical connection between an existing network and Oracle. Customers who are colocated
      with Oracle in a FastConnect location create and use cross-connects. For more
      information, see [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).

      Oracle recommends you create each cross-connect in a
      [CrossConnectGroup](#/en/iaas/20160918/CrossConnectGroup) so you can use link aggregation
      with the connection.

      **Note:** If you're a provider who is setting up a physical connection to Oracle so customers
      can use FastConnect over the connection, be aware that your connection is modeled the
      same way as a colocated customer's (with `CrossConnect` and `CrossConnectGroup` objects, and so on).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment containing the cross-connect group.
        maxLength: 255
        minLength: 1
        type: string
      crossConnectGroupId:
        description: The OCID of the cross-connect group this cross-connect belongs
          to (if any).
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The cross-connect's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The cross-connect's current state.
        enum:
        - PENDING_CUSTOMER
        - PROVISIONING
        - PROVISIONED
        - INACTIVE
        - TERMINATING
        - TERMINATED
        type: string
      locationName:
        description: The name of the FastConnect location where this cross-connect
          is installed.
        maxLength: 255
        minLength: 1
        type: string
      portName:
        description: A string identifying the meet-me room port for this cross-connect.
        maxLength: 255
        minLength: 1
        type: string
      portSpeedShapeName:
        description: |
          The port speed for this cross-connect.

          Example: `10 Gbps`
        type: string
      timeCreated:
        description: |
          The date and time the cross-connect was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
  CrossConnectGroup:
    description: |
      For use with Oracle Cloud Infrastructure FastConnect. A cross-connect group
      is a link aggregation group (LAG), which can contain one or more
      [CrossConnects](#/en/iaas/20160918/CrossConnect). Customers who are colocated with
      Oracle in a FastConnect location create and use cross-connect groups. For more
      information, see [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).

      **Note:** If you're a provider who is setting up a physical connection to Oracle so customers
      can use FastConnect over the connection, be aware that your connection is modeled the
      same way as a colocated customer's (with `CrossConnect` and `CrossConnectGroup` objects, and so on).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment containing the cross-connect group.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          The display name of A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The cross-connect group's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The cross-connect group's current state.
        enum:
        - PROVISIONING
        - PROVISIONED
        - INACTIVE
        - TERMINATING
        - TERMINATED
        type: string
      timeCreated:
        description: |
          The date and time the cross-connect group was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
  CrossConnectLocation:
    description: An individual FastConnect location.
    properties:
      description:
        description: A description of the location.
        maxLength: 255
        minLength: 1
        type: string
      name:
        description: |
          The name of the location.

          Example: `CyrusOne, Chandler, AZ`
        maxLength: 255
        minLength: 1
        type: string
    required:
    - name
    - description
  CrossConnectMapping:
    description: |
      For use with Oracle Cloud Infrastructure FastConnect. Each
      [VirtualCircuit](#/en/iaas/20160918/VirtualCircuit/) runs on one or
      more cross-connects or cross-connect groups. A `CrossConnectMapping`
      contains the properties for an individual cross-connect or cross-connect group
      associated with a given virtual circuit.

      The mapping includes information about the cross-connect or
      cross-connect group, the VLAN, and the BGP peering session.

      If you're a customer who is colocated with Oracle, that means you own both
      the virtual circuit and the physical connection it runs on (cross-connect or
      cross-connect group), so you specify all the information in the mapping. There's
      one exception: for a public virtual circuit, Oracle specifies the BGP IP
      addresses.

      If you're a provider, then you own the physical connection that the customer's
      virtual circuit runs on, so you contribute information about the cross-connect
      or cross-connect group and VLAN.

      Who specifies the BGP peering information in the case of customer connection via
      provider? If the BGP session goes from Oracle to the provider's edge router, then
      the provider also specifies the BGP peering information. If the BGP session instead
      goes from Oracle to the customer's edge router, then the customer specifies the BGP
      peering information. There's one exception: for a public virtual circuit, Oracle
      specifies the BGP IP addresses.
    properties:
      bgpMd5AuthKey:
        description: |
          The key for BGP MD5 authentication. Only applicable if your system
          requires MD5 authentication. If empty or not set (null), that
          means you don't use BGP MD5 authentication.
        maxLength: 255
        minLength: 1
        type: string
      crossConnectOrCrossConnectGroupId:
        description: |
          The OCID of the cross-connect or cross-connect group for this mapping.
          Specified by the owner of the cross-connect or cross-connect group (the
          customer if the customer is colocated with Oracle, or the provider if the
          customer is connecting via provider).
        maxLength: 255
        minLength: 1
        type: string
      customerBgpPeeringIp:
        description: |
          The BGP IP address for the router on the other end of the BGP session from
          Oracle. Specified by the owner of that router. If the session goes from Oracle
          to a customer, this is the BGP IP address of the customer's edge router. If the
          session goes from Oracle to a provider, this is the BGP IP address of the
          provider's edge router. Must use a /30 or /31 subnet mask.

          There's one exception: for a public virtual circuit, Oracle specifies the BGP IP addresses.

          Example: `10.0.0.18/31`
        maxLength: 46
        minLength: 7
        type: string
      oracleBgpPeeringIp:
        description: |
          The IP address for Oracle's end of the BGP session. Must use a /30 or /31
          subnet mask. If the session goes from Oracle to a customer's edge router,
          the customer specifies this information. If the session goes from Oracle to
          a provider's edge router, the provider specifies this.

          There's one exception: for a public virtual circuit, Oracle specifies the BGP IP addresses.

          Example: `10.0.0.19/31`
        maxLength: 46
        minLength: 7
        type: string
      vlan:
        description: |
          The number of the specific VLAN (on the cross-connect or cross-connect group)
          that is assigned to this virtual circuit. Specified by the owner of the cross-connect
          or cross-connect group (the customer if the customer is colocated with Oracle, or
          the provider if the customer is connecting via provider).

          Example: `200`
        maximum: 16777216
        minimum: 100
        type: integer
  CrossConnectPortSpeedShape:
    description: |
      An individual port speed level for cross-connects.
    properties:
      name:
        description: |
          The name of the port speed shape.

          Example: `10 Gbps`
        maxLength: 255
        minLength: 1
        type: string
      portSpeedInGbps:
        description: |
          The port speed in Gbps.

          Example: `10`
        maxLength: 255
        minLength: 1
        type: integer
    required:
    - name
    - portSpeedInGbps
  CrossConnectStatus:
    description: The status of the cross-connect.
    properties:
      crossConnectId:
        description: The OCID of the cross-connect.
        maxLength: 255
        minLength: 1
        type: string
      interfaceState:
        description: Whether Oracle's side of the interface is up or down.
        enum:
        - UP
        - DOWN
        type: string
      lightLevelIndBm:
        description: |
          The light level of the cross-connect (in dBm).

          Example: `14.0`
        format: float
        maximum: 50.0
        minimum: -50.0
        type: number
      lightLevelIndicator:
        description: |
          Status indicator corresponding to the light level.

            * **NO_LIGHT:** No measurable light

            * **LOW_WARN:** There's measurable light but it's too low

            * **HIGH_WARN:** Light level is too high

            * **BAD:** There's measurable light but the signal-to-noise ratio is bad

            * **GOOD:** Good light level
        enum:
        - NO_LIGHT
        - LOW_WARN
        - HIGH_WARN
        - BAD
        - GOOD
        type: string
    required:
    - crossConnectId
  DeleteVirtualCircuitPublicPrefixDetails:
    properties:
      cidrBlock:
        description: An individual public IP prefix (CIDR) to remove from the public
          virtual circuit.
        maxLength: 50
        minLength: 9
        type: string
    required:
    - cidrBlock
    x-obmcs-feature-id:
    - udx-507
  DhcpDnsOption:
    allOf:
    - $ref: '#/definitions/DhcpOption'
    - discriminator: DomainNameServer
      properties:
        customDnsServers:
          description: 'If you set `serverType` to `CustomDnsServer`, specify the
            IP address

            of at least one DNS server of your choice (three maximum).

            '
          items:
            type: string
          max: 3
          type: array
        serverType:
          description: '- **VcnLocal:** Reserved for future use.


            - **VcnLocalPlusInternet:** Also referred to as "Internet and VCN Resolver".

            Instances can resolve internet hostnames (no Internet Gateway is required),

            and can resolve hostnames of instances in the VCN. This is the default

            value in the default set of DHCP options in the VCN. For the Internet
            and

            VCN Resolver to work across the VCN, there must also be a DNS label set
            for

            the VCN, a DNS label set for each subnet, and a hostname for each instance.

            The Internet and VCN Resolver also enables reverse DNS lookup, which lets

            you determine the hostname corresponding to the private IP address. For
            more

            information, see

            [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).


            - **CustomDnsServer:** Instances use a DNS server of your choice (three
            maximum).

            '
          enum:
          - VcnLocal
          - VcnLocalPlusInternet
          - CustomDnsServer
          type: string
      required:
      - serverType
    description: |
      DHCP option for specifying how DNS (hostname resolution) is handled in the subnets in the VCN.
      For more information, see
      [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).
    extends: '#/definitions/DhcpOption'
    type: object
  DhcpOption:
    description: |
      A single DHCP option according to [RFC 1533](https://tools.ietf.org/html/rfc1533).
      The two options available to use are [DhcpDnsOption](#/en/iaas/20160918/DhcpDnsOption/)
      and [DhcpSearchDomainOption](#/en/iaas/20160918/DhcpSearchDomainOption/). For more
      information, see [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm)
      and [DHCP Options](/Content/Network/Tasks/managingDHCP.htm).
    discriminator: type
    properties:
      type:
        description: |
          The specific DHCP option. Either `DomainNameServer`
          (for [DhcpDnsOption](#/en/iaas/20160918/DhcpDnsOption/)) or
          `SearchDomain` (for [DhcpSearchDomainOption](#/en/iaas/20160918/DhcpSearchDomainOption/)).
        type: string
    required:
    - type
    type: object
  DhcpOptions:
    description: |
      A set of DHCP options. Used by the VCN to automatically provide configuration
      information to the instances when they boot up. There are two options you can set:

      - [DhcpDnsOption](#/en/iaas/20160918/DhcpDnsOption/): Lets you specify how DNS (hostname resolution) is
      handled in the subnets in your VCN.

      - [DhcpSearchDomainOption](#/en/iaas/20160918/DhcpSearchDomainOption/): Lets you specify
      a search domain name to use for DNS queries.

      For more information, see  [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm)
      and [DHCP Options](/Content/Network/Tasks/managingDHCP.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment containing the set of DHCP options.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      id:
        description: Oracle ID (OCID) for the set of DHCP options.
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The current state of the set of DHCP options.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      options:
        description: The collection of individual DHCP options.
        items:
          $ref: '#/definitions/DhcpOption'
        type: array
      timeCreated:
        description: |
          Date and time the set of DHCP options was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      vcnId:
        description: The OCID of the VCN the set of DHCP options belongs to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - id
    - compartmentId
    - options
    - lifecycleState
    - timeCreated
    - vcnId
  DhcpSearchDomainOption:
    allOf:
    - $ref: '#/definitions/DhcpOption'
    - discriminator: SearchDomain
      properties:
        searchDomainNames:
          description: 'A single search domain name according to [RFC 952](https://tools.ietf.org/html/rfc952)

            and [RFC 1123](https://tools.ietf.org/html/rfc1123). During a DNS query,

            the OS will append this search domain name to the value being queried.


            If you set [DhcpDnsOption](#/en/iaas/20160918/DhcpDnsOption/) to `VcnLocalPlusInternet`,

            and you assign a DNS label to the VCN during creation, the search domain
            name in the

            VCN''s default set of DHCP options is automatically set to the VCN domain

            (for example, `vcn1.oraclevcn.com`).


            If you don''t want to use a search domain name, omit this option from
            the

            set of DHCP options. Do not include this option with an empty list

            of search domain names, or with an empty string as the value for any search

            domain name.

            '
          items:
            maxLength: 251
            minLength: 1
            type: string
          max: 1
          type: array
      required:
      - searchDomainNames
    description: |
      DHCP option for specifying a search domain name for DNS queries. For more information, see
      [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).
    extends: '#/definitions/DhcpOption'
    type: object
  Drg:
    description: |
      A Dynamic Routing Gateway (DRG), which is a virtual router that provides a path for private
      network traffic between your VCN and your existing network. You use it with other Networking
      Service components to create an IPSec VPN or a connection that uses
      Oracle Cloud Infrastructure FastConnect. For more information, see
      [Overview of the Networking Service](/Content/Network/Concepts/overview.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment containing the DRG.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The DRG's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The DRG's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      timeCreated:
        description: |
          The date and time the DRG was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
    required:
    - compartmentId
    - id
    - lifecycleState
  DrgAttachment:
    description: |
      A link between a DRG and VCN. For more information, see
      [Overview of the Networking Service](/Content/Network/Concepts/overview.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment containing the DRG attachment.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      drgId:
        description: The OCID of the DRG.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The DRG attachment's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The DRG attachment's current state.
        enum:
        - ATTACHING
        - ATTACHED
        - DETACHING
        - DETACHED
        type: string
      timeCreated:
        description: |
          The date and time the DRG attachment was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      vcnId:
        description: The OCID of the VCN.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - id
    - compartmentId
    - drgId
    - vcnId
    - lifecycleState
  EgressSecurityRule:
    description: A rule for allowing outbound IP packets.
    properties:
      destination:
        description: |
          The destination CIDR block for the egress rule. This is the range of IP addresses that a
          packet originating from the instance can go to.
        type: string
      icmpOptions:
        $ref: '#/definitions/IcmpOptions'
        description: |
          Optional and valid only for ICMP. Use to specify a particular ICMP type and code
          as defined in
          [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
          If you specify ICMP as the protocol but omit this object, then all ICMP types and
          codes are allowed. If you do provide this object, the type is required and the code is optional.
          To enable MTU negotiation for ingress internet traffic, make sure to allow type 3 ("Destination
          Unreachable") code 4 ("Fragmentation Needed and Don't Fragment was Set"). If you need to specify
          multiple codes for a single type, create a separate security list rule for each.
      isStateless:
        description: |
          A stateless rule allows traffic in one direction. Remember to add a corresponding
          stateless rule in the other direction if you need to support bidirectional traffic. For
          example, if egress traffic allows TCP destination port 80, there should be an ingress
          rule to allow TCP source port 80. Defaults to false, which means the rule is stateful
          and a corresponding rule is not necessary for bidirectional traffic.
        type: boolean
      protocol:
        description: |
          The transport protocol. Specify either `all` or an IPv4 protocol number as
          defined in
          [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
          Options are supported only for ICMP ("1"), TCP ("6"), and UDP ("17").
        type: string
      tcpOptions:
        $ref: '#/definitions/TcpOptions'
        description: |
          Optional and valid only for TCP. Use to specify particular destination ports for TCP rules.
          If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
      udpOptions:
        $ref: '#/definitions/UdpOptions'
        description: |
          Optional and valid only for UDP. Use to specify particular destination ports for UDP rules.
          If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
    required:
    - destination
    - protocol
  Error:
    properties:
      code:
        description: |
          A short error code that defines the error, meant for programmatic parsing. See
          [API Errors](/Content/API/References/apierrors.htm).
        type: string
      message:
        description: A human-readable error string.
        type: string
    required:
    - code
    - message
  ExportImageDetails:
    description: |
      The destination details for the image export.

      Set `destinationType` to `objectStorageTuple`
      and use [ExportImageViaObjectStorageTupleDetails](#/en/iaas/latest/requests/ExportImageViaObjectStorageTupleDetails)
      when specifying the namespace, bucket name, and object name.

      Set `destinationType` to `objectStorageUri` and
      use [ExportImageViaObjectStorageUriDetails](#/en/iaas/latest/requests/ExportImageViaObjectStorageUriDetails)
      when specifying the Object Storage URL.
    discriminator: destinationType
    properties:
      destinationType:
        description: |
          The destination type. Use `objectStorageTuple` when specifying the namespace, bucket name, and object name.
          Use `objectStorageUri` when specifying the Object Storage URL.
        type: string
    required:
    - destinationType
  ExportImageViaObjectStorageTupleDetails:
    allOf:
    - $ref: '#/definitions/ExportImageDetails'
    - discriminator: objectStorageTuple
      properties:
        bucketName:
          description: The Object Storage bucket to export the image to.
          type: string
        namespaceName:
          description: The Object Storage namespace to export the image to.
          type: string
        objectName:
          description: The Object Storage object name for the exported image.
          type: string
  ExportImageViaObjectStorageUriDetails:
    allOf:
    - $ref: '#/definitions/ExportImageDetails'
    - discriminator: objectStorageUri
      properties:
        destinationUri:
          description: 'The Object Storage URL to export the image to. See [Object
            Storage URLs](/Content/Compute/Tasks/imageimportexport.htm#URLs)

            and [pre-authenticated requests](/Content/Object/Tasks/managingaccess.htm#pre-auth)
            for constructing URLs for image import/export.

            '
          type: string
      required:
      - destinationUri
  FastConnectProviderService:
    description: |
      A service offering from a supported provider. For more information,
      see [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).
    properties:
      description:
        description: |
          A description of the service offered by the provider.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: |
          The OCID of the service offered by the provider.
        maxLength: 255
        minLength: 1
        type: string
        x-obmcs-feature-id:
        - udx-645
      privatePeeringBgpManagement:
        description: |
          Private peering BGP management.
        enum:
        - CUSTOMER_MANAGED
        - PROVIDER_MANAGED
        - ORACLE_MANAGED
        type: string
        x-obmcs-feature-id:
        - udx-520
      providerName:
        description: |
          The name of the provider.
        maxLength: 255
        minLength: 1
        type: string
      providerServiceName:
        description: |
          The name of the service offered by the provider.
        maxLength: 255
        minLength: 1
        type: string
      publicPeeringBgpManagement:
        description: |
          Public peering BGP management.
        enum:
        - CUSTOMER_MANAGED
        - PROVIDER_MANAGED
        - ORACLE_MANAGED
        type: string
        x-obmcs-feature-id:
        - udx-520
      supportedVirtualCircuitTypes:
        description: |
          An array of virtual circuit types supported by this service.
        items:
          enum:
          - PUBLIC
          - PRIVATE
          type: string
        maximum: 2
        minimum: 0
        type: array
        x-obmcs-feature-id:
        - udx-507
      type:
        description: |
          Provider service type.
        enum:
        - LAYER2
        - LAYER3
        type: string
        x-obmcs-feature-id:
        - udx-520
    required:
    - id
    - providerName
    - providerServiceName
    - type
    - privatePeeringBgpManagement
    - publicPeeringBgpManagement
  GetPublicIpByIpAddressDetails:
    description: |
      IP address of the public IP.
    properties:
      ipAddress:
        description: |
          The public IP address.
          Example: 129.146.2.1
        maxLength: 32
        minLength: 1
        type: string
    required:
    - ipAddress
    x-obmcs-feature-id:
    - udx-136
  GetPublicIpByPrivateIpIdDetails:
    description: |
      Details of the private IP that the public IP is assigned to.
    properties:
      privateIpId:
        description: |
          OCID of the private IP.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - privateIpId
    x-obmcs-feature-id:
    - udx-136
  IPSecConnection:
    description: |
      A connection between a DRG and CPE. This connection consists of multiple IPSec
      tunnels. Creating this connection is one of the steps required when setting up
      an IPSec VPN. For more information, see
      [Overview of the Networking Service](/Content/Network/Concepts/overview.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment containing the IPSec connection.
        maxLength: 255
        minLength: 1
        type: string
      cpeId:
        description: The OCID of the CPE.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      drgId:
        description: The OCID of the DRG.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The IPSec connection's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The IPSec connection's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      staticRoutes:
        description: |
          Static routes to the CPE. At least one route must be included. The CIDR must not be a
          multicast address or class E address.

          Example: `10.0.1.0/24`
        items:
          maxLength: 10
          type: string
        type: array
        uniqueItems: true
      timeCreated:
        description: |
          The date and time the IPSec connection was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
    required:
    - compartmentId
    - id
    - drgId
    - cpeId
    - lifecycleState
    - staticRoutes
  IPSecConnectionDeviceConfig:
    description: Information about the IPSecConnection device configuration.
    properties:
      compartmentId:
        description: The OCID of the compartment containing the IPSec connection.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The IPSec connection's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: The date and time the IPSec connection was created.
        format: date-time
        type: string
      tunnels:
        description: Two [TunnelConfig](#/en/iaas/20160918/TunnelConfig/) objects.
        items:
          $ref: '#/definitions/TunnelConfig'
        type: array
    required:
    - compartmentId
    - id
  IPSecConnectionDeviceStatus:
    description: Status of the IPSec connection.
    properties:
      compartmentId:
        description: The OCID of the compartment containing the IPSec connection.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The IPSec connection's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: |
          The date and time the IPSec connection was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      tunnels:
        description: Two [TunnelStatus](#/en/iaas/20160918/TunnelStatus/) objects.
        items:
          $ref: '#/definitions/TunnelStatus'
        type: array
    required:
    - compartmentId
    - id
  IScsiVolumeAttachment:
    allOf:
    - $ref: '#/definitions/VolumeAttachment'
    - discriminator: iscsi
      properties:
        chapSecret:
          description: 'The Challenge-Handshake-Authentication-Protocol (CHAP) secret
            valid for the associated CHAP user name.

            (Also called the "CHAP password".)


            Example: `d6866c0d-298b-48ba-95af-309b4faux45e`

            '
          type: string
        chapUsername:
          description: 'The volume''s system-generated Challenge-Handshake-Authentication-Protocol
            (CHAP) user name.


            Example: `ocid1.volume.oc1.phx.abyhqljrgvttnlx73nmrwfaux7kcvzfs3s66izvxf2h4lgvyndsdsnoiwr5q`

            '
          type: string
        ipv4:
          description: 'The volume''s iSCSI IP address.


            Example: `169.254.0.2`

            '
          maxLength: 15
          minLength: 7
          type: string
        iqn:
          description: 'The target volume''s iSCSI Qualified Name in the format defined
            by RFC 3720.


            Example: `iqn.2015-12.us.oracle.com:456b0391-17b8-4122-bbf1-f85fc0bb97d9`

            '
          minLength: 1
          type: string
        port:
          description: 'The volume''s iSCSI port.


            Example: `3260`

            '
          maximum: 65535
          minimum: 1
          type: integer
      required:
      - iqn
      - ipv4
      - port
    description: An ISCSI volume attachment.
  IcmpOptions:
    description: |
      Optional object to specify a particular ICMP type and code. If you specify ICMP as the protocol
      but do not provide this object, then all ICMP types and codes are allowed. If you do provide
      this object, the type is required and the code is optional.
      See [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
      for allowed values. To enable MTU negotiation for ingress internet traffic, make sure to allow
      type 3 ("Destination Unreachable") code 4 ("Fragmentation Needed and Don't Fragment was Set").
      If you need to specify multiple codes for a single type, create a separate security list rule for each.
    properties:
      code:
        description: The ICMP code (optional).
        maximum: 16
        minimum: 0
        type: integer
      type:
        description: The ICMP type.
        maximum: 254
        minimum: 0
        type: integer
    required:
    - type
  Image:
    description: |
      A boot disk image for launching an instance. For more information, see
      [Overview of the Compute Service](/Content/Compute/Concepts/computeoverview.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      baseImageId:
        description: The OCID of the image originally used to launch the instance.
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: |
          The OCID of the compartment containing the instance you want to use as the basis for the image.
        maxLength: 255
        minLength: 1
        type: string
      createImageAllowed:
        description: |
          Whether instances launched with this image can be used to create new images.
          For example, you cannot create an image of an Oracle Database instance.
          Example: `true`
        type: boolean
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name for the image. It does not have to be unique, and it's changeable.
          Avoid entering confidential information.
          You cannot use an Oracle-provided image name as a custom image name.

          Example: `My custom Oracle Linux image`
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      id:
        description: The OCID of the image.
        maxLength: 255
        minLength: 1
        type: string
      launchMode:
        description: |
          Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
          * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for Oracle-provided images.
          * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
          * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
        enum: *id003
        type: string
      launchOptions:
        $ref: '#/definitions/LaunchOptions'
      lifecycleState:
        enum:
        - PROVISIONING
        - IMPORTING
        - AVAILABLE
        - EXPORTING
        - DISABLED
        - DELETED
        type: string
      operatingSystem:
        description: |
          The image's operating system.

          Example: `Oracle Linux`
        maxLength: 255
        minLength: 1
        type: string
      operatingSystemVersion:
        description: |
          The image's operating system version.

          Example: `7.2`
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: |
          The date and time the image was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
    required:
    - compartmentId
    - id
    - lifecycleState
    - timeCreated
    - operatingSystem
    - operatingSystemVersion
    - createImageAllowed
  ImageShapeCompatibilityEntry:
    description: An image and shape that are compatible.
    properties:
      imageId:
        description: The image OCID.
        maxLength: 255
        minLength: 1
        type: string
      shape:
        description: The shape name.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - imageId
    - shape
    x-obmcs-preview-only: true
  ImageSourceDetails:
    discriminator: sourceType
    properties:
      sourceImageType:
        description: |
          The format of the image to be imported.  Exported Oracle images are QCOW2.  Only monolithic
          images are supported.
        enum:
        - QCOW2
        - VMDK
        type: string
      sourceType:
        description: |
          The source type for the image. Use `objectStorageTuple` when specifying the namespace,
          bucket name, and object name. Use `objectStorageUri` when specifying the Object Storage URL.
        type: string
    required:
    - sourceType
  ImageSourceViaObjectStorageTupleDetails:
    allOf:
    - $ref: '#/definitions/ImageSourceDetails'
    - discriminator: objectStorageTuple
      properties:
        bucketName:
          description: The Object Storage bucket for the image.
          type: string
        namespaceName:
          description: The Object Storage namespace for the image.
          type: string
        objectName:
          description: The Object Storage name for the image.
          type: string
      required:
      - namespaceName
      - bucketName
      - objectName
  ImageSourceViaObjectStorageUriDetails:
    allOf:
    - $ref: '#/definitions/ImageSourceDetails'
    - discriminator: objectStorageUri
      properties:
        sourceUri:
          description: The Object Storage URL for the image.
          type: string
      required:
      - sourceUri
  IngressSecurityRule:
    description: A rule for allowing inbound IP packets.
    properties:
      icmpOptions:
        $ref: '#/definitions/IcmpOptions'
        description: |
          Optional and valid only for ICMP. Use to specify a particular ICMP type and code
          as defined in
          [ICMP Parameters](http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
          If you specify ICMP as the protocol but omit this object, then all ICMP types and
          codes are allowed. If you do provide this object, the type is required and the code is optional.
          To enable MTU negotiation for ingress internet traffic, make sure to allow type 3 ("Destination
          Unreachable") code 4 ("Fragmentation Needed and Don't Fragment was Set"). If you need to specify
          multiple codes for a single type, create a separate security list rule for each.
      isStateless:
        description: |
          A stateless rule allows traffic in one direction. Remember to add a corresponding
          stateless rule in the other direction if you need to support bidirectional traffic. For
          example, if ingress traffic allows TCP destination port 80, there should be an egress
          rule to allow TCP source port 80. Defaults to false, which means the rule is stateful
          and a corresponding rule is not necessary for bidirectional traffic.
        type: boolean
      protocol:
        description: |
          The transport protocol. Specify either `all` or an IPv4 protocol number as
          defined in
          [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
          Options are supported only for ICMP ("1"), TCP ("6"), and UDP ("17").
        type: string
      source:
        description: |
          The source CIDR block for the ingress rule. This is the range of IP addresses that a
          packet coming into the instance can come from.
        type: string
      tcpOptions:
        $ref: '#/definitions/TcpOptions'
        description: |
          Optional and valid only for TCP. Use to specify particular destination ports for TCP rules.
          If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
      udpOptions:
        $ref: '#/definitions/UdpOptions'
        description: |
          Optional and valid only for UDP. Use to specify particular destination ports for UDP rules.
          If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
    required:
    - protocol
    - source
  Instance:
    description: |
      A compute host. The image used to launch the instance determines its operating system and other
      software. The shape specified during the launch process determines the number of CPUs and memory
      allocated to the instance. For more information, see
      [Overview of the Compute Service](/Content/Compute/Concepts/computeoverview.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      availabilityDomain:
        description: |
          The Availability Domain the instance is running in.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment that contains the instance.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.

          Example: `My bare metal instance`
        maxLength: 255
        minLength: 1
        type: string
      extendedMetadata:
        additionalProperties:
          type: object
        description: |
          Additional metadata key/value pairs that you provide.  They serve a similar purpose and functionality from fields in the 'metadata' object.

          They are distinguished from 'metadata' fields in that these can be nested JSON objects (whereas 'metadata' fields are string/string maps only).

          If you don't need nested metadata values, it is strongly advised to avoid using this object and use the Metadata object instead.
        type: object
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      id:
        description: The OCID of the instance.
        maxLength: 255
        minLength: 1
        type: string
      imageId:
        description: |
          Deprecated. Use `sourceDetails` instead.
        maxLength: 255
        minLength: 1
        type: string
      ipxeScript:
        description: |
          When a bare metal or virtual machine
          instance boots, the iPXE firmware that runs on the instance is
          configured to run an iPXE script to continue the boot process.

          If you want more control over the boot process, you can provide
          your own custom iPXE script that will run when the instance boots;
          however, you should be aware that the same iPXE script will run
          every time an instance boots; not only after the initial
          LaunchInstance call.

          The default iPXE script connects to the instance's local boot
          volume over iSCSI and performs a network boot. If you use a custom iPXE
          script and want to network-boot from the instance's local boot volume
          over iSCSI the same way as the default iPXE script, you should use the
          following iSCSI IP address: 169.254.0.2, and boot volume IQN:
          iqn.2015-02.oracle.boot.

          For more information about the Bring Your Own Image feature of
          Oracle Cloud Infrastructure, see
          [Bring Your Own Image](/Content/Compute/References/bringyourownimage.htm).

          For more information about iPXE, see http://ipxe.org.
        maxLength: 10240
        minLength: 1
        type: string
      launchMode:
        description: |
          Specifies the configuration mode for launching virtual machine (VM) instances. The configuration modes are:
          * `NATIVE` - VM instances launch with iSCSI boot and VFIO devices. The default value for Oracle-provided images.
          * `EMULATED` - VM instances launch with emulated devices, such as the E1000 network driver and emulated SCSI disk controller.
          * `CUSTOM` - VM instances launch with custom configuration settings specified in the `LaunchOptions` parameter.
        enum: *id003
        type: string
      launchOptions:
        $ref: '#/definitions/LaunchOptions'
      lifecycleState:
        description: The current state of the instance.
        enum:
        - PROVISIONING
        - RUNNING
        - STARTING
        - STOPPING
        - STOPPED
        - CREATING_IMAGE
        - TERMINATING
        - TERMINATED
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Custom metadata that you provide.
        type: object
      region:
        description: |
          The region that contains the Availability Domain the instance is running in.

          Example: `phx`
        maxLength: 255
        minLength: 1
        type: string
      shape:
        description: |
          The shape of the instance. The shape determines the number of CPUs and the amount of memory
          allocated to the instance. You can enumerate all available shapes by calling
          [ListShapes](#/en/iaas/20160918/Shape/ListShapes).
        maxLength: 255
        minLength: 1
        type: string
      sourceDetails:
        $ref: '#/definitions/InstanceSourceDetails'
        description: Details for creating an instance
      timeCreated:
        description: |
          The date and time the instance was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
    required:
    - id
    - compartmentId
    - shape
    - region
    - availabilityDomain
    - lifecycleState
    - timeCreated
  InstanceConsoleConnection:
    description: |
      The `InstanceConsoleConnection` API provides you with console access to virtual machine (VM) instances,
      enabling you to troubleshoot malfunctioning instances remotely.

      For more information about console access, see
      [Accessing the Console](/Content/Compute/References/serialconsole.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the console connection.
        maxLength: 255
        minLength: 1
        type: string
      connectionString:
        description: The SSH connection string for the console connection.
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      fingerprint:
        description: The SSH public key fingerprint for the console connection.
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      id:
        description: The OCID of the console connection.
        type: string
      instanceId:
        description: The OCID of the instance the console connection connects to.
        type: string
      lifecycleState:
        description: The current state of the console connection.
        enum:
        - ACTIVE
        - CREATING
        - DELETED
        - DELETING
        - FAILED
        type: string
      vncConnectionString:
        description: |
          The SSH connection string for the SSH tunnel used to
          connect to the console connection over VNC.
        type: string
        x-obmcs-feature-id:
        - udx-637
  InstanceCredentials:
    description: The credentials for a particular instance.
    properties:
      password:
        description: The password for the username.
        maxLength: 255
        minLength: 1
        type: string
      username:
        description: The username.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - username
    - password
  InstanceSourceDetails:
    discriminator: sourceType
    properties:
      sourceType:
        description: |
          The source type for the instance.
          Use `image` when specifying the image OCID. Use `bootVolume` when specifying
          the boot volume OCID.
        type: string
    required:
    - sourceType
    x-obmcs-feature-id:
    - udx-117
  InstanceSourceViaBootVolumeDetails:
    allOf:
    - $ref: '#/definitions/InstanceSourceDetails'
    - discriminator: bootVolume
      properties:
        bootVolumeId:
          description: The OCID of the boot volume used to boot the instance.
          maxLength: 255
          minLength: 1
          type: string
      required:
      - bootVolumeId
    x-obmcs-feature-id:
    - udx-117
  InstanceSourceViaImageDetails:
    allOf:
    - $ref: '#/definitions/InstanceSourceDetails'
    - discriminator: image
      properties:
        imageId:
          description: The OCID of the image used to boot the instance.
          maxLength: 255
          minLength: 1
          type: string
      required:
      - imageId
    x-obmcs-feature-id:
    - udx-117
  InternetGateway:
    description: |
      Represents a router that connects the edge of a VCN with the Internet. For an example scenario
      that uses an Internet Gateway, see
      [Typical Networking Service Scenarios](/Content/Network/Concepts/overview.htm#scenarios).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment containing the Internet Gateway.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The Internet Gateway's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      isEnabled:
        description: |
          Whether the gateway is enabled. When the gateway is disabled, traffic is not
          routed to/from the Internet, regardless of route rules.
        type: boolean
      lifecycleState:
        description: The Internet Gateway's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      timeCreated:
        description: |
          The date and time the Internet Gateway was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      vcnId:
        description: The OCID of the VCN the Internet Gateway belongs to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - id
    - compartmentId
    - lifecycleState
    - vcnId
  LaunchInstanceDetails:
    description: |
      Instance launch details.
      Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of the instance.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment.
        maxLength: 255
        minLength: 1
        type: string
      createVnicDetails:
        $ref: '#/definitions/CreateVnicDetails'
        description: |
          Details for the primary VNIC, which is automatically created and attached when
          the instance is launched.
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.

          Example: `My bare metal instance`
        maxLength: 255
        minLength: 1
        type: string
      extendedMetadata:
        additionalProperties:
          type: object
        description: |
          Additional metadata key/value pairs that you provide.  They serve a similar purpose and functionality from fields in the 'metadata' object.

          They are distinguished from 'metadata' fields in that these can be nested JSON objects (whereas 'metadata' fields are string/string maps only).

          If you don't need nested metadata values, it is strongly advised to avoid using this object and use the Metadata object instead.
        type: object
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      hostnameLabel:
        description: |
          Deprecated. Instead use `hostnameLabel` in
          [CreateVnicDetails](#/en/iaas/20160918/CreateVnicDetails/).
          If you provide both, the values must match.
        maxLength: 63
        minLength: 1
        type: string
      imageId:
        description: |
          Deprecated. Use `sourceDetails` with [InstanceSourceViaImageDetails](#/en/iaas/latest/requests/InstanceSourceViaImageDetails)
          source type instead. If you specify values for both, the values must match.
        maxLength: 255
        minLength: 1
        type: string
      ipxeScript:
        description: |
          This is an advanced option.

          When a bare metal or virtual machine
          instance boots, the iPXE firmware that runs on the instance is
          configured to run an iPXE script to continue the boot process.

          If you want more control over the boot process, you can provide
          your own custom iPXE script that will run when the instance boots;
          however, you should be aware that the same iPXE script will run
          every time an instance boots; not only after the initial
          LaunchInstance call.

          The default iPXE script connects to the instance's local boot
          volume over iSCSI and performs a network boot. If you use a custom iPXE
          script and want to network-boot from the instance's local boot volume
          over iSCSI the same way as the default iPXE script, you should use the
          following iSCSI IP address: 169.254.0.2, and boot volume IQN:
          iqn.2015-02.oracle.boot.

          For more information about the Bring Your Own Image feature of
          Oracle Cloud Infrastructure, see
          [Bring Your Own Image](/Content/Compute/References/bringyourownimage.htm).

          For more information about iPXE, see http://ipxe.org.
        maxLength: 10240
        minLength: 1
        type: string
      metadata:
        additionalProperties:
          type: string
        description: |
          Custom metadata key/value pairs that you provide, such as the SSH public key
          required to connect to the instance.

          A metadata service runs on every launched instance. The service is an HTTP
          endpoint listening on 169.254.169.254. You can use the service to:

          * Provide information to [Cloud-Init](https://cloudinit.readthedocs.org/en/latest/)
            to be used for various system initialization tasks.

          * Get information about the instance, including the custom metadata that you
            provide when you launch the instance.

           **Providing Cloud-Init Metadata**

           You can use the following metadata key names to provide information to
           Cloud-Init:

           **"ssh_authorized_keys"** - Provide one or more public SSH keys to be
           included in the `~/.ssh/authorized_keys` file for the default user on the
           instance. Use a newline character to separate multiple keys. The SSH
           keys must be in the format necessary for the `authorized_keys` file, as shown
           in the example below.

           **"user_data"** - Provide your own base64-encoded data to be used by
           Cloud-Init to run custom scripts or provide custom Cloud-Init configuration. For
           information about how to take advantage of user data, see the
           [Cloud-Init Documentation](http://cloudinit.readthedocs.org/en/latest/topics/format.html).

           **Note:** Cloud-Init does not pull this data from the `http://169.254.169.254/opc/v1/instance/metadata/`
           path. When the instance launches and either of these keys are provided, the key values are formatted as
           OpenStack metadata and copied to the following locations, which are recognized by Cloud-Init:

           `http://169.254.169.254/openstack/latest/meta_data.json` - This JSON blob
           contains, among other things, the SSH keys that you provided for
            **"ssh_authorized_keys"**.

           `http://169.254.169.254/openstack/latest/user_data` - Contains the
           base64-decoded data that you provided for **"user_data"**.

           **Metadata Example**

                "metadata" : {
                   "quake_bot_level" : "Severe",
                   "ssh_authorized_keys" : "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCZ06fccNTQfq+xubFlJ5ZR3kt+uzspdH9tXL+lAejSM1NXM+CFZev7MIxfEjas06y80ZBZ7DUTQO0GxJPeD8NCOb1VorF8M4xuLwrmzRtkoZzU16umt4y1W0Q4ifdp3IiiU0U8/WxczSXcUVZOLqkz5dc6oMHdMVpkimietWzGZ4LBBsH/LjEVY7E0V+a0sNchlVDIZcm7ErReBLcdTGDq0uLBiuChyl6RUkX1PNhusquTGwK7zc8OBXkRuubn5UKXhI3Ul9Nyk4XESkVWIGNKmw8mSpoJSjR8P9ZjRmcZVo8S+x4KVPMZKQEor== ryan.smith@company.com
                   ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAzJSAtwEPoB3Jmr58IXrDGzLuDYkWAYg8AsLYlo6JZvKpjY1xednIcfEVQJm4T2DhVmdWhRrwQ8DmayVZvBkLt+zs2LdoAJEVimKwXcJFD/7wtH8Lnk17HiglbbbNXsemjDY0hea4JUE5CfvkIdZBITuMrfqSmA4n3VNoorXYdvtTMoGG8fxMub46RPtuxtqi9bG9Zqenordkg5FJt2mVNfQRqf83CWojcOkklUWq4CjyxaeLf5i9gv1fRoBo4QhiA8I6NCSppO8GnoV/6Ox6TNoh9BiifqGKC9VGYuC89RvUajRBTZSK2TK4DPfaT+2R+slPsFrwiT/oPEhhEK1S5Q== rsa-key-20160227",
                   "user_data" : "SWYgeW91IGNhbiBzZWUgdGhpcywgdGhlbiBpdCB3b3JrZWQgbWF5YmUuCg=="
                }
           **Getting Metadata on the Instance**

           To get information about your instance, connect to the instance using SSH and issue any of the
           following GET requests:

               curl http://169.254.169.254/opc/v1/instance/
               curl http://169.254.169.254/opc/v1/instance/metadata/
               curl http://169.254.169.254/opc/v1/instance/metadata/<any-key-name>

           You'll get back a response that includes all the instance information; only the metadata information; or
           the metadata information for the specified key name, respectively.
        type: object
      shape:
        description: |
          The shape of an instance. The shape determines the number of CPUs, amount of memory,
          and other resources allocated to the instance.

          You can enumerate all available shapes by calling [ListShapes](#/en/iaas/20160918/Shape/ListShapes).
        maxLength: 255
        minLength: 1
        type: string
      sourceDetails:
        $ref: '#/definitions/InstanceSourceDetails'
        description: |
          Details for creating an instance.
          Use this parameter to specify whether a boot volume or an image should be used to launch a new instance.
      subnetId:
        description: |
          Deprecated. Instead use `subnetId` in
          [CreateVnicDetails](#/en/iaas/20160918/CreateVnicDetails/).
          At least one of them is required; if you provide both, the values must match.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - shape
    - availabilityDomain
  LaunchOptions:
    description: |
      Options for tuning compatibility and performance of VM shapes.
    properties:
      bootVolumeType:
        description: |
          Emulation type for volume.
          * `ISCSI` - ISCSI attached block storage device. This is the default for Boot Volumes and Remote Block
          Storage volumes on Oracle provided images.
          * `SCSI` - Emulated SCSI disk.
          * `IDE` - Emulated IDE disk.
          * `VFIO` - Direct attached Virtual Function storage.  This is the default option for Local data
          volumes on Oracle provided images.
        enum: &id004
        - ISCSI
        - SCSI
        - IDE
        - VFIO
        type: string
      firmware:
        description: |
          Firmware used to boot VM.  Select the option that matches your operating system.
          * `BIOS` - Boot VM using BIOS style firmware.  This is compatible with both 32 bit and 64 bit operating
          systems that boot using MBR style bootloaders.
          * `UEFI_64` - Boot VM using UEFI style firmware compatible with 64 bit operating systems.  This is the
          default for Oracle provided images.
        enum:
        - BIOS
        - UEFI_64
        type: string
      networkType:
        description: |
          Emulation type for NIC.
          * `E1000` - Emulated Gigabit ethernet controller.  Compatible with Linux e1000 network driver.
          * `VFIO` - Direct attached Virtual Function network controller.  Default for Oracle provided images.
        enum:
        - E1000
        - VFIO
        type: string
      remoteDataVolumeType:
        description: |
          Emulation type for volume.
          * `ISCSI` - ISCSI attached block storage device. This is the default for Boot Volumes and Remote Block
          Storage volumes on Oracle provided images.
          * `SCSI` - Emulated SCSI disk.
          * `IDE` - Emulated IDE disk.
          * `VFIO` - Direct attached Virtual Function storage.  This is the default option for Local data
          volumes on Oracle provided images.
        enum: *id004
        type: string
    required:
    - architecture
    - firmware
    - networkType
    - bootVolumeType
    - remoteDataVolumeType
  LetterOfAuthority:
    description: |
      The Letter of Authority for the cross-connect. You must submit this letter when
      requesting cabling for the cross-connect at the FastConnect location.
    properties:
      authorizedEntityName:
        description: The name of the entity authorized by this Letter of Authority.
        maxLength: 255
        minLength: 1
        type: string
        x-obmcs-feature-id:
        - udx-26
      circuitType:
        description: The type of cross-connect fiber, termination, and optical specification.
        enum:
        - Single_mode_LC
        - Single_mode_SC
        type: string
      crossConnectId:
        description: The OCID of the cross-connect.
        maxlength: 255
        minLength: 1
        type: string
      facilityLocation:
        description: The address of the FastConnect location.
        maxlength: 255
        minLength: 1
        type: string
      portName:
        description: The meet-me room port for this cross-connect.
        maxLength: 255
        minLength: 1
        type: string
      timeExpires:
        description: |
          The date and time when the Letter of Authority expires, in the format defined by RFC3339.
        format: date-time
        type: string
      timeIssued:
        description: |
          The date and time the Letter of Authority was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
  LocalPeeringGateway:
    description: |
      A local peering gateway (LPG) is an object on a VCN that lets that VCN peer
      with another VCN in the same region. *Peering* means that the two VCNs can
      communicate using private IP addresses, but without the traffic traversing the
      internet or routing through your on-premises network. For more information,
      see [VCN Peering](/Content/Network/Tasks/VCNpeering.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment containing the LPG.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable. Avoid
          entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The LPG's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      isCrossTenancyPeering:
        description: |
          Whether the VCN at the other end of the peering is in a different tenancy.

          Example: `false`
        type: boolean
      lifecycleState:
        description: The LPG's current lifecycle state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      peerAdvertisedCidr:
        description: |
          The range of IP addresses available on the VCN at the other
          end of the peering from this LPG. The value is `null` if the LPG is not peered.
          You can use this as the destination CIDR for a route rule to route a subnet's
          traffic to this LPG.

          Example: `192.168.0.0/16`
        maxLength: 18
        minLength: 9
        type: string
      peeringStatus:
        description: |
          Whether the LPG is peered with another LPG. `NEW` means the LPG has not yet been
          peered. `PENDING` means the peering is being established. `REVOKED` means the
          LPG at the other end of the peering has been deleted.
        enum:
        - INVALID
        - NEW
        - PEERED
        - PENDING
        - REVOKED
        type: string
      peeringStatusDetails:
        description: Additional information regarding the peering status, if applicable.
        maxLength: 4096
        minLength: 0
        type: string
      timeCreated:
        description: |
          The date and time the LPG was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      vcnId:
        description: The OCID of the VCN the LPG belongs to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - displayName
    - id
    - isCrossTenancyPeering
    - lifecycleState
    - peeringStatus
    - timeCreated
    - vcnId
    x-obmcs-feature-id:
    - udx-141
  PortRange:
    properties:
      max:
        description: |
          The maximum port number. Must not be lower than the minimum port number. To specify
          a single port number, set both the min and max to the same value.
        maximum: 65535
        minimum: 1
        type: integer
      min:
        description: The minimum port number. Must not be greater than the maximum
          port number.
        maximum: 65535
        minimum: 1
        type: integer
    required:
    - max
    - min
  PrivateIp:
    description: |
      A *private IP* is a conceptual term that refers to a private IP address and related properties.
      The `privateIp` object is the API representation of a private IP.

      Each instance has a *primary private IP* that is automatically created and
      assigned to the primary VNIC during instance launch. If you add a secondary
      VNIC to the instance, it also automatically gets a primary private IP. You
      can't remove a primary private IP from its VNIC. The primary private IP is
      automatically deleted when the VNIC is terminated.

      You can add *secondary private IPs* to a VNIC after it's created. For more
      information, see the `privateIp` operations and also
      [IP Addresses](/Content/Network/Tasks/managingIPaddresses.htm).

      **Note:** Only
      [ListPrivateIps](#/en/iaas/20160918/PrivateIp/ListPrivateIps) and
      [GetPrivateIp](#/en/iaas/20160918/PrivateIp/GetPrivateIp) work with
      *primary* private IPs. To create and update primary private IPs, you instead
      work with instance and VNIC operations. For example, a primary private IP's
      properties come from the values you specify in
      [CreateVnicDetails](#/en/iaas/20160918/CreateVnicDetails/) when calling either
      [LaunchInstance](#/en/iaas/20160918/Instance/LaunchInstance) or
      [AttachVnic](#/en/iaas/20160918/VnicAttachment/AttachVnic). To update the hostname
      for a primary private IP, you use [UpdateVnic](#/en/iaas/20160918/Vnic/UpdateVnic).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      availabilityDomain:
        description: |
          The private IP's Availability Domain.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment containing the private IP.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable. Avoid
          entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      hostnameLabel:
        description: |
          The hostname for the private IP. Used for DNS. The value is the hostname
          portion of the private IP's fully qualified domain name (FQDN)
          (for example, `bminstance-1` in FQDN `bminstance-1.subnet123.vcn1.oraclevcn.com`).
          Must be unique across all VNICs in the subnet and comply with
          [RFC 952](https://tools.ietf.org/html/rfc952) and
          [RFC 1123](https://tools.ietf.org/html/rfc1123).

          For more information, see
          [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).

          Example: `bminstance-1`
        maxLength: 63
        minLength: 1
        type: string
      id:
        description: The private IP's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      ipAddress:
        description: |
          The private IP address of the `privateIp` object. The address is within the CIDR
          of the VNIC's subnet.

          Example: `10.0.3.3`
        type: string
      isPrimary:
        description: |
          Whether this private IP is the primary one on the VNIC. Primary private IPs
          are unassigned and deleted automatically when the VNIC is terminated.

          Example: `true`
        type: boolean
      subnetId:
        description: The OCID of the subnet the VNIC is in.
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: |
          The date and time the private IP was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      vnicId:
        description: |
          The OCID of the VNIC the private IP is assigned to. The VNIC and private IP
          must be in the same subnet.
        maxLength: 255
        minLength: 1
        type: string
  PublicIp:
    description: |
      A *public IP* is a conceptual term that refers to a public IP address and related properties.
      The `publicIp` object is the API representation of a public IP.

      There are two types of public IPs:
      1. Ephemeral
      2. Reserved

      For more information and comparison of the two types,
      see [Public IP Addresses](/Content/Network/Tasks/managingpublicIPs.htm).
    properties:
      availabilityDomain:
        description: |
          The public IP's Availability Domain. This property is set only for ephemeral public IPs
          (that is, when the `scope` of the public IP is set to AVAILABILITY_DOMAIN). The value
          is the Availability Domain of the assigned private IP.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: |
          The OCID of the compartment containing the public IP. For an ephemeral public IP, this is
          the same compartment as the private IP's. For a reserved public IP that is currently assigned,
          this can be a different compartment than the assigned private IP's.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable. Avoid
          entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The public IP's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      ipAddress:
        description: |
          The public IP address of the `publicIp` object.

          Example: `129.146.2.1`
        type: string
      lifecycleState:
        description: The public IP's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - ASSIGNING
        - ASSIGNED
        - UNASSIGNING
        - UNASSIGNED
        - TERMINATING
        - TERMINATED
        type: string
      lifetime:
        description: |
          Defines when the public IP is deleted and released back to Oracle's public IP pool.

          * `EPHEMERAL`: The lifetime is tied to the lifetime of its assigned private IP. The
          ephemeral public IP is automatically deleted when its private IP is deleted, when
          the VNIC is terminated, or when the instance is terminated. An ephemeral
          public IP must always be assigned to a private IP.

          * `RESERVED`: You control the public IP's lifetime. You can delete a reserved public IP
          whenever you like. It does not need to be assigned to a private IP at all times.

          For more information and comparison of the two types,
          see [Public IP Addresses](/Content/Network/Tasks/managingpublicIPs.htm).
        enum:
        - EPHEMERAL
        - RESERVED
        type: string
      privateIpId:
        description: |
          The OCID of the private IP that the public IP is currently assigned to, or in the
          process of being assigned to.
        maxLength: 255
        minLength: 1
        type: string
      scope:
        description: |
          Whether the public IP is regional or specific to a particular Availability Domain.

          * `REGION`: The public IP exists within a region and can be assigned to a private IP
          in any Availability Domain in the region. Reserved public IPs have `scope` = `REGION`.

          * `AVAILABILITY_DOMAIN`: The public IP exists within the Availability Domain of the private IP
          it's assigned to, which is specified by the `availabilityDomain` property of the public IP object.
          Ephemeral public IPs have `scope` = `AVAILABILITY_DOMAIN`.
        enum:
        - REGION
        - AVAILABILITY_DOMAIN
        type: string
      timeCreated:
        description: |
          The date and time the public IP was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
    x-obmcs-feature-id:
    - udx-136
  RouteRule:
    description: |
      A mapping between a destination IP address range and a virtual device to route matching
      packets to (a target).
    properties:
      cidrBlock:
        description: |
          A destination IP address range in CIDR notation. Matching packets will
          be routed to the indicated network entity (the target).

          Example: `0.0.0.0/0`
        maxLength: 18
        minLength: 9
        type: string
      networkEntityId:
        description: |
          The OCID for the route rule's target. For information about the type of
          targets you can specify, see
          [Route Tables](/Content/Network/Tasks/managingroutetables.htm).
        maxLength: 255
        minLength: 1
        type: string
    required:
    - cidrBlock
    - networkEntityId
  RouteTable:
    description: |
      A collection of `RouteRule` objects, which are used to route packets
      based on destination IP to a particular network entity. For more information, see
      [Overview of the Networking Service](/Content/Network/Concepts/overview.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment containing the route table.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      id:
        description: The route table's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The route table's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      routeRules:
        description: The collection of rules for routing destination IPs to network
          devices.
        items:
          $ref: '#/definitions/RouteRule'
          maximum: 10
          minimum: 0
        type: array
      timeCreated:
        description: |
          The date and time the route table was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      vcnId:
        description: The OCID of the VCN the route table list belongs to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - id
    - compartmentId
    - routeRules
    - lifecycleState
    - vcnId
  SecurityList:
    description: |
      A set of virtual firewall rules for your VCN. Security lists are configured at the subnet
      level, but the rules are applied to the ingress and egress traffic for the individual instances
      in the subnet. The rules can be stateful or stateless. For more information, see
      [Security Lists](/Content/Network/Concepts/securitylists.htm).

      **Important:** Oracle Cloud Infrastructure Compute service images automatically include firewall rules (for example,
      Linux iptables, Windows firewall). If there are issues with some type of access to an instance,
      make sure both the security lists associated with the instance's subnet and the instance's
      firewall rules are set correctly.

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment containing the security list.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      egressSecurityRules:
        description: Rules for allowing egress IP packets.
        items:
          $ref: '#/definitions/EgressSecurityRule'
        type: array
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      id:
        description: The security list's Oracle Cloud ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      ingressSecurityRules:
        description: Rules for allowing ingress IP packets.
        items:
          $ref: '#/definitions/IngressSecurityRule'
        type: array
      lifecycleState:
        description: The security list's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      timeCreated:
        description: |
          The date and time the security list was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      vcnId:
        description: The OCID of the VCN the security list belongs to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - displayName
    - egressSecurityRules
    - id
    - ingressSecurityRules
    - lifecycleState
    - timeCreated
    - vcnId
  Shape:
    description: |
      A compute instance shape that can be used in [LaunchInstance](#/en/iaas/20160918/Instance/LaunchInstance).
      For more information, see [Overview of the Compute Service](/Content/Compute/Concepts/computeoverview.htm).
    properties:
      shape:
        description: |
          The name of the shape. You can enumerate all available shapes by calling
          [ListShapes](#/en/iaas/20160918/Shape/ListShapes).
        maxLength: 255
        minLength: 1
        type: string
    required:
    - shape
  Subnet:
    description: |
      A logical subdivision of a VCN. Each subnet exists in a single Availability Domain and
      consists of a contiguous range of IP addresses that do not overlap with
      other subnets in the VCN. Example: 172.16.1.0/24. For more information, see
      [Overview of the Networking Service](/Content/Network/Concepts/overview.htm) and
      [VCNs and Subnets](/Content/Network/Tasks/managingVCNs.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      availabilityDomain:
        description: |
          The subnet's Availability Domain.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      cidrBlock:
        description: |
          The subnet's CIDR block.

          Example: `172.16.1.0/24`
        maxLength: 32
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment containing the subnet.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      dhcpOptionsId:
        description: |
          The OCID of the set of DHCP options associated with the subnet.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      dnsLabel:
        description: |
          A DNS label for the subnet, used in conjunction with the VNIC's hostname and
          VCN's DNS label to form a fully qualified domain name (FQDN) for each VNIC
          within this subnet (for example, `bminstance-1.subnet123.vcn1.oraclevcn.com`).
          Must be an alphanumeric string that begins with a letter and is unique within the VCN.
          The value cannot be changed.

          The absence of this parameter means the Internet and VCN Resolver
          will not resolve hostnames of instances in this subnet.

          For more information, see
          [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).

          Example: `subnet123`
        maxLength: 15
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      id:
        description: The subnet's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The subnet's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      prohibitPublicIpOnVnic:
        description: |
          Whether VNICs within this subnet can have public IP addresses.
          Defaults to false, which means VNICs created in this subnet will
          automatically be assigned public IP addresses unless specified
          otherwise during instance launch or VNIC creation (with the
          `assignPublicIp` flag in
          [CreateVnicDetails](#/en/iaas/20160918/CreateVnicDetails/)).
          If `prohibitPublicIpOnVnic` is set to true, VNICs created in this
          subnet cannot have public IP addresses (that is, it's a private
          subnet).

          Example: `true`
        type: boolean
      routeTableId:
        description: The OCID of the route table the subnet is using.
        maxLength: 255
        minLength: 1
        type: string
      securityListIds:
        description: OCIDs for the security lists to use for VNICs in this subnet.
        items:
          maxLength: 255
          maximum: 5
          minLength: 1
          minimum: 0
          type: string
        type: array
      subnetDomainName:
        description: |
          The subnet's domain name, which consists of the subnet's DNS label,
          the VCN's DNS label, and the `oraclevcn.com` domain.

          For more information, see
          [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).

          Example: `subnet123.vcn1.oraclevcn.com`
        maxLength: 253
        minLength: 1
        type: string
      timeCreated:
        description: |
          The date and time the subnet was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      vcnId:
        description: The OCID of the VCN the subnet is in.
        maxLength: 255
        minLength: 1
        type: string
      virtualRouterIp:
        description: |
          The IP address of the virtual router.

          Example: `10.0.14.1`
        maxLength: 32
        minLength: 1
        type: string
      virtualRouterMac:
        description: |
          The MAC address of the virtual router.

          Example: `00:00:17:B6:4D:DD`
        maxLength: 32
        minLength: 1
        type: string
    required:
    - vcnId
    - id
    - compartmentId
    - availabilityDomain
    - cidrBlock
    - routeTableId
    - virtualRouterIp
    - virtualRouterMac
    - lifecycleState
  TcpOptions:
    description: |
      Optional object to specify ports for a TCP rule. If you specify TCP as the
      protocol but omit this object, then all ports are allowed.
    properties:
      destinationPortRange:
        $ref: '#/definitions/PortRange'
        description: |
          An inclusive range of allowed destination ports. Use the same number for the min and max
          to indicate a single port. Defaults to all ports if not specified.
      sourcePortRange:
        $ref: '#/definitions/PortRange'
        description: |
          An inclusive range of allowed source ports. Use the same number for the min and max to
          indicate a single port. Defaults to all ports if not specified.
  TunnelConfig:
    description: Specific connection details for an IPSec tunnel.
    properties:
      ipAddress:
        description: |
          The IP address of Oracle's VPN headend.

          Example: `129.146.17.50`
        maxLength: 46
        minLength: 1
        type: string
      sharedSecret:
        description: |
          The shared secret of the IPSec tunnel.

          Example: `vFG2IF6TWq4UToUiLSRDoJEUs6j1c.p8G.dVQxiMfMO0yXMLi.lZTbYIWhGu4V8o`
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: |
          The date and time the IPSec connection was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
    required:
    - ipAddress
    - sharedSecret
  TunnelStatus:
    description: |
      Specific connection details for an IPSec tunnel.
    properties:
      ipAddress:
        description: |
          The IP address of Oracle's VPN headend.

          Example: `129.146.17.50`
        maxLength: 46
        minLength: 1
        type: string
      lifecycleState:
        description: The tunnel's current state.
        enum:
        - UP
        - DOWN
        - DOWN_FOR_MAINTENANCE
        type: string
      timeCreated:
        description: |
          The date and time the IPSec connection was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      timeStateModified:
        description: |
          When the state of the tunnel last changed, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
    required:
    - ipAddress
  UdpOptions:
    description: |
      Optional object to specify ports for a UDP rule. If you specify UDP as the
      protocol but omit this object, then all ports are allowed.
    properties:
      destinationPortRange:
        $ref: '#/definitions/PortRange'
        description: |
          An inclusive range of allowed destination ports. Use the same number for the min and max
          to indicate a single port. Defaults to all ports if not specified.
      sourcePortRange:
        $ref: '#/definitions/PortRange'
        description: |
          An inclusive range of allowed source ports. Use the same number for the min and max to
          indicate a single port. Defaults to all ports if not specified.
  UpdateBootVolumeDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
    x-obmcs-feature-id:
    - udx-117
  UpdateConsoleHistoryDetails:
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
  UpdateCpeDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
  UpdateCrossConnectDetails:
    description: |
      Update a CrossConnect
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      isActive:
        description: |
          Set to true to activate the cross-connect. You activate it after the physical cabling
          is complete, and you've confirmed the cross-connect's light levels are good and your side
          of the interface is up. Activation indicates to Oracle that the physical connection is ready.

          Example: `true`
        type: boolean
  UpdateCrossConnectGroupDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
  UpdateDhcpDetails:
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      options:
        items:
          $ref: '#/definitions/DhcpOption'
        type: array
        uniqueItems: true
  UpdateDrgAttachmentDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
  UpdateDrgDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
  UpdateIPSecConnectionDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
  UpdateImageDetails:
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.

          Example: `My custom Oracle Linux image`
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
  UpdateInstanceDetails:
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.

          Example: `My bare metal instance`
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
  UpdateInternetGatewayDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      isEnabled:
        description: Whether the gateway is enabled.
        type: boolean
  UpdateLocalPeeringGatewayDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable. Avoid
          entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
    x-obmcs-feature-id:
    - udx-141
  UpdatePrivateIpDetails:
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable. Avoid
          entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      hostnameLabel:
        description: |
          The hostname for the private IP. Used for DNS. The value
          is the hostname portion of the private IP's fully qualified domain name (FQDN)
          (for example, `bminstance-1` in FQDN `bminstance-1.subnet123.vcn1.oraclevcn.com`).
          Must be unique across all VNICs in the subnet and comply with
          [RFC 952](https://tools.ietf.org/html/rfc952) and
          [RFC 1123](https://tools.ietf.org/html/rfc1123).

          For more information, see
          [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).

          Example: `bminstance-1`
        maxLength: 63
        minLength: 1
        type: string
      vnicId:
        description: |
          The OCID of the VNIC to reassign the private IP to. The VNIC must
          be in the same subnet as the current VNIC.
        maxLength: 255
        minLength: 1
        type: string
  UpdatePublicIpDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable. Avoid
          entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      privateIpId:
        description: |
          The OCID of the private IP to assign the public IP to.
          * If the public IP is already assigned to a different private IP, it will be unassigned
          and then reassigned to the specified private IP.
          * If you set this field to an empty string, the public IP will be unassigned from the
          private IP it is currently assigned to.
        maxLength: 255
        minLength: 0
        type: string
    x-obmcs-feature-id:
    - udx-136
  UpdateRouteTableDetails:
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      routeRules:
        description: The collection of rules used for routing destination IPs to network
          devices.
        items:
          $ref: '#/definitions/RouteRule'
          maximum: 10
          minimum: 0
        type: array
  UpdateSecurityListDetails:
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      egressSecurityRules:
        description: Rules for allowing egress IP packets.
        items:
          $ref: '#/definitions/EgressSecurityRule'
          maximum: 50
          minimum: 1
        type: array
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      ingressSecurityRules:
        description: Rules for allowing ingress IP packets.
        items:
          $ref: '#/definitions/IngressSecurityRule'
          maximum: 50
          minimum: 1
        type: array
  UpdateSubnetDetails:
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
  UpdateVcnDetails:
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
  UpdateVirtualCircuitDetails:
    properties:
      bandwidthShapeName:
        description: |
          The provisioned data rate of the connection. To get a list of the
          available bandwidth levels (that is, shapes), see
          [ListFastConnectProviderVirtualCircuitBandwidthShapes](#/en/iaas/20160918/VirtualCircuitBandwidthShape/ListFastConnectProviderVirtualCircuitBandwidthShapes).
          To be updated only by the customer who owns the virtual circuit.
        type: string
      crossConnectMappings:
        description: |
          An array of mappings, each containing properties for a cross-connect or
          cross-connect group associated with this virtual circuit.

          The customer and provider can update different properties in the mapping
          depending on the situation. See the description of the
          [CrossConnectMapping](#/en/iaas/20160918/CrossConnectMapping/).
        items:
          $ref: '#/definitions/CrossConnectMapping'
        maximum: 2
        minimum: 0
        type: array
      customerBgpAsn:
        description: |
          The BGP ASN of the network at the other end of the BGP
          session from Oracle.

          If the BGP session is from the customer's edge router to Oracle, the
          required value is the customer's ASN, and it can be updated only
          by the customer.

          If the BGP session is from the provider's edge router to Oracle, the
          required value is the provider's ASN, and it can be updated only
          by the provider.
        type: integer
      displayName:
        description: |
          A user-friendly name. Does not have to be unique.
          Avoid entering confidential information.

          To be updated only by the customer who owns the virtual circuit.
        maxLength: 255
        minLength: 1
        type: string
      gatewayId:
        description: |
          The OCID of the [Dynamic Routing Gateway (DRG)](#/en/iaas/20160918/Drg)
          that this private virtual circuit uses.

          To be updated only by the customer who owns the virtual circuit.
        maxLength: 255
        minLength: 1
        type: string
      providerState:
        description: |
          The provider's state in relation to this virtual circuit. Relevant only
          if the customer is using FastConnect via a provider.  ACTIVE
          means the provider has provisioned the virtual circuit from their
          end. INACTIVE means the provider has not yet provisioned the virtual
          circuit, or has de-provisioned it.

          To be updated only by the provider.
        enum:
        - ACTIVE
        - INACTIVE
        type: string
      referenceComment:
        description: |
          Provider-supplied reference information about this virtual circuit.
          Relevant only if the customer is using FastConnect via a provider.

          To be updated only by the provider.
        type: string
  UpdateVnicDetails:
    properties:
      displayName:
        description: A user-friendly name. Does not have to be unique, and it's changeable.
        maxLength: 255
        minLength: 1
        type: string
      hostnameLabel:
        description: |
          The hostname for the VNIC's primary private IP. Used for DNS. The value is the hostname
          portion of the primary private IP's fully qualified domain name (FQDN)
          (for example, `bminstance-1` in FQDN `bminstance-1.subnet123.vcn1.oraclevcn.com`).
          Must be unique across all VNICs in the subnet and comply with
          [RFC 952](https://tools.ietf.org/html/rfc952) and
          [RFC 1123](https://tools.ietf.org/html/rfc1123).
          The value appears in the [Vnic](#/en/iaas/20160918/Vnic/) object and also the
          [PrivateIp](#/en/iaas/20160918/PrivateIp/) object returned by
          [ListPrivateIps](#/en/iaas/20160918/PrivateIp/ListPrivateIps) and
          [GetPrivateIp](#/en/iaas/20160918/PrivateIp/GetPrivateIp).

          For more information, see
          [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).
        maxLength: 63
        minLength: 1
        type: string
      skipSourceDestCheck:
        description: |
          Whether the source/destination check is disabled on the VNIC.
          Defaults to `false`, which means the check is performed. For information
          about why you would skip the source/destination check, see
          [Using a Private IP as a Route Target](/Content/Network/Tasks/managingroutetables.htm#privateip).

          Example: `true`
        type: boolean
  UpdateVolumeBackupDetails:
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A friendly user-specified name for the volume backup.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
  UpdateVolumeDetails:
    properties:
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
  Vcn:
    description: |
      A Virtual Cloud Network (VCN). For more information, see
      [Overview of the Networking Service](/Content/Network/Concepts/overview.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      cidrBlock:
        description: |
          The CIDR IP address block of the VCN.

          Example: `172.16.0.0/16`
        maxLength: 32
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment containing the VCN.
        maxLength: 255
        minLength: 1
        type: string
      defaultDhcpOptionsId:
        description: |
          The OCID for the VCN's default set of DHCP options.
        maxLength: 255
        minLength: 1
        type: string
      defaultRouteTableId:
        description: The OCID for the VCN's default route table.
        maxLength: 255
        minLength: 1
        type: string
      defaultSecurityListId:
        description: The OCID for the VCN's default security list.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      dnsLabel:
        description: |
          A DNS label for the VCN, used in conjunction with the VNIC's hostname and
          subnet's DNS label to form a fully qualified domain name (FQDN) for each VNIC
          within this subnet (for example, `bminstance-1.subnet123.vcn1.oraclevcn.com`).
          Must be an alphanumeric string that begins with a letter.
          The value cannot be changed.

          The absence of this parameter means the Internet and VCN Resolver will
          not work for this VCN.

          For more information, see
          [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).

          Example: `vcn1`
        maxLength: 15
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      id:
        description: The VCN's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The VCN's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      timeCreated:
        description: |
          The date and time the VCN was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      vcnDomainName:
        description: |
          The VCN's domain name, which consists of the VCN's DNS label, and the
          `oraclevcn.com` domain.

          For more information, see
          [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).

          Example: `vcn1.oraclevcn.com`
        maxLength: 253
        minLength: 1
        type: string
    required:
    - id
    - compartmentId
    - cidrBlock
    - lifecycleState
  VirtualCircuit:
    description: |
      For use with Oracle Cloud Infrastructure FastConnect.

      A virtual circuit is an isolated network path that runs over one or more physical
      network connections to provide a single, logical connection between the edge router
      on the customer's existing network and Oracle Cloud Infrastructure. *Private*
      virtual circuits support private peering, and *public* virtual circuits support
      public peering. For more information, see [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).

      Each virtual circuit is made up of information shared between a customer, Oracle,
      and a provider (if the customer is using FastConnect via a provider). Who fills in
      a given property of a virtual circuit depends on whether the BGP session related to
      that virtual circuit goes from the customer's edge router to Oracle, or from the provider's
      edge router to Oracle. Also, in the case where the customer is using a provider, values
      for some of the properties may not be present immediately, but may get filled in as the
      provider and Oracle each do their part to provision the virtual circuit.

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      bandwidthShapeName:
        description: The provisioned data rate of the connection.
        type: string
      bgpManagement:
        description: |
          BGP management option.
        enum:
        - CUSTOMER_MANAGED
        - PROVIDER_MANAGED
        - ORACLE_MANAGED
        type: string
        x-obmcs-feature-id:
        - udx-520
      bgpSessionState:
        description: The state of the BGP session associated with the virtual circuit.
        enum:
        - UP
        - DOWN
        type: string
      compartmentId:
        description: The OCID of the compartment containing the virtual circuit.
        maxLength: 255
        minLength: 1
        type: string
      crossConnectMappings:
        description: |
          An array of mappings, each containing properties for a
          cross-connect or cross-connect group that is associated with this
          virtual circuit.
        items:
          $ref: '#/definitions/CrossConnectMapping'
        maximum: 2
        minimum: 0
        type: array
      customerBgpAsn:
        description: |
          The BGP ASN of the network at the other end of the BGP
          session from Oracle. If the session is between the customer's
          edge router and Oracle, the value is the customer's ASN. If the BGP
          session is between the provider's edge router and Oracle, the value
          is the provider's ASN.
        type: integer
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      gatewayId:
        description: |
          The OCID of the customer's [Dynamic Routing Gateway (DRG)](#/en/iaas/20160918/Drg)
          that this virtual circuit uses. Applicable only to private virtual circuits.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The virtual circuit's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: |
          The virtual circuit's current state. For information about
          the different states, see
          [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).
        enum:
        - PENDING_PROVIDER
        - VERIFYING
        - PROVISIONING
        - PROVISIONED
        - FAILED
        - INACTIVE
        - TERMINATING
        - TERMINATED
        type: string
      oracleBgpAsn:
        description: The Oracle BGP ASN.
        type: integer
      providerName:
        description: |
          Deprecated. Instead use `providerServiceId`.
        maxLength: 255
        minLength: 1
        type: string
      providerServiceId:
        description: |
          The OCID of the service offered by the provider (if the customer is connecting via a provider).
        maxLength: 255
        minLength: 1
        type: string
        x-obmcs-feature-id:
        - udx-645
      providerServiceName:
        description: |
          Deprecated. Instead use `providerServiceId`.
        maxLength: 255
        minLength: 1
        type: string
      providerState:
        description: |
          The provider's state in relation to this virtual circuit (if the
          customer is connecting via a provider). ACTIVE means
          the provider has provisioned the virtual circuit from their end.
          INACTIVE means the provider has not yet provisioned the virtual
          circuit, or has de-provisioned it.
        enum:
        - ACTIVE
        - INACTIVE
        type: string
      publicPrefixes:
        description: |
          For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to
          advertise across the connection. Each prefix must be /24 or less specific.
        items:
          maxLength: 50
          minLength: 9
          type: string
        maximum: 50
        minimum: 0
        type: array
        x-obmcs-feature-id:
        - udx-507
      referenceComment:
        description: |
          Provider-supplied reference information about this virtual circuit
          (if the customer is connecting via a provider).
        type: string
      region:
        description: |
          The Oracle Cloud Infrastructure region where this virtual
          circuit is located.
        maxLength: 255
        minLength: 1
        type: string
      serviceType:
        description: |
          Provider service type.
        enum:
        - COLOCATED
        - LAYER2
        - LAYER3
        type: string
        x-obmcs-feature-id:
        - udx-645
      timeCreated:
        description: |
          The date and time the virtual circuit was created,
          in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      type:
        description: |
          Whether the virtual circuit supports private or public peering. For more information,
          see [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).
        enum:
        - PUBLIC
        - PRIVATE
        type: string
  VirtualCircuitBandwidthShape:
    description: |
      An individual bandwidth level for virtual circuits.
    properties:
      bandwidthInMbps:
        description: |
          The bandwidth in Mbps.

          Example: `10000`
        type: integer
      name:
        description: |
          The name of the bandwidth shape.

          Example: `10 Gbps`
        maxLength: 255
        minLength: 1
        type: string
    required:
    - name
  VirtualCircuitPublicPrefix:
    description: |
      A public IP prefix and its details. With a public virtual circuit, the customer
      specifies the customer-owned public IP prefixes to advertise across the connection.
      For more information, see [FastConnect Overview](/Content/Network/Concepts/fastconnect.htm).
    properties:
      cidrBlock:
        description: Publix IP prefix (CIDR) that the customer specified.
        maxLength: 50
        minLength: 9
        type: string
      verificationState:
        description: |
          Oracle must verify that the customer owns the public IP prefix before traffic
          for that prefix can flow across the virtual circuit. Verification can take a
          few business days. `IN_PROGRESS` means Oracle is verifying the prefix. `COMPLETED`
          means verification succeeded. `FAILED` means verification failed and traffic for
          this prefix will not flow across the connection.
        enum:
        - IN_PROGRESS
        - COMPLETED
        - FAILED
        type: string
    required:
    - cidrBlock
    - verificationState
    x-obmcs-feature-id:
    - udx-507
  Vnic:
    description: |
      A virtual network interface card. Each VNIC resides in a subnet in a VCN.
      An instance attaches to a VNIC to obtain a network connection into the VCN
      through that subnet. Each instance has a *primary VNIC* that is automatically
      created and attached during launch. You can add *secondary VNICs* to an
      instance after it's launched. For more information, see
      [Virtual Network Interface Cards (VNICs)](/Content/Network/Tasks/managingVNICs.htm).

      Each VNIC has a *primary private IP* that is automatically assigned during launch.
      You can add *secondary private IPs* to a VNIC after it's created. For more
      information, see [CreatePrivateIp](#/en/iaas/20160918/PrivateIp/CreatePrivateIp) and
      [IP Addresses](/Content/Network/Tasks/managingIPaddresses.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      availabilityDomain:
        description: |
          The VNIC's Availability Domain.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment containing the VNIC.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      hostnameLabel:
        description: |
          The hostname for the VNIC's primary private IP. Used for DNS. The value is the hostname
          portion of the primary private IP's fully qualified domain name (FQDN)
          (for example, `bminstance-1` in FQDN `bminstance-1.subnet123.vcn1.oraclevcn.com`).
          Must be unique across all VNICs in the subnet and comply with
          [RFC 952](https://tools.ietf.org/html/rfc952) and
          [RFC 1123](https://tools.ietf.org/html/rfc1123).

          For more information, see
          [DNS in Your Virtual Cloud Network](/Content/Network/Concepts/dns.htm).

          Example: `bminstance-1`
        maxLength: 63
        minLength: 1
        type: string
      id:
        description: The OCID of the VNIC.
        maxLength: 255
        minLength: 1
        type: string
      isPrimary:
        description: |
          Whether the VNIC is the primary VNIC (the VNIC that is automatically created
          and attached during instance launch).
        type: boolean
      lifecycleState:
        description: The current state of the VNIC.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      macAddress:
        description: |
          The MAC address of the VNIC.

          Example: `00:00:17:B6:4D:DD`
        maxLength: 32
        minLength: 1
        type: string
      privateIp:
        description: |
          The private IP address of the primary `privateIp` object on the VNIC.
          The address is within the CIDR of the VNIC's subnet.

          Example: `10.0.3.3`
        type: string
      publicIp:
        description: |
          The public IP address of the VNIC, if one is assigned.
        type: string
      skipSourceDestCheck:
        description: |
          Whether the source/destination check is disabled on the VNIC.
          Defaults to `false`, which means the check is performed. For information
          about why you would skip the source/destination check, see
          [Using a Private IP as a Route Target](/Content/Network/Tasks/managingroutetables.htm#privateip).

          Example: `true`
        type: boolean
      subnetId:
        description: The OCID of the subnet the VNIC is in.
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: |
          The date and time the VNIC was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
    required:
    - availabilityDomain
    - compartmentId
    - id
    - privateIp
    - lifecycleState
    - subnetId
    - timeCreated
  VnicAttachment:
    description: |
      Represents an attachment between a VNIC and an instance. For more information, see
      [Virtual Network Interface Cards (VNICs)](/Content/Network/Tasks/managingVNICs.htm).
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of the instance.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: |
          The OCID of the compartment the VNIC attachment is in, which is the same
          compartment the instance is in.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The OCID of the VNIC attachment.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance.
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The current state of the VNIC attachment.
        enum:
        - ATTACHING
        - ATTACHED
        - DETACHING
        - DETACHED
        type: string
      nicIndex:
        description: |
          Which physical network interface card (NIC) the VNIC uses.
          Certain bare metal instance shapes have two active physical NICs (0 and 1). If
          you add a secondary VNIC to one of these instances, you can specify which NIC
          the VNIC will use. For more information, see
          [Virtual Network Interface Cards (VNICs)](/Content/Network/Tasks/managingVNICs.htm).
        format: int32
        maximum: 31
        minimum: 0
        type: integer
        x-obmcs-feature-id:
        - udx-473
      subnetId:
        description: The OCID of the VNIC's subnet.
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: |
          The date and time the VNIC attachment was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      vlanTag:
        description: |
          The Oracle-assigned VLAN tag of the attached VNIC. Available after the
          attachment process is complete.

          Example: `0`
        format: int32
        type: integer
      vnicId:
        description: The OCID of the VNIC. Available after the attachment process
          is complete.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - id
    - compartmentId
    - instanceId
    - subnetId
    - lifecycleState
    - availabilityDomain
    - timeCreated
  Volume:
    description: |
      A detachable block volume device that allows you to dynamically expand
      the storage capacity of an instance. For more information, see
      [Overview of Cloud Volume Storage](/Content/Block/Concepts/overview.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of the volume.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment that contains the volume.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      id:
        description: The OCID of the volume.
        maxLength: 255
        minLength: 1
        type: string
      isHydrated:
        description: Specifies whether the cloned volume's data has finished copying
          from the source volume or backup.
        type: boolean
      lifecycleState:
        description: The current state of a volume.
        enum:
        - PROVISIONING
        - RESTORING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        - FAULTY
        type: string
      sizeInGBs:
        description: The size of the volume in GBs.
        format: int64
        type: integer
      sizeInMBs:
        description: The size of the volume in MBs. This field is deprecated. Use
          sizeInGBs instead.
        format: int64
        type: integer
      sourceDetails:
        $ref: '#/definitions/VolumeSourceDetails'
        description: |
          The volume source, either an existing volume in the same Availability Domain or a volume backup.
          If null, an empty volume is created.
      timeCreated:
        description: The date and time the volume was created. Format defined by RFC3339.
        format: date-time
        type: string
    required:
    - id
    - availabilityDomain
    - displayName
    - sizeInMBs
    - compartmentId
    - timeCreated
    - lifecycleState
  VolumeAttachment:
    description: |
      A base object for all types of attachments between a storage volume and an instance.
      For specific details about iSCSI attachments, see
      [IScsiVolumeAttachment Reference](#/en/iaas/20160918/IScsiVolumeAttachment/).

      For general information about volume attachments, see
      [Overview of Block Volume Storage](/Content/Block/Concepts/overview.htm).
    discriminator: attachmentType
    properties:
      attachmentType:
        description: The type of volume attachment.
        maxLength: 255
        minLength: 1
        type: string
      availabilityDomain:
        description: |
          The Availability Domain of an instance.

          Example: `Uocm:PHX-AD-1`
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it cannot be changed.
          Avoid entering confidential information.

          Example: `My volume attachment`
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The OCID of the volume attachment.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance the volume is attached to.
        maxLength: 255
        minLength: 1
        type: string
      isReadOnly:
        description: Whether the attachment was created in read-only mode.
        type: boolean
      lifecycleState:
        description: The current state of the volume attachment.
        enum:
        - ATTACHING
        - ATTACHED
        - DETACHING
        - DETACHED
        type: string
      timeCreated:
        description: |
          The date and time the volume was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`
        format: date-time
        type: string
      volumeId:
        description: The OCID of the volume.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - id
    - attachmentType
    - instanceId
    - volumeId
    - lifecycleState
    - compartmentId
    - availabilityDomain
    - timeCreated
  VolumeBackup:
    description: |
      A point-in-time copy of a volume that can then be used to create a new block volume
      or recover a block volume. For more information, see
      [Overview of Cloud Volume Storage](/Content/Block/Concepts/overview.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      compartmentId:
        description: The OCID of the compartment that contains the volume backup.
        maxLength: 255
        minLength: 1
        type: string
      definedTags:
        additionalProperties: *id001
        description: |
          Defined tags for this resource. Each key is predefined and scoped to a namespace.
          For more information, see [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Operations": {"CostCenter": "42"}}`
        type: object
      displayName:
        description: |
          A user-friendly name for the volume backup. Does not have to be unique and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      expirationTime:
        description: |
          The date and time the volume backup will expire and be automatically deleted.
          Format defined by RFC3339. This parameter will always be present for backups that
          were created automatically by a scheduled-backup policy. For manually created backups,
          it will be absent, signifying that there is no expiration time and the backup will
          last forever until manually deleted.
        format: date-time
        type: string
      freeformTags:
        additionalProperties: *id002
        description: |
          Free-form tags for this resource. Each tag is a simple key-value pair with no
          predefined name, type, or namespace. For more information, see
          [Resource Tags](/Content/General/Concepts/resourcetags.htm).

          Example: `{"Department": "Finance"}`
        type: object
      id:
        description: The OCID of the volume backup.
        maxLength: 255
        minLength: 1
        type: string
      lifecycleState:
        description: The current state of a volume backup.
        enum:
        - CREATING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        - FAULTY
        - REQUEST_RECEIVED
        type: string
      sizeInGBs:
        description: |
          The size of the volume, in GBs.
        format: int64
        maximum: 16384
        minimum: 1
        type: integer
      sizeInMBs:
        description: |
          The size of the volume in MBs. The value must be a multiple of 1024.
          This field is deprecated. Please use sizeInGBs.
        format: int64
        maximum: 16777216
        minimum: 1024
        type: integer
      sourceType:
        description: Specifies whether the backup was created manually, or via scheduled
          backup policy.
        enum:
        - MANUAL
        - SCHEDULED
        type: string
      timeCreated:
        description: |
          The date and time the volume backup was created. This is the time the actual point-in-time image
          of the volume data was taken. Format defined by RFC3339.
        format: date-time
        type: string
      timeRequestReceived:
        description: |
          The date and time the request to create the volume backup was received. Format defined by RFC3339.
        format: date-time
        type: string
      type:
        description: The type of a volume backup.
        enum:
        - FULL
        - INCREMENTAL
        type: string
      uniqueSizeInGBs:
        description: |
          The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space
          consumed on the volume and whether the backup is full or incremental.
        format: int64
        maximum: 16384
        minimum: 0
        type: integer
      uniqueSizeInMbs:
        description: |
          The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space
          consumed on the volume and whether the backup is full or incremental.
          This field is deprecated. Please use uniqueSizeInGBs.
        format: int64
        maximum: 16777216
        minimum: 0
        type: integer
      volumeId:
        description: The OCID of the volume.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - id
    - type
    - displayName
    - compartmentId
    - timeCreated
    - lifecycleState
  VolumeBackupPolicy:
    description: A policy for automatically creating volume backups according to a
      recurring schedule. Has a set of one or more schedules that control when and
      how backups are created.
    properties:
      displayName:
        description: |
          A user-friendly name for the volume backup policy. Does not have to be unique and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The OCID of the volume backup policy.
        maxLength: 255
        minLength: 1
        type: string
      schedules:
        description: The collection of schedules that this policy will apply.
        items:
          $ref: '#/definitions/VolumeBackupSchedule'
          minimum: 1
        type: array
      timeCreated:
        description: |
          The date and time the volume backup policy was created. Format defined by RFC3339.
        format: date-time
        type: string
    required:
    - id
    - displayName
    - schedules
    - timeCreated
  VolumeBackupPolicyAssignment:
    description: Specifies that a particular volume backup policy is assigned to an
      asset such as a volume.
    properties:
      assetId:
        description: The OCID of the asset (e.g. a volume) to which the policy has
          been assigned.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The OCID of the volume backup policy assignment.
        maxLength: 255
        minLength: 1
        type: string
      policyId:
        description: The OCID of the volume backup policy that has been assigned to
          an asset.
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: |
          The date and time the volume backup policy assignment was created. Format defined by RFC3339.
        format: date-time
        type: string
    required:
    - id
    - policyId
    - assetId
    - timeCreated
  VolumeBackupSchedule:
    description: Defines a chronological recurrence pattern for creating scheduled
      backups at a particular periodicity.
    properties:
      backupType:
        description: The type of backup to create.
        enum:
        - FULL
        - INCREMENTAL
        type: string
      offsetSeconds:
        description: The number of seconds (positive or negative) that the backup
          time should be shifted from the default interval boundaries specified by
          the period.
        type: integer
      period:
        description: How often the backup should occur.
        enum:
        - ONE_HOUR
        - ONE_DAY
        - ONE_WEEK
        - ONE_MONTH
        - ONE_YEAR
        type: string
      retentionSeconds:
        description: How long, in seconds, backups created by this schedule should
          be kept until being automatically deleted.
        minimum: 3600
        type: integer
    required:
    - period
    - offsetSeconds
    - backupType
    - retentionSeconds
  VolumeSourceDetails:
    discriminator: type
    properties:
      type:
        type: string
    required:
    - type
  VolumeSourceFromVolumeBackupDetails:
    allOf:
    - $ref: '#/definitions/VolumeSourceDetails'
    - discriminator: volumeBackup
      properties:
        id:
          description: The OCID of the volume backup.
          maxLength: 255
          minLength: 1
          type: string
      required:
      - id
    description: Specifies the volume backup.
  VolumeSourceFromVolumeDetails:
    allOf:
    - $ref: '#/definitions/VolumeSourceDetails'
    - discriminator: volume
      properties:
        id:
          description: The OCID of the volume.
          maxLength: 255
          minLength: 1
          type: string
      required:
      - id
    description: Specifies the source volume.
parameters:
  AssetIdQueryParam:
    description: The OCID of an asset (e.g. a volume).
    in: query
    name: assetId
    required: true
    type: string
  AvailabilityDomainQueryParam:
    description: |
      The name of the Availability Domain.

      Example: `Uocm:PHX-AD-1`
    in: query
    name: availabilityDomain
    required: false
    type: string
  BootVolumeAttachmentIdPathParam:
    description: The OCID of the boot volume attachment.
    in: path
    name: bootVolumeAttachmentId
    required: true
    type: string
    x-obmcs-feature-id:
    - udx-117
  BootVolumeIdPathParam:
    description: The OCID of the boot volume.
    in: path
    name: bootVolumeId
    required: true
    type: string
    x-obmcs-feature-id:
    - udx-117
  BootVolumeIdQueryParam:
    description: The OCID of the boot volume.
    in: query
    name: bootVolumeId
    type: string
    x-obmcs-feature-id:
    - udx-117
  CompartmentIdQueryParam:
    description: The OCID of the compartment.
    in: query
    maxLength: 255
    minLength: 1
    name: compartmentId
    required: true
    type: string
  CpeIdOptionalQueryParam:
    description: The OCID of the CPE.
    in: query
    maxLength: 255
    minLength: 1
    name: cpeId
    required: false
    type: string
  CpeIdPathParam:
    description: The OCID of the CPE.
    in: path
    maxLength: 255
    minLength: 1
    name: cpeId
    required: true
    type: string
  CrossConnectGroupIdOptionalQueryParam:
    description: The OCID of the cross-connect group.
    in: query
    maxLength: 255
    minLength: 1
    name: crossConnectGroupId
    required: false
    type: string
  CrossConnectGroupIdPathParam:
    description: The OCID of the cross-connect group.
    in: path
    maxLength: 255
    minLength: 1
    name: crossConnectGroupId
    required: true
    type: string
  CrossConnectIdPathParam:
    description: The OCID of the cross-connect.
    in: path
    maxLength: 255
    minLength: 1
    name: crossConnectId
    required: true
    type: string
  DhcpIdPathParam:
    description: The OCID for the set of DHCP options.
    in: path
    maxLength: 255
    minLength: 1
    name: dhcpId
    required: true
    type: string
  DrgAttachmentIdPathParam:
    description: The OCID of the DRG attachment.
    in: path
    maxLength: 255
    minLength: 1
    name: drgAttachmentId
    required: true
    type: string
  DrgIdOptionalQueryParam:
    description: The OCID of the DRG.
    in: query
    maxLength: 255
    minLength: 1
    name: drgId
    required: false
    type: string
  DrgIdPathParam:
    description: The OCID of the DRG.
    in: path
    maxLength: 255
    minLength: 1
    name: drgId
    required: true
    type: string
  FilterByDisplayNameQueryParam:
    description: |
      A filter to return only resources that match the given display name exactly.
    in: query
    maxLength: 255
    minLength: 1
    name: displayName
    required: false
    type: string
  IPSecConnectionIdPathParam:
    description: The OCID of the IPSec connection.
    in: path
    maxLength: 255
    minLength: 1
    name: ipscId
    required: true
    type: string
  IfMatchHeader:
    description: |
      For optimistic concurrency control. In the PUT or DELETE call for a resource, set the `if-match`
      parameter to the value of the etag from a previous GET or POST response for that resource.  The resource
      will be updated or deleted only if the etag you provide matches the resource's current etag value.
    in: header
    name: if-match
    type: string
  ImageIdPathParam:
    description: The OCID of the image.
    in: path
    name: imageId
    required: true
    type: string
  ImageIdQueryParam:
    description: The OCID of an image.
    in: query
    name: imageId
    type: string
  InstanceActionQueryParam:
    description: The action to perform on the instance.
    enum:
    - STOP
    - START
    - SOFTRESET
    - RESET
    in: query
    name: action
    required: true
    type: string
    x-obmcs-inline-enum: false
  InstanceConsoleConnectionIdPathParam:
    description: The OCID of the intance console connection
    in: path
    name: instanceConsoleConnectionId
    required: true
    type: string
  InstanceConsoleHistoryIdPathParam:
    description: The OCID of the console history.
    in: path
    name: instanceConsoleHistoryId
    required: true
    type: string
  InstanceIdPathParam:
    description: The OCID of the instance.
    in: path
    name: instanceId
    required: true
    type: string
  InstanceIdQueryParam:
    description: The OCID of the instance.
    in: query
    name: instanceId
    type: string
  InternetGatewayIdPathParam:
    description: The OCID of the Internet Gateway.
    in: path
    maxLength: 255
    minLength: 1
    name: igId
    required: true
    type: string
  IpAddressOptionalQueryParam:
    description: |
      An IP address.

      Example: `10.0.3.3`
    in: query
    name: ipAddress
    required: false
    type: string
  LocalPeeringGatewayIdPathParam:
    description: The OCID of the local peering gateway.
    in: path
    maxLength: 255
    minLength: 1
    name: localPeeringGatewayId
    required: true
    type: string
    x-obmcs-feature-id:
    - udx-141
  OpcPoolNameQueryParam:
    description: Name of the pool in which to launch an instance.
    in: query
    name: opc-pool-name
    type: string
    x-obmcs-preview-only: true
  OperatingSystemQueryParam:
    description: |
      The image's operating system.

      Example: `Oracle Linux`
    in: query
    name: operatingSystem
    type: string
  OperatingSystemVersionQueryParam:
    description: |
      The image's operating system version.

      Example: `7.2`
    in: query
    name: operatingSystemVersion
    type: string
  PaginationLimitQueryParam:
    description: |
      The maximum number of items to return in a paginated "List" call.

      Example: `500`
    in: query
    maximum: 1000
    minimum: 1
    name: limit
    type: integer
  PaginationTokenQueryParam:
    description: |
      The value of the `opc-next-page` response header from the previous "List" call.
    in: query
    maxLength: 512
    minLength: 1
    name: page
    type: string
  PreserveBootVolumeQueryParam:
    description: |
      Specifies whether to delete or preserve the boot volume when terminating an instance.
      The default value is false.
    in: query
    name: preserveBootVolume
    required: false
    type: boolean
    x-obmcs-feature-id:
    - udx-117
  PrivateIpIdPathParam:
    description: The OCID of the private IP.
    in: path
    maxLength: 255
    minLength: 1
    name: privateIpId
    required: true
    type: string
  ProviderServiceIdPathParam:
    description: The OCID of the provider service.
    in: path
    maxLength: 255
    minLength: 1
    name: providerServiceId
    required: true
    type: string
  PublicIpIdPathParam:
    description: The OCID of the public IP.
    in: path
    maxLength: 255
    minLength: 1
    name: publicIpId
    required: true
    type: string
    x-obmcs-feature-id:
    - udx-136
  PublicIpScopeQueryParam:
    description: |
      Whether the public IP is regional or specific to a particular Availability Domain.

      * `REGION`: The public IP exists within a region and can be assigned to a private IP
      in any Availability Domain in the region. Reserved public IPs have `scope` = `REGION`.

      * `AVAILABILITY_DOMAIN`: The public IP exists within the Availability Domain of the private IP
      it's assigned to, which is specified by the `availabilityDomain` property of the public IP object.
      Ephemeral public IPs have `scope` = `AVAILABILITY_DOMAIN`.
    enum:
    - REGION
    - AVAILABILITY_DOMAIN
    in: query
    name: scope
    required: true
    type: string
    x-obmcs-feature-id:
    - udx-136
  RequiredAvailabilityDomainQueryParam:
    description: |
      The name of the Availability Domain.

      Example: `Uocm:PHX-AD-1`
    in: query
    name: availabilityDomain
    required: true
    type: string
    x-obmcs-feature-id:
    - udx-117
  RetryTokenHeader:
    description: |
      A token that uniquely identifies a request so it can be retried in case of a timeout or
      server error without risk of executing that same action again. Retry tokens expire after 24
      hours, but can be invalidated before then due to conflicting operations (for example, if a resource
      has been deleted and purged from the system, then a retry of the original creation request
      may be rejected).
    in: header
    maxLength: 64
    minLength: 1
    name: opc-retry-token
    type: string
  RouteTableIdPathParam:
    description: The OCID of the route table.
    in: path
    maxLength: 255
    minLength: 1
    name: rtId
    required: true
    type: string
  SecurityListIdPathParam:
    description: The OCID of the security list.
    in: path
    maxLength: 255
    minLength: 1
    name: securityListId
    required: true
    type: string
  ShapeNamePathParam:
    description: Shape name.
    in: path
    maxLength: 255
    minLength: 1
    name: shapeName
    required: true
    type: string
  ShapeNameQueryParam:
    description: Shape name.
    in: query
    name: shape
    type: string
  SortByQueryParam:
    description: |
      The field to sort by. You can provide one sort order (`sortOrder`). Default order for
      TIMECREATED is descending. Default order for DISPLAYNAME is ascending. The DISPLAYNAME
      sort order is case sensitive.

      **Note:** In general, some "List" operations (for example, `ListInstances`) let you
      optionally filter by Availability Domain if the scope of the resource type is within a
      single Availability Domain. If you call one of these "List" operations without specifying
      an Availability Domain, the resources are grouped by Availability Domain, then sorted.
    enum:
    - TIMECREATED
    - DISPLAYNAME
    in: query
    name: sortBy
    required: false
    type: string
  SortOrderQueryParam:
    description: |
      The sort order to use, either ascending (`ASC`) or descending (`DESC`). The DISPLAYNAME sort order
      is case sensitive.
    enum:
    - ASC
    - DESC
    in: query
    name: sortOrder
    required: false
    type: string
  SubnetIdOptionalQueryParam:
    description: The OCID of the subnet.
    in: query
    maxLength: 255
    minLength: 1
    name: subnetId
    required: false
    type: string
  SubnetIdPathParam:
    description: The OCID of the subnet.
    in: path
    maxLength: 255
    minLength: 1
    name: subnetId
    required: true
    type: string
  VcnIdOptionalQueryParam:
    description: The OCID of the VCN.
    in: query
    maxLength: 255
    minLength: 1
    name: vcnId
    required: false
    type: string
  VcnIdPathParam:
    description: The OCID of the VCN.
    in: path
    maxLength: 255
    minLength: 1
    name: vcnId
    required: true
    type: string
  VcnIdQueryParam:
    description: The OCID of the VCN.
    in: query
    maxLength: 255
    minLength: 1
    name: vcnId
    required: true
    type: string
  VirtualCircuitIdPathParam:
    description: The OCID of the virtual circuit.
    in: path
    maxLength: 255
    minLength: 1
    name: virtualCircuitId
    required: true
    type: string
  VnicAttachmentIdPathParam:
    description: The OCID of the VNIC attachment.
    in: path
    maxLength: 255
    minLength: 1
    name: vnicAttachmentId
    required: true
    type: string
  VnicIdOptionalQueryParam:
    description: The OCID of the VNIC.
    in: query
    name: vnicId
    required: false
    type: string
  VnicIdPathParam:
    description: The OCID of the VNIC.
    in: path
    maxLength: 255
    minLength: 1
    name: vnicId
    required: true
    type: string
  VnicIdQueryParam:
    description: The OCID of the VNIC.
    in: query
    name: vnicId
    required: false
    type: string
  VolumeAttachmentIdPathParam:
    description: The OCID of the volume attachment.
    in: path
    name: volumeAttachmentId
    required: true
    type: string
  VolumeBackupIdPathParam:
    description: The OCID of the volume backup.
    in: path
    name: volumeBackupId
    required: true
    type: string
  VolumeBackupPolicyAssignmentIdPathParam:
    description: The OCID of the volume backup policy assignment.
    in: path
    name: policyAssignmentId
    required: true
    type: string
  VolumeBackupPolicyIdPathParam:
    description: The OCID of the volume backup policy.
    in: path
    name: policyId
    required: true
    type: string
  VolumeIdPathParam:
    description: The OCID of the volume.
    in: path
    name: volumeId
    required: true
    type: string
  VolumeIdQueryParam:
    description: The OCID of the volume.
    in: query
    name: volumeId
    type: string
responses:
  400:
    description: Bad Request
    headers:
      opc-request-id:
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
          a particular request, please provide the request ID.
        type: string
    schema:
      $ref: '#/definitions/Error'
  401:
    description: Unauthorized
    headers:
      opc-request-id:
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
          a particular request, please provide the request ID.
        type: string
    schema:
      $ref: '#/definitions/Error'
  403:
    description: Forbidden
    headers:
      opc-request-id:
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
          a particular request, please provide the request ID.
        type: string
    schema:
      $ref: '#/definitions/Error'
  404:
    description: Not Found
    headers:
      opc-request-id:
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
          a particular request, please provide the request ID.
        type: string
    schema:
      $ref: '#/definitions/Error'
  409:
    description: Conflict
    headers:
      opc-request-id:
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
          a particular request, please provide the request ID.
        type: string
    schema:
      $ref: '#/definitions/Error'
  412:
    description: Precondition Failed
    headers:
      opc-request-id:
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
          a particular request, please provide the request ID.
        type: string
    schema:
      $ref: '#/definitions/Error'
  500:
    description: Internal Server Error
    headers:
      opc-request-id:
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
          a particular request, please provide the request ID.
        type: string
    schema:
      $ref: '#/definitions/Error'
  DefaultError:
    description: An error has occurred.
    headers:
      opc-request-id:
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
          a particular request, please provide the request ID.
        type: string
    schema:
      $ref: '#/definitions/Error'
