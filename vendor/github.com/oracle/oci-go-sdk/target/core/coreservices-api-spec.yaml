swagger: '2.0'
info:
  version: '1.0.0'
  title: Core Services API Spec
  description: Combined Spec for Compute / Block Storage / VCN
  license:
    name: Oracle Corporation
  x-sources:
  - compute-api.yaml:
      contact:
        email: opc_metadata_dev_grp@oracle.com
        name: Compute
      description: API for the Compute Service
      license:
        name: Oracle Corporation
      title: Compute API
      version: 1.0.0
  - vcn-api-spec.yaml:
      contact:
        email: sic-vcn-cp_us_grp@oracle.com
        name: VCN
      description: API for the Virtual Cloud Network
      license:
        name: Oracle Corporation
      title: Virtual Cloud Network API
      version: 1.1.0
  - blockstorage-public-api-spec.yaml:
      contact:
        email: sic_block_storage_us_grp@oracle.com
        name: blockstorage
      description: Cloud Block Storage Service Public API
      license:
        name: Oracle Corporation
      title: Cloud Block Storage Public API
      version: 1.0.0
schemes:
- http
consumes:
- application/json
produces:
- application/json
basePath: /v1
paths:
  /cpes:
    get:
      description: |
        Gets a list of the Customer-Premise Equipment objects (CPEs) in the specified compartment.
      operationId: ListCpes
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: A page of `Cpe` objects.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/Cpe'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListCpes
      tags:
      - vcnService
    post:
      description: |
        Creates a new virtual Customer-Premise Equipment (CPE) object in the specified compartment. You can
        think of a CPE object as a virtual representation of the actual router that is on-premise at your site,
        at your end of the VPN connection to your VCN. You need to create this object as part of the process of
        setting up the VPN. For more information, see
        [Typical Virtual Cloud Network Scenarios](../../../#Network/Concepts/overview.htm#Typical_Cloud_Network_Scenarios)
        and [Managing Customer-Premise Equipment (CPE)](../../../#Network/Tasks/managingCPEs.htm).

        For the purposes of access control, you must provide the OCID of the compartment where you want
        the CPE to reside. Notice that the CPE doesn't have to be in the same compartment as the IPsec
        connection or other Virtual Network Service components. If you're not sure which compartment to
        use, put the CPE in the same compartment as the IPsec connection. For more information about
        compartments and access control, see [Overview of the Identity Service](../../../#Identity/Concepts/overview.htm).
        For information about OCIDs, see [Resource Identifiers](../../../#General/Concepts/identifiers.htm).

        You must provide the public IP address of your on-premise router. See
        [Configuring Your On-Premise Router](../../../#Network/Tasks/configuringCPE.htm).

        You may optionally specify a *display name* for the CPE, which is simply a friendly name or description.
        It does not have to be unique, and it's unchangeable.
      operationId: CreateCpe
      parameters:
      - description: Request object for creating a CPE.
        in: body
        name: CreateCpeRequest
        required: true
        schema:
          $ref: '#/definitions/CreateCpeRequest'
      - $ref: '#/parameters/IdempotencyTokenHeader'
      responses:
        200:
          description: The CPE has been created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Cpe'
        default:
          $ref: '#/responses/Error'
      summary: CreateCpe
      tags:
      - vcnService
  /cpes/{cpeId}:
    delete:
      description: |
        Deletes the specified CPE object. The CPE must not be connected to a DRG. This is an asynchronous
        operation; the CPE's state will switch to TERMINATING temporarily until the CPE is completely removed.
      operationId: DeleteCpe
      parameters:
      - $ref: '#/parameters/CpeIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The CPE is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
        default:
          $ref: '#/responses/Error'
      summary: DeleteCpe
      tags:
      - vcnService
    get:
      description: Gets the specified CPE's information.
      operationId: GetCpe
      parameters:
      - $ref: '#/parameters/CpeIdPathParam'
      responses:
        200:
          description: The CPE was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Cpe'
        default:
          $ref: '#/responses/Error'
      summary: GetCpe
      tags:
      - vcnService
  /drgAttachments:
    get:
      description: |
        Gets a list of the `DrgAttachment`s for the specified compartment. You can optionally filter the
        results by VCN or DRG.
      operationId: ListDrgAttachments
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/VcnIdOptionalQueryParam'
      - $ref: '#/parameters/DrgIdOptionalQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: A page of `DrgAttachment` objects.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/DrgAttachment'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListDrgAttachments
      tags:
      - vcnService
    post:
      description: |
        Attaches the specified DRG to the specified VCN. A VCN can be attached to only one DRG at a time.
        The response includes a `DrgAttachment` object with its own OCID. For more information about DRGs, see
        [Managing Dynamic Routing Gateways (DRGs)](../../../#Network/Tasks/managingDRGs.htm).

        You may optionally specify a *display name* for the attachment, which is simply a friendly name or
        description. It does not have to be unique, and it's unchangeable.

        For the purposes of access control, the DRG attachment is automatically placed into the same compartment
        as the VCN. For more information about compartments and access control, see
        [Overview of the Identity Service](../../../#Identity/Concepts/overview.htm).
      operationId: CreateDrgAttachment
      parameters:
      - description: Request object for creating a `DrgAttachment`.
        in: body
        name: CreateDrgAttachmentRequest
        required: true
        schema:
          $ref: '#/definitions/CreateDrgAttachmentRequest'
      - $ref: '#/parameters/IdempotencyTokenHeader'
      responses:
        200:
          description: The DRG was attached.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/DrgAttachment'
        default:
          $ref: '#/responses/Error'
      summary: CreateDrgAttachment
      tags:
      - vcnService
  /drgAttachments/{drgAttachmentId}:
    delete:
      description: |
        Detaches a DRG from a VCN by deleting the corresponding `DrgAttachment`. This is an asynchronous
        operation; the attachment's state will switch to TERMINATING temporarily until the attachment
        is completely removed.
      operationId: DeleteDrgAttachment
      parameters:
      - $ref: '#/parameters/DrgAttachmentIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The DRG is being detached.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
        default:
          $ref: '#/responses/Error'
      summary: DeleteDrgAttachment
      tags:
      - vcnService
    get:
      description: Gets the information for the specified `DrgAttachment`.
      operationId: GetDrgAttachment
      parameters:
      - $ref: '#/parameters/DrgAttachmentIdPathParam'
      responses:
        200:
          description: The `DrgAttachment` was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/DrgAttachment'
        default:
          $ref: '#/responses/Error'
      summary: GetDrgAttachment
      tags:
      - vcnService
  /drgs:
    get:
      description: Gets a list of the DRGs in the specified compartment.
      operationId: ListDrgs
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: A page of `Drg` objects.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/Drg'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListDrgs
      tags:
      - vcnService
    post:
      description: |
        Creates a new Dynamic Routing Gateway (DRG) in the specified compartment. You can think of a DRG
        as a virtual router that provides a path for private traffic between your VCN and your on-premise
        network. You use it with other Virtual Network Service components and an on-premise router to create
        a site-to-site VPN. For more information, see
        [Typical Virtual Cloud Network Scenarios](../../../#Network/Concepts/overview.htm#Typical_Cloud_Network_Scenarios)
        and [Managing Dynamic Routing Gateways (DRGs)](../../../#Network/Tasks/managingDRGs.htm).

        For the purposes of access control, you must provide the OCID of the compartment where you want
        the DRG to reside. Notice that the DRG doesn't have to be in the same compartment as the VCN,
        the DRG attachment, or other Virtual Network Service components. If you're not sure which compartment
        to use, put the DRG in the same compartment as the VCN. For more information about compartments
        and access control, see [Overview of the Identity Service](../../../#Identity/Concepts/overview.htm).
        For information about OCIDs, see [Resource Identifiers](../../../#General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the DRG, which is simply a friendly name or
        description. It does not have to be unique, and it's unchangeable.
      operationId: CreateDrg
      parameters:
      - description: Request object for creating a DRG.
        in: body
        name: CreateDrgRequest
        required: true
        schema:
          $ref: '#/definitions/CreateDrgRequest'
      - $ref: '#/parameters/IdempotencyTokenHeader'
      responses:
        200:
          description: The DRG was created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Drg'
        default:
          $ref: '#/responses/Error'
      summary: CreateDrg
      tags:
      - vcnService
  /drgs/{drgId}:
    delete:
      description: |
        Deletes the specified DRG. The DRG must not be attached to a VCN or be connected to your on-premise
        network. Also, there must not be a route table that lists the DRG as a target. This is an asynchronous
        operation; the DRG's state will switch to TERMINATING temporarily until the DRG is completely removed.
      operationId: DeleteDrg
      parameters:
      - $ref: '#/parameters/DrgIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The DRG is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
        default:
          $ref: '#/responses/Error'
      summary: DeleteDrg
      tags:
      - vcnService
    get:
      description: Gets the specified DRG's information.
      operationId: GetDrg
      parameters:
      - $ref: '#/parameters/DrgIdPathParam'
      responses:
        200:
          description: The DRG was retrieved.
          schema:
            $ref: '#/definitions/Drg'
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
        default:
          $ref: '#/responses/Error'
      summary: GetDrg
      tags:
      - vcnService
  /images/:
    get:
      description: Gets a list of customer-created boot disk images for the specified compartment.
      operationId: ListImages
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/OperatingSystemQueryParam'
      - $ref: '#/parameters/OperatingSystemVersionQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: A list of `Image` objects.
          headers:
            opc-next-page:
              description: |
                For paginating a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/Image'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListImages
      tags:
      - compute
    post:
      description: |
        Creates a boot disk image for the specified instance. For more information about images, see
        [Managing Custom Images](../../../#Compute/Tasks/managingcustomimages.htm).

        You must provide the OCID of the compartment containing the instance you want to use as the basis for the image.
        Consult an Oracle Bare Metal Cloud Administrator in your organization if you're not sure which compartment to use.

        You must specify a *display name* for the image, which is simply a friendly name or description.
        It does not have to be unique, and it is changeable. See [UpdateImage](#updateImage).

        **Note:** Duplicate image names can cause problems when launching instances. If you save multiple images with the
        same display name, a LaunchInstance call using the duplicated name to identify the image will fail. You can specify the image
        OCID to avoid name collisions.

        You must provide the OCID of the instance you want to use as the basis for the image.
      operationId: SnapshotInstance
      parameters:
        - $ref: '#/parameters/IdempotencyTokenHeader'
        - name: SnapshotInstanceRequest
          description: Image creation request object.
          required: true
          in: body
          schema:
            $ref: '#/definitions/SnapshotInstanceRequest'
      responses:
        200:
          description: The request was successfully received and an image is being created.
          schema:
            $ref: '#/definitions/Image'
          headers:
            etag:
              type: string
              description: For optimistic concurrency control. See `if-match`.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
        default:
          $ref: '#/responses/Error'
      summary: SnapshotInstance
      tags:
        - compute
  /images/{imageId}:
    get:
      description: Gets the specified image.
      operationId: GetImage
      parameters:
        - $ref: '#/parameters/ImageIdPathParam'
      responses:
        200:
          description: The image was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Image'
        default:
          $ref: '#/responses/Error'
      summary: GetImage
      tags:
        - compute
    put:
      description: Updates the name of the image.
      operationId: UpdateImage
      parameters:
        - $ref: '#/parameters/ImageIdPathParam'
        - $ref: '#/parameters/IdempotencyTokenHeader'
        - $ref: '#/parameters/IfMatchHeader'
        - description: Updates the image display name field.
          in: body
          name: UpdateImageRequest
          required: true
          schema:
            $ref: '#/definitions/UpdateImageRequest'
      responses:
        200:
          description: The image name was successfully updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Image'
        default:
          $ref: '#/responses/Error'
      summary: UpdateImage
      tags:
        - compute
    delete:
      description: Deletes an image.
      operationId: DeleteImage
      parameters:
        - $ref: '#/parameters/ImageIdPathParam'
        - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The request was accepted by the server
          headers:
            opc-request-id:
              description: Request identifier
              type: string
        default:
          $ref: '#/responses/Error'
      summary: DeleteImage
      tags:
        - compute
  /instanceConsoleHistories/:
    get:
      description: Lists all the console history metadata for the specified compartment
        or instance.
      operationId: ListConsoleHistories
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/InstanceIdQueryParam'
      responses:
        200:
          description: Histories and their metadata
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            items:
              $ref: '#/definitions/ConsoleHistoryMetadata'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListConsoleHistories
      tags:
      - compute
    post:
      description: |
        Captures the most recent serial console data (up to a megabyte) for the
        specified instance. The data includes configuration messages that occur when the
        instance boots, such as kernel and BIOS messages, and is useful for checking the
        status of the instance or diagnosing problems.  The console data is minimally
        formatted ASCII text.

        The `CaptureConsoleHistory` operation works with the other console history operations
        as described below.

        1. Use `CaptureConsoleHistory` to request the capture of up to a megabyte of the
        most recent console history. This call returns a `ConsoleHistoryMetadata`
        object. The object will have a state of `requested`.
        2. Wait for the capture operation to succeed by polling `GetConsoleHistory` with
        the identifier of the console history metadata. The state of the
        `ConsoleHistoryMetadata` object will go from `requested` to `getting-history` and
        then `succeeded` (or `failed`).
        3. Use `ShowConsoleHistoryData` to get the actual console history data (not the
        metadata).
        4. Optionally, use `DeleteConsoleHistory` to delete the console history metadata
        and the console history data.
      operationId: CaptureConsoleHistory
      parameters:
      - $ref: '#/parameters/IdempotencyTokenHeader'
      - description: Console history request
        in: body
        name: CaptureConsoleHistoryRequest
        required: true
        schema:
          $ref: '#/definitions/CaptureConsoleHistoryRequest'
      responses:
        200:
          description: The request was successfully received and the console history
            is being captured.
          headers:
            etag:
              description: Entity tag
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/ConsoleHistoryMetadata'
        default:
          $ref: '#/responses/Error'
      summary: CaptureConsoleHistory
      tags:
      - compute
  /instanceConsoleHistories/{instanceConsoleHistoryId}:
    delete:
      description: Deletes the specified console history metadata and the console
        history data.
      operationId: DeleteConsoleHistory
      parameters:
      - $ref: '#/parameters/InstanceConsoleHistoryIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The request was accepted by the server
          headers:
            opc-request-id:
              description: Request identifier
              type: string
        default:
          $ref: '#/responses/Error'
      summary: DeleteConsoleHistory
      tags:
      - compute
    get:
      description: |
        Shows the metadata for the specified console history.
        See [CaptureConsoleHistory] (#captureConsoleHistory)
        for details about using the console history operations.
      operationId: GetConsoleHistory
      parameters:
      - $ref: '#/parameters/InstanceConsoleHistoryIdPathParam'
      responses:
        200:
          description: Console history metadata
          headers:
            etag:
              description: Entity tag
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/ConsoleHistoryMetadata'
        default:
          $ref: '#/responses/Error'
      summary: GetConsoleHistory
      tags:
      - compute
  /instanceConsoleHistories/{instanceConsoleHistoryId}/data:
    get:
      description: |
        Gets the actual console history data (not the metadata).
        See [CaptureConsoleHistory] (#captureConsoleHistory)
        for details about using the console history operations.
      operationId: ShowConsoleHistoryData
      parameters:
      - $ref: '#/parameters/InstanceConsoleHistoryIdPathParam'
      - description: Offset of snapshot data to retrieve
        format: int32
        in: query
        minimum: 0
        name: offset
        type: integer
      - description: Length of snapshot data to retrieve
        format: int32
        in: query
        minimum: 10240
        name: length
        type: integer
      responses:
        200:
          description: Console history data
          headers:
            opc-bytes-remaining:
              description: The number of bytes remaining in the snapshot
              format: int32
              type: integer
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            type: string
        default:
          $ref: '#/responses/Error'
      summary: ShowConsoleHistoryData
      tags:
      - compute
  /instances/:
    get:
      description: |
        Gets a list of all the instances in the specified compartment and the specified Availability Domain.
        You can limit the list by specifying an instance name (the list will include all the identically-named
        instances in the compartment).
      operationId: ListInstances
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/DisplayNameQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      produces:
      - application/json
      - application/x-json-stream
      responses:
        200:
          description: List of instances
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            items:
              $ref: '#/definitions/Instance'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListInstances
      tags:
      - compute
    post:
      description: |
        Creates a new instance in the specified compartment and the specified Availability Domain.

        For information about access control and compartments, see
        [Overview of the Identity Service](../../../#Identity/Concepts/overview.htm).

        For information about Availability Domains, see
        [Regions and Availability Domains](../../../#General/Concepts/regions.htm).
        To get a list of Availablity Domains, use the `ListAvailabilityDomains` operation
        in the Identity Service API.

        All Oracle Bare Metal IaaS resources, including instances, get an Oracle-assigned,
        unique ID called an Oracle Cloud Identifier (OCID).
        When you create a resource, you can find its OCID in the response. You can
        also retrieve a resource's OCID by using a List API operation
        on that resource type, or by viewing the resource in the Console.

        When you launch an instance, it is automatically attached to a Virtual
        Network Interface Card (VNIC) and given both a public and private IP address.
        To get both addresses, use the [ListVnicAttachments](#listVnicAttachments)
        operation to get the VNIC ID for the instance, and then call
        [GetVnic](#getVnic) with the VNIC ID.
      operationId: LaunchInstance
      parameters:
      - $ref: '#/parameters/IdempotencyTokenHeader'
      - $ref: '#/parameters/OpcHostSerialQueryParam'
      - $ref: '#/parameters/OpcPoolNameQueryParam'
      - $ref: '#/parameters/OpcVnicIdQueryParam'
      - description: Instance request
        in: body
        name: LaunchInstanceRequest
        required: true
        schema:
          $ref: '#/definitions/LaunchInstanceRequest'
      responses:
        200:
          description: The request was successfully received, and the instance is
            being launched.
          headers:
            etag:
              description: Entity tag
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/Instance'
        default:
          $ref: '#/responses/Error'
      summary: LaunchInstance
      tags:
      - compute
  /instances/{instanceId}:
    delete:
      description: |
        Terminates the specified instance. Any attached VNICs and volumes are automatically detached
        when the instance terminates.
      operationId: TerminateInstance
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The request was accepted by the server
          headers:
            opc-request-id:
              description: Request identifier
              type: string
        default:
          $ref: '#/responses/Error'
      summary: TerminateInstance
      tags:
      - compute
    get:
      description: Gets information about the specified instance.
      operationId: GetInstance
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      responses:
        200:
          description: The instance
          headers:
            etag:
              description: Entity tag
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/Instance'
        default:
          $ref: '#/responses/Error'
      summary: GetInstance
      tags:
      - compute
    post:
      description: |
        Performs an action, such as one of the power actions (start, stop, or reset),
        on the specified instance.
      operationId: InstanceAction
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      - $ref: '#/parameters/InstanceActionQueryParam'
      - $ref: '#/parameters/IdempotencyTokenHeader'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The request was successfully received and the action is being
            performed
          headers:
            etag:
              description: Entity tag
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/Instance'
        default:
          $ref: '#/responses/Error'
      summary: InstanceAction
      tags:
      - compute
    put:
      description: Updates the name of the specified instance. The OCID of the instance
        remains the same.
      operationId: UpdateInstance
      parameters:
      - $ref: '#/parameters/InstanceIdPathParam'
      - $ref: '#/parameters/IdempotencyTokenHeader'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Update instance fields
        in: body
        name: UpdateInstanceRequest
        required: true
        schema:
          $ref: '#/definitions/UpdateInstanceRequest'
      responses:
        200:
          description: Instance updated
          headers:
            etag:
              description: Entity tag
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/Instance'
        default:
          $ref: '#/responses/Error'
      summary: UpdateInstance
      tags:
      - compute
  /internetGateways:
    get:
      description: |
        Gets a list of the Internet Gateways in the specified VCN and the specified compartment.
      operationId: ListInternetGateways
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/VcnIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: A page of `InternetGateway` objects.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/InternetGateway'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListInternetGateways
      tags:
      - vcnService
    post:
      description: |
        Creates a new Internet Gateway for the specified VCN. You can think of an Internet Gateway as a router
        that connects the edge of the VCN with the Internet. For an example scenario that uses an Internet Gateway,
        see [Typical Virtual Cloud Network Scenarios](../../../#Network/Concepts/overview.htm#Typical_Cloud_Network_Scenarios)
        and [Managing Internet Gateways](../../../#Network/Tasks/managingIGs.htm).

        For the purposes of access control, you must provide the OCID of the compartment where you want the Internet
        Gateway to reside. Notice that the Internet Gateway doesn't have to be in the same compartment as the VCN or
        other Virtual Network Service components. If you're not sure which compartment to use, put the Internet
        Gateway in the same compartment with the VCN. For more information about compartments and access control, see
        [Overview of the Identity Service](../../../#Identity/Concepts/overview.htm). For information about OCIDs, see
        [Resource Identifiers](../../../#General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the Internet Gateway, which is simply a friendly name or
        description. It does not have to be unique, and it's unchangeable.

        For traffic to flow between a subnet and an Internet Gateway, you must create a route rule accordingly in
        the subnet's route table (e.g., 0.0.0.0/0 > Internet Gateway). See [UpdateRouteTable](#updateRouteTable).

        You must specify whether the Internet Gateway is enabled when you create it. If it's disabled, that means no
        traffic will flow to/from the Internet even if there's a route rule that enables that traffic. You can later
        use [UpdateInternetGateway](#updateInternetGateway) to easily disable/enable the gateway without changing the
        route rule.
      operationId: CreateInternetGateway
      parameters:
      - $ref: '#/parameters/IdempotencyTokenHeader'
      - description: Request object for creating a new Internet Gateway.
        in: body
        name: CreateInternetGatewayRequest
        required: true
        schema:
          $ref: '#/definitions/CreateInternetGatewayRequest'
      responses:
        200:
          description: The Internet Gateway was created.
          schema:
            $ref: '#/definitions/InternetGateway'
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
        default:
          $ref: '#/responses/Error'

      summary: CreateInternetGateway
      tags:
      - vcnService
  /internetGateways/{igId}:
    delete:
      description: |
        Deletes the specified Internet Gateway. The Internet Gateway does not have to be disabled, but
        there must not be a route table that lists it as a target.

        This is an asynchronous operation; the gateway's state will switch to TERMINATING temporarily
        until the gateway is completely removed.
      operationId: DeleteInternetGateway
      parameters:
      - $ref: '#/parameters/InternetGatewayIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The Internet Gateway is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
        default:
          $ref: '#/responses/Error'
      summary: DeleteInternetGateway
      tags:
      - vcnService
    get:
      description: Gets the specified Internet Gateway's information.
      operationId: GetInternetGateway
      parameters:
      - $ref: '#/parameters/InternetGatewayIdPathParam'
      responses:
        200:
          description: The Internet Gateway was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/InternetGateway'
        default:
          $ref: '#/responses/Error'
      summary: GetInternetGateway
      tags:
      - vcnService
    put:
      description: |
        Disables/enables the Internet Gateway.

        If the gateway is disabled, that means no traffic will flow to/from the Internet even if there's
        a route rule that enables that traffic.
      operationId: UpdateInternetGateway
      parameters:
      - $ref: '#/parameters/InternetGatewayIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Request object for updating the Internet Gateway.
        in: body
        name: UpdateInternetGatewayRequest
        required: true
        schema:
          $ref: '#/definitions/UpdateInternetGatewayRequest'
      responses:
        200:
          description: The Internet Gateway was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/InternetGateway'
        default:
          $ref: '#/responses/Error'
      summary: UpdateInternetGateway
      tags:
      - vcnService
  /ipsecConnections:
    get:
      description: |
        Gets a list of the IPsec connections for the specified compartment. You can optionally filter the
        results by DRG or CPE.
      operationId: ListIPSecConnections
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/DrgIdOptionalQueryParam'
      - $ref: '#/parameters/CpeIdOptionalQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: Page of `IPSecConnection` objects.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/IPSecConnection'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListIPSecConnections
      tags:
      - vcnService
    post:
      description: |
        Creates a new IPSec connection between the specified DRG and CPE. This connection consists of two IPsec
        tunnels. Creating this connection is one of the steps required when setting up a VPN. For more
        information, see
        [Typical Virtual Cloud Network Scenarios](../../../#Network/Concepts/overview.htm#Typical_Cloud_Network_Scenarios)
        and [Managing IPsec Connections](../../../#Network/Tasks/managingIPsec.htm).

        In the request, you must include at least one static route to the CPE object (you're allowed a maximum
        of 10). For example: 10.0.8.0/16.

        For the purposes of access control, you must provide the OCID of the compartment where you want the
        IPsec connection to reside. Notice that the IPsec connection doesn't have to be in the same compartment
        as the DRG, CPE, or other Virtual Network Service components. If you're not sure which compartment to
        use, put the IPSec connection in the same compartment as the CPE. For more information about
        compartments and access control, see
        [Overview of the Identity Service](../../../#Identity/Concepts/overview.htm).
        For information about OCIDs, see [Resource Identifiers](../../../#General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the IPSec connection, which is simply a friendly
        name or description. It does not have to be unique, and it is unchangeable.

        After creating the IPsec connection, you need to configure your on-premise router
        with tunnel-specific information returned by
        [GetIPSecConnectionDeviceConfig](#getIPSecConnectionDeviceConfig). For each tunnel, that operation gives
        you the IP address of Oracle's VPN headend and the shared secret (i.e., the pre-shared key). For more
        information, see [Configuring Your On-Premise Router](../../../#Network/Tasks/configuringCPE.htm).

        To get the status of the tunnels (whether they're up or down), use
        [GetIPSecConnectionDeviceStatus](#getIPSecConnectionDeviceStatus).
      operationId: CreateIPSecConnection
      parameters:
      - description: Request object for creating an `IPSecConnection`.
        in: body
        name: CreateIPSecConnectionRequest
        required: true
        schema:
          $ref: '#/definitions/CreateIPSecConnectionRequest'
      - $ref: '#/parameters/IdempotencyTokenHeader'
      responses:
        200:
          description: The `IPSecConnection` was created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/IPSecConnection'
        default:
          $ref: '#/responses/Error'
      summary: CreateIPSecConnection
      tags:
      - vcnService
  /ipsecConnections/{ipscId}:
    delete:
      description: |
        Deletes the specified IPsec connection. If your goal is to disable the VPN between your VCN and
        on-premise network, it's easiest to simply detach the DRG but keep all the VPN components intact.
        If you were to delete all the components and then later need to create a VPN again, you would
        need to configure your on-premise router again with the new information returned from
        [CreateIPSecConnection](#createIPSecConnection).

        This is an asynchronous operation; the connection's state will switch to TERMINATING temporarily
        until the connection is completely removed.
      operationId: DeleteIPSecConnection
      parameters:
      - $ref: '#/parameters/IPSecConnectionIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The request has been accepted
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
        default:
          $ref: '#/responses/Error'
      summary: DeleteIPSecConnection
      tags:
      - vcnService
    get:
      description: |
        Gets the specified IPsec connection's basic information, including the static routes for the
        on-premise router. If you want the status of the connection (whether it's up or down), use
        [GetIPSecConnectionDeviceStatus](#getIPSecConnectionDeviceStatus).
      operationId: GetIPSecConnection
      parameters:
      - $ref: '#/parameters/IPSecConnectionIdPathParam'
      responses:
        200:
          description: The `IPSecConnection` was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/IPSecConnection'
        default:
          $ref: '#/responses/Error'
      summary: GetIPSecConnection
      tags:
      - vcnService
  /ipsecConnections/{ipscId}/deviceConfig:
    get:
      description: |
        Gets the configuration information for the specified IPsec connection. For each tunnel, the
        response includes the IP address of Oracle's VPN headend and the shared secret.
      operationId: GetIPSecConnectionDeviceConfig
      parameters:
      - $ref: '#/parameters/IPSecConnectionIdPathParam'
      responses:
        200:
          description: The configuration information was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/IPSecConnectionDeviceConfig'
        default:
          $ref: '#/responses/Error'
      summary: GetIPSecConnectionDeviceConfig
      tags:
      - vcnService
  /ipsecConnections/{ipscId}/deviceStatus:
    get:
      description: Gets the status of the specified IPsec connection (whether it's
        up or down).
      operationId: GetIPSecConnectionDeviceStatus
      parameters:
      - $ref: '#/parameters/IPSecConnectionIdPathParam'
      responses:
        200:
          description: The status was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/IPSecConnectionDeviceStatus'
        default:
          $ref: '#/responses/Error'
      summary: GetIPSecConnectionDeviceStatus
      tags:
      - vcnService
  /routeTables:
    get:
      description: |
        Gets a list of the route tables in the specified VCN and specified compartment. The response
        includes the default route table that automatically comes with each VCN, plus any route tables
        you've created.
      operationId: ListRouteTables
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/VcnIdQueryParam'
      responses:
        200:
          description: A page of `RouteTable` objects.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/RouteTable'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListRouteTables
      tags:
      - vcnService
    post:
      description: |
        Creates a new route table for the specified VCN. In the request you must also include at least one route
        rule for the new route table (10 route rules maximum per table). For general information about route
        tables in your VCN, see [Managing Route Tables](../../../#Network/Tasks/managingroutetables.htm).

        For the purposes of access control, you must provide the OCID of the compartment where you want the route
        table to reside. Notice that the route table doesn't have to be in the same compartment as the VCN, subnets,
        or other Virtual Network Service components. If you're not sure which compartment to use, put the route
        table in the same compartment as the VCN. For more information about compartments and access control, see
        [Overview of the Identity Service](../../../#Identity/Concepts/overview.htm). For information about OCIDs, see
        [Resource Identifiers](../../../#General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the route table, which is simply a friendly name or description.
        It does not have to be unique, and it's unchangeable.
      operationId: CreateRouteTable
      parameters:
      - description: Request object for creating a new route table.
        in: body
        name: CreateRouteTableRequest
        required: true
        schema:
          $ref: '#/definitions/CreateRouteTableRequest'
      - $ref: '#/parameters/IdempotencyTokenHeader'
      responses:
        200:
          description: The route table was created.
          schema:
            $ref: '#/definitions/RouteTable'
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
        default:
          $ref: '#/responses/Error'
      summary: CreateRouteTable
      tags:
      - vcnService
  /routeTables/{rtId}:
    delete:
      description: |
        Deletes the specified route table, but only if it's not in use by a subnet. You can't delete a
        VCN's default route table.

        This is an asynchronous operation; the route table's state will switch to TERMINATING temporarily
        until the route table is completely removed.
      operationId: DeleteRouteTable
      parameters:
      - $ref: '#/parameters/RouteTableIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The route table is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
        default:
          $ref: '#/responses/Error'
      summary: DeleteRouteTable
      tags:
      - vcnService
    get:
      description: Gets the specified route table's information.
      operationId: GetRouteTable
      parameters:
      - $ref: '#/parameters/RouteTableIdPathParam'
      responses:
        200:
          description: The route table was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/RouteTable'
        default:
          $ref: '#/responses/Error'
      summary: GetRouteTable
      tags:
      - vcnService
    put:
      description: |
        Updates the specified route table's rules.

        When updating the route table, the new `RouteRules` object you provide replaces the entire
        existing set of rules.
      operationId: UpdateRouteTable
      parameters:
      - $ref: '#/parameters/RouteTableIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Request object for updating a route table.
        in: body
        name: UpdateRouteTableRequest
        required: true
        schema:
          $ref: '#/definitions/UpdateRouteTableRequest'
      responses:
        200:
          description: The route table was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/RouteTable'
        default:
          $ref: '#/responses/Error'
      summary: UpdateRouteTable
      tags:
      - vcnService
  /shapes:
    get:
      description: |
        Lists all shapes that can be used to launch an instance within this compartment. Can filter by
        compatibility with a specific image.
      operationId: ListShapes
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/ImageIdQueryParam'
      responses:
        200:
          description: Shapes
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            items:
              $ref: '#/definitions/Shape'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListShapes
      tags:
      - compute
  /securityLists:
    get:
      description: |
        Gets a list of the security lists in the specified VCN and compartment.
      operationId: ListSecurityLists
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/VcnIdQueryParam'
      responses:
        200:
          description: A page of `SecurityList` objects.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/SecurityList'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListSecurityLists
      tags:
      - vcnService
    post:
      description: |
        Creates a new security list for the specified VCN. A security list provides a stateful firewall
        for the instance. Security lists are configured at the subnet level, but the rules are applied
        to the ingress and egress traffic for the individual instances in the subnet. For more information
        about security lists, see [Security Lists](../../../#Network/Concepts/permissions.htm#Security_Lists).

        **Important:** Oracle Bare Metal Cloud images that run Oracle Linux automatically include iptables rules.
        If there are issues with some type of access to an instance, make sure both the security lists associated
        with the instance's subnet and the instance's iptables rules are set correctly. For more information,
        see [Ways to Secure Your Network](../../../#Network/Concepts/permissions.htm#Ways_to_Secure_Your_Network).

        For the purposes of access control, you must provide the OCID of the compartment where you want the security
        list to reside. Notice that the security list doesn't have to be in the same compartment as the VCN, subnets,
        or other Virtual Network Service components. If you're not sure which compartment to use, put the security
        list in the same compartment as the VCN. For more information about compartments and access control, see
        [Overview of the Identity Service](../../../#Identity/Concepts/overview.htm). For information about OCIDs, see
        [Resource Identifiers](../../../#General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the security list, which is simply a friendly name or description.
        It does not have to be unique, and it's unchangeable.
      operationId: CreateSecurityList
      parameters:
      - description: Details regarding the security list to create.
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/CreateSecurityListRequest'
      - $ref: '#/parameters/IdempotencyTokenHeader'
      responses:
        200:
          description: The security list has been created.
          schema:
            $ref: '#/definitions/SecurityList'
          headers:
            etag:
              type: string
              description: For optimistic concurrency control. See `if-match`.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
        default:
          $ref: '#/responses/Error'
      summary: CreateSecurityList
      tags:
      - vcnService
  /securityLists/{securityListId}:
    delete:
      description: |
        Deletes the specified security list, but only if it's not in use.

        This is an asynchronous operation; the security list's state will switch to TERMINATING temporarily
        until the security list is completely removed.
      operationId: DeleteSecurityList
      parameters:
      - $ref: '#/parameters/SecurityListIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The security list is being deleted.
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
        default:
          $ref: '#/responses/Error'
      summary: DeleteSecurityList
      tags:
      - vcnService
    get:
      description: Gets the specified security list's information.
      operationId: GetSecurityList
      parameters:
      - $ref: '#/parameters/SecurityListIdPathParam'
      responses:
        200:
          description: The security list was retrieved.
          headers:
            etag:
              type: string
              description: For optimistic concurrency control. See `if-match`.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
          schema:
            $ref: '#/definitions/SecurityList'
        default:
          $ref: '#/responses/Error'
      summary: GetSecurityList
      tags:
      - vcnService
    put:
      description: |
        Updates the specified security list's rules. The entire set of existing rules is replaced by
        the new set of rules.
      operationId: UpdateSecurityList
      parameters:
      - $ref: '#/parameters/SecurityListIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Updated details for the security list.
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/UpdateSecurityListRequest'
      responses:
        200:
          description: The security list was updated.
          schema:
            $ref: '#/definitions/SecurityList'
          headers:
            etag:
              type: string
              description: For optimistic concurrency control. See `if-match`.
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
        default:
          $ref: '#/responses/Error'
      summary: UpdateSecurityList
      tags:
      - vcnService
  /subnets:
    get:
      description: Gets a list of the subnets in the specified VCN and the specified
        compartment.
      operationId: ListSubnets
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/VcnIdQueryParam'
      responses:
        200:
          description: A page of `Subnet` objects.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/Subnet'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListSubnets
      tags:
      - vcnService
    post:
      description: |
        Creates a new subnet in the specified VCN. A subnet is a logical subdivision of a VCN. Each subnet exists
        in a single Availability Domain and consists of a contiguous range of IP addresses that do not overlap with
        other subnets in the VCN. Example: 172.16.1.0/24. You can't change the size of the subnet after creation,
        so it's important to think about the size of subnets you need before creating them.
        You can have up to 10 subnets in your VCN. For conceptual information about VCNs, subnets, and other
        Virtual Network Service components, see [Overview of your Cloud Network](../../../#Network/Concepts/overview.htm)
        and [Managing Subnets](../../../#Network/Tasks/managingsubnets.htm).

        For the purposes of access control, you must provide the OCID of the compartment where you want the subnet
        to reside. Notice that the subnet doesn't have to be in the same compartment as the VCN, route tables, or
        other Virtual Network Service components. If you're not sure which compartment to use, put the subnet in
        the same compartment as the VCN. For more information about compartments and access control, see
        [Overview of the Identity Service](../../../#Identity/Concepts/overview.htm). For information about OCIDs,
        see [Resource Identifiers](../../../#General/Concepts/identifiers.htm).

        You may optionally specify a route table for the subnet to use. If you don't, the subnet will use the
        VCN's default route table. For more information about route tables, see
        [Managing Route Tables](../../../#Network/Tasks/managingroutetables.htm).

        You may optionally specify a *display name* for the subnet, which is simply a friendly name or description.
        It does not have to be unique, and it's unchangeable.
      operationId: CreateSubnet
      parameters:
      - description: Request object for creating a subnet.
        in: body
        name: CreateSubnetRequest
        required: true
        schema:
          $ref: '#/definitions/CreateSubnetRequest'
      - $ref: '#/parameters/IdempotencyTokenHeader'
      responses:
        200:
          description: The subnet was created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Subnet'
        default:
          description: The request failed.
          schema:
            $ref: '#/definitions/Error'
      summary: CreateSubnet
      tags:
      - vcnService
  /subnets/{subnetId}:
    delete:
      description: |
        Deletes the specified subnet, but only if there are no instances in the subnet. This is an asynchronous
        operation; the subnet's state will switch to TERMINATING temporarily. When the subnet is deleted,
        its state will switch to TERMINATED. If there are any instances in the subnet, the subnet's state
        will instead switch back to AVAILABLE.
      operationId: DeleteSubnet
      parameters:
      - $ref: '#/parameters/SubnetIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The subnet is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
        default:
          $ref: '#/responses/Error'
      summary: DeleteSubnet
      tags:
      - vcnService
    get:
      description: Gets the specified subnet's information.
      operationId: GetSubnet
      parameters:
      - $ref: '#/parameters/SubnetIdPathParam'
      responses:
        200:
          description: The subnet was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Subnet'
        default:
          $ref: '#/responses/Error'
      summary: GetSubnet
      tags:
      - vcnService
  /vcns:
    get:
      description: Gets a list of the Virtual Cloud Networks (VCNs) in the specified
        compartment.
      operationId: ListVcns
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: A page of `Vcn` objects.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/Vcn'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListVcns
      tags:
      - vcnService
    post:
      description: |
        Creates a new Virtual Cloud Network (VCN). For conceptual information about VCNs and other Virtual Network Service
        components, see [Overview of your Cloud Network](../../../#Network/Concepts/overview.htm) and
        [Managing Virtual Cloud Networks (VCNs)](../../../#Network/Tasks/managingVCNs.htm).

        For the VCN you must specify a single, contiguous IPv4 CIDR block in the private IP address ranges specified in
        [RFC 1918](https://tools.ietf.org/html/rfc1918) (10.0.0.0/8, 172.16/12, and 192.168/16). Example: 172.16.0.0/16.
        The CIDR block can range from /16 to /30, and it must not overlap with your on-premise network. You can't
        change the size of the VCN after creation.

        For the purposes of access control, you must provide the OCID of the compartment where you want the VCN to reside.
        Consult an Oracle Bare Metal IaaS Administrator in your organization if you're not sure which compartment to use.
        Notice that the VCN doesn't have to be in the same compartment as the subnets or other Virtual Network Service
        components. For more information about compartments and access control, see
        [Overview of the Identity Service](../../../#Identity/Concepts/overview.htm). For information about OCIDs, see
        [Resource Identifiers](../../../#General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the VCN, which is simply a friendly name or description.
        It does not have to be unique, and it is unchangeable.

        The VCN automatically comes with a default route table; its OCID is returned in the response.

        The VCN and subnets you create are not accessible until you attach an Internet Gateway or set up a VPN.
        For more information, see
        [Typical Virtual Cloud Network Scenarios](../../../#Network/Concepts/overview.htm#Typical_Cloud_Network_Scenarios).

        For information about endpoints and signing API requests, see
        [Making API Requests](../../../#API/Concepts/usingapi.htm).
      operationId: CreateVcn
      parameters:
      - description: Request object for creating a new VCN.
        in: body
        name: CreateVcnRequest
        required: true
        schema:
          $ref: '#/definitions/CreateVcnRequest'
      - $ref: '#/parameters/IdempotencyTokenHeader'
      responses:
        200:
          description: The VCN was created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Vcn'
        default:
          $ref: '#/responses/Error'
      summary: CreateVcn
      tags:
      - vcnService
  /vcns/{vcnId}:
    delete:
      description: |
        Deletes the specified VCN. The VCN must be empty and have no attached gateways. This is an asynchronous
        operation; the VCN's state will switch to TERMINATING temporarily until the VCN is completely removed.
      operationId: DeleteVcn
      parameters:
      - $ref: '#/parameters/VcnIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The VCN is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
        default:
          $ref: '#/responses/Error'
      summary: DeleteVcn
      tags:
      - vcnService
    get:
      description: Gets the specified VCN's information.
      operationId: GetVcn
      parameters:
      - $ref: '#/parameters/VcnIdPathParam'
      responses:
        200:
          description: The VCN was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Vcn'
        default:
          $ref: '#/responses/Error'
      summary: GetVcn
      tags:
      - vcnService
  /vnicAttachments/:
    get:
      description: Gets a list of the VNIC attachments for the specified instance.
      operationId: ListVnicAttachments
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/InstanceIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/VnicIdQueryParam'
      produces:
      - application/json
      - application/x-json-stream
      responses:
        200:
          description: A list of VNIC attachments
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            items:
              $ref: '#/definitions/VnicAttachment'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListVnicAttachments
      tags:
      - compute
  /vnics/{vnicId}:
    get:
      description: |
        Gets the information for the specified Virtual Network Interface Card (VNIC), including the attached
        instance's public and private IP addresses. Each instance automatically has a VNIC attached to it,
        and the VNIC connects the instance to the subnet. You can get the instance's VNIC OCID from the
        Cloud Compute Service's [ListVnicAttachments](#listVnicAttachments) operation.
      operationId: GetVnic
      parameters:
      - $ref: '#/parameters/VnicIdPathParam'
      responses:
        200:
          description: The VNIC was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/Vnic'
        default:
          $ref: '#/responses/Error'
      summary: GetVnic
      tags:
      - vcnADService
  /volumeAttachments/:
    get:
      description: |
        Gets a list of the volume attachments in the specified compartment. You can limit the
        list by specifying an instance OCID, volume OCID, or both.

        Currently, the only supported volume attachment type is [IScsiVolumeAttachment](#IScsiVolumeAttachment).
      operationId: ListVolumeAttachments
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/InstanceIdQueryParam'
      - $ref: '#/parameters/VolumeIdQueryParam'
      produces:
      - application/json
      - application/x-json-stream
      responses:
        200:
          description: A list of volume attachments
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            items:
              $ref: '#/definitions/VolumeAttachment'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListVolumeAttachments
      tags:
      - compute
    post:
      description: Attaches a storage volume to the specified instance.
      operationId: AttachVolume
      parameters:
      - description: Attach volume request
        in: body
        name: AttachVolumeRequest
        required: true
        schema:
          $ref: '#/definitions/AttachVolumeRequest'
      - $ref: '#/parameters/IdempotencyTokenHeader'
      responses:
        200:
          description: The request was successfully received and the volume is being
            attached.
          headers:
            etag:
              description: Entity tag
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/VolumeAttachment'
        default:
          $ref: '#/responses/Error'
      summary: AttachVolume
      tags:
      - compute
  /volumeAttachments/{volumeAttachmentId}:
    delete:
      description: Detaches a storage volume from the specified instance.
      operationId: DetachVolume
      parameters:
      - $ref: '#/parameters/VolumeAttachmentIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The request was accepted by the server
          headers:
            opc-request-id:
              description: Request identifier
              type: string
        default:
          $ref: '#/responses/Error'
      summary: DetachVolume
      tags:
      - compute
    get:
      description: Gets information about the specified volume attachment.
      operationId: GetVolumeAttachment
      parameters:
      - $ref: '#/parameters/VolumeAttachmentIdPathParam'
      responses:
        200:
          description: A volume attachment
          headers:
            etag:
              description: Entity tag
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/VolumeAttachment'
        default:
          $ref: '#/responses/Error'
      summary: GetVolumeAttachment
      tags:
      - compute
  /volumes:
    get:
      description: Gets a list of volumes in the specified compartment and Availability
        Domain.
      operationId: ListVolumes
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: OK
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there might be additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request.
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            items:
              $ref: '#/definitions/Volume'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListVolumes
      tags:
      - blockstorage
    post:
      description: |
        Creates a new 256 GB volume in the specified compartment.
        A volume and instance can be in separate compartments but must be in the same Availability Domain. You can set
        the Availability Domain that the volume will reside in by defining `availabilityDomain`. This setting is permanent.
        You may optionally specify a display name for the volume, which is simply a friendly name or description. This
        does not have to be unique and you can change it with `UpdateVolume`.
      operationId: CreateVolume
      parameters:
      - $ref: '#/parameters/IdempotencyTokenHeader'
      - description: Request to create a new volume.
        in: body
        name: CreateVolumeRequest
        required: true
        schema:
          $ref: '#/definitions/CreateVolumeRequest'
      responses:
        200:
          description: The request was successfully received and the volume is being
            created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/Volume'
        default:
          $ref: '#/responses/Error'
      summary: CreateVolume
      tags:
      - blockstorage
  /volumes/{volumeId}:
    delete:
      description: |
        Deletes the specified volume. The volume can't have an active connection to an instance.
        To disconnect the volume from a connected instance, see
        [Disconnecting From a Volume](../../../Block/Tasks/disconnectingfromavolume.htm).
        **Warning:** All data on the volume will be permanently lost once the volume is deleted.
      operationId: DeleteVolume
      parameters:
      - $ref: '#/parameters/VolumeIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The request was successfully received and the volume is being
            deleted.
          headers:
            opc-request-id:
              description: Request identifier
              type: string
        default:
          $ref: '#/responses/Error'
      summary: DeleteVolume
      tags:
      - blockstorage
    get:
      description: Gets information on the specified volume.
      operationId: GetVolume
      parameters:
      - $ref: '#/parameters/VolumeIdPathParam'
      responses:
        200:
          description: The volume, if it exists.
          headers:
            etag:
              description: Entity tag
              type: string
            opc-request-id:
              description: Request identifier
              type: string
          schema:
            $ref: '#/definitions/Volume'
        default:
          $ref: '#/responses/Error'
      summary: GetVolume
      tags:
      - blockstorage
    put:
      description: Updates the specified volume's display name.
      operationId: UpdateVolume
      parameters:
      - $ref: '#/parameters/VolumeIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Update volume's display name.
        in: body
        name: UpdateVolumeRequest
        required: true
        schema:
          $ref: '#/definitions/UpdateVolumeRequest'
      responses:
        200:
          description: Volume updated.
          headers:
            etag:
              description: Entity tag
              type: string
          schema:
            $ref: '#/definitions/Volume'
        default:
          $ref: '#/responses/Error'
      summary: UpdateVolume
      tags:
      - blockstorage
  /dhcps:
    get:
      description: |
        Gets a list of the sets of DHCP options in the specified VCN and specified compartment.
        The response includes the default set of options that automatically comes with each VCN,
        plus any other sets you've created.
      operationId: ListDhcpOptions
      parameters:
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/VcnIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: A page of `DhcpOptions` objects.
          headers:
            opc-next-page:
              description: |
                For pagination of a list of items. When paging through a list, if this header appears in the response,
                then there are additional items still to get. Include this value as the `page` parameter for the
                subsequent GET request. For information about pagination, see
                [List Pagination](../../../#API/Concepts/usingapi.htm#List_Pagination).
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            items:
              $ref: '#/definitions/DhcpOptions'
            type: array
        default:
          $ref: '#/responses/Error'
      summary: ListDhcpOptions
      tags:
      - vcnService
    post:
      description: |
        Creates a new set of DHCP options for the specified VCN. The only option available to use is
        [DhcpDnsOption](#DhcpDnsOption), which lets you specify how DNS (host name resolution) is
        handled in the subnets in your VCN. For more information, see
        [Managing DHCP Options](../../../#Network/Tasks/managingDHCP.htm).

        For the purposes of access control, you must provide the OCID of the compartment where you want the set of
        DHCP options to reside. Notice that the set of options doesn't have to be in the same compartment as the VCN,
        subnets, or other Virtual Network Service components. If you're not sure which compartment to use, put the set
        of DHCP options in the same compartment as the VCN. For more information about compartments and access control, see
        [Overview of the Identity Service](../../../#Identity/Concepts/overview.htm). For information about OCIDs, see
        [Resource Identifiers](../../../#General/Concepts/identifiers.htm).

        You may optionally specify a *display name* for the set of DHCP options, which is simply a friendly name or description.
        It does not have to be unique, and it's unchangeable.
      operationId: CreateDhcpOptions
      parameters:
      - description: Request object for creating a new set of DHCP options.
        in: body
        name: CreateDhcpRequest
        required: true
        schema:
          $ref: '#/definitions/CreateDhcpRequest'
      - $ref: '#/parameters/IdempotencyTokenHeader'
      responses:
        200:
          description: The set of DHCP options has been created.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/DhcpOptions'
        default:
          $ref: '#/responses/Error'
      summary: CreateDhcpOptions
      tags:
      - vcnService
  /dhcps/{dhcpId}:
    delete:
      description: |
        Deletes the specified set of DHCP options, but only if it's not in use by a subnet. You can't delete a
        VCN's default set of DHCP options.

        This is an asynchronous operation; the state of the set of options will switch to TERMINATING temporarily
        until the set is completely removed.
      operationId: DeleteDhcpOptions
      parameters:
      - $ref: '#/parameters/DhcpIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        200:
          description: The set of DHCP options is being deleted.
          headers:
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
        default:
          $ref: '#/responses/Error'
      summary: DeleteDhcpOptions
      tags:
      - vcnService
    get:
      description: Gets the specified set of DHCP options.
      operationId: GetDhcpOptions
      parameters:
      - $ref: '#/parameters/DhcpIdPathParam'
      responses:
        200:
          description: The set of DHCP options was retrieved.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/DhcpOptions'
        default:
          $ref: '#/responses/Error'
      summary: GetDhcpOptions
      tags:
      - vcnService
    put:
      description: |
        Updates the specified set of DHCP options. When updating the set, the new `DhcpOptions` object
        you provide replaces the entire existing set of options.
      operationId: UpdateDhcpOptions
      parameters:
      - $ref: '#/parameters/DhcpIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Request object for updating a set of DHCP options.
        in: body
        name: UpdateDhcpRequest
        required: true
        schema:
          $ref: '#/definitions/UpdateDhcpRequest'
      responses:
        200:
          description: The set of DHCP options was updated.
          headers:
            etag:
              description: For optimistic concurrency control. See `if-match`.
              type: string
            opc-request-id:
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
                particular request, please provide the request ID.
              type: string
          schema:
            $ref: '#/definitions/DhcpOptions'
        default:
          $ref: '#/responses/Error'
      summary: UpdateDhcpOptions
      tags:
      - vcnService
definitions:
  AttachIScsiVolumeRequest:
    allOf:
    - $ref: '#/definitions/AttachVolumeRequest'
    - discriminator: iscsi
      properties:
        useChap:
          description: Whether to use CHAP authentication for the volume attachment. Defaults to false.
          type: boolean
  AttachVolumeRequest:
    discriminator: type
    properties:
      compartmentId:
        description: The OCID of the compartment.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance.
        maxLength: 255
        minLength: 1
        type: string
      type:
        description: The type of volume. The only supported value is "iscsi".
        maxLength: 255
        minLength: 1
        type: string
      volumeId:
        description: The OCID of the volume.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - instanceId
    - volumeId
    - compartmentId
    - type
  CaptureConsoleHistoryRequest:
    properties:
      instanceId:
        description: The OCID of the instance to get the console history from.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - instanceId
  ConsoleHistoryMetadata:
    properties:
      availabilityDomain:
        description: The Availability Domain of an instance.
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: The non-unique, changeable name of an instance.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The console history identifier.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance this console history was fetched from.
        maxLength: 255
        minLength: 1
        type: string
      state:
        description: The current state of the console history.
        enum:
        - REQUESTED
        - GETTING-HISTORY
        - SUCCEEDED
        - FAILED
        type: string
      timeCreated:
        description: The date and time the instance was created.
        format: date-time
        type: string
    required:
    - id
    - compartmentId
    - state
    - availabilityDomain
    - timeCreated
    - instanceId
  Cpe:
    description: |
      A virtual representation of customer-premise equipment(the on-premise router).
    properties:
      compartmentId:
        description: The OCID of the compartment containing the CPE.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The CPE's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      ipAddress:
        description: The public IP address of the on-premise router.
        maxLength: 46
        minLength: 8
        type: string
      timeCreated:
        description: Date and time the CPE was created.
        format: date-time
        type: string
    required:
    - compartmentId
    - id
    - ipAddress
  CreateCpeRequest:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the CPE.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      ipAddress:
        description: The public IP address of the on-premise router.
        maxLength: 46
        minLength: 8
        type: string
    required:
    - compartmentId
    - ipAddress
  CreateDhcpRequest:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the set of DHCP options.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      options:
        description: A set of DHCP options.
        type: array
        items:
          $ref: '#/definitions/DhcpOption'
        uniqueItems: true
      vcnId:
        description: The OCID of the VCN the set of DHCP options belongs to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - options
    - vcnId
  CreateDrgAttachmentRequest:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      drgId:
        description: The OCID of the DRG.
        maxLength: 255
        minLength: 1
        type: string
      vcnId:
        description: The OCID of the VCN.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - drgId
    - vcnId
  CreateDrgRequest:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the DRG.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
  CreateIPSecConnectionRequest:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the IPsec connection.
        maxLength: 255
        minLength: 1
        type: string
      cpeId:
        description: The OCID of the CPE.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      drgId:
        description: The OCID of the DRG.
        maxLength: 255
        minLength: 1
        type: string
      staticRoutes:
        description: Static routes to the CPE.
        items:
          type: string
        maxLength: 10
        minLength: 1
        type: array
        uniqueItems: true
    required:
    - compartmentId
    - drgId
    - cpeId
    - staticRoutes
  CreateInternetGatewayRequest:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the Internet Gateway.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      isEnabled:
        description: Whether the gateway is enabled upon creation.
        type: boolean
      vcnId:
        description: The OCID of the VCN the Internet Gateway is attached to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - vcnId
    - isEnabled
  CreateRouteTableRequest:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the route table.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      routeRules:
        description: The collection of rules used for routing destination IPs to network
          devices.
        items:
          $ref: '#/definitions/RouteRule'
          maximum: 10
          minimum: 0
        type: array
      vcnId:
        description: The OCID of the VCN the route table belongs to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - routeRules
    - vcnId
  CreateSecurityListRequest:
    properties:
      compartmentId:
        description: The OCID of the compartment to contain the security list.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      egressSecurityRules:
        description: Rules for allowing egress IP packets.
        items:
          $ref: "#/definitions/EgressSecurityRule"
          minimum: 1
          maximum: 50
        type: array
      ingressSecurityRules:
        description: Rules for allowing ingress IP packets.
        items:
          $ref: "#/definitions/IngressSecurityRule"
          minimum: 1
          maximum: 50
        type: array
      vcnId:
        description: The OCID of the VCN the security list belongs to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - egressSecurityRules
    - ingressSecurityRules
    - vcnId
  CreateSubnetRequest:
    properties:
      availabilityDomain:
        description: The Availability Domain to contain the subnet.
        maxLength: 255
        minLength: 1
        type: string
      cidrBlock:
        description: The CIDR IP address range of the subnet.
        maxLength: 32
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment to contain the subnet.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      dhcpOptionsId:
        description: |
          The OCID of the set of DHCP options the subnet will use. If you don't
          provide a value, the subnet will use the VCN's default set of DHCP options.
        maxLength: 255
        minLength: 1
        type: string
      routeTableId:
        description: |
          The OCID of the route table to associate with the subnet. If you don't provide,
          a value, the VCN's default route table will be associated with the subnet.
        maxLength: 255
        minLength: 1
        type: string
      securityListIds:
        description: |
          OCIDs for the security lists to associate with the subnet. If you don't
          provide a value, the VCN's default security list will be associated with
          the subnet. Remember that security lists are associated at the subnet
          level, but the rules are applied to the individual VNICs in the subnet.
        items:
          type: string
          maximum: 5
          maxLength: 255
          minimum: 0
          minLength: 1
        type: array
      vcnId:
        description: The OCID of the VCN to contain the subnet.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - availabilityDomain
    - cidrBlock
    - vcnId
  CreateVcnRequest:
    properties:
      cidrBlock:
        description: The CIDR IP address block of the VCN.
        maxLength: 32
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment to contain the VCN.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - cidrBlock
  CreateVolumeRequest:
    properties:
      availabilityDomain:
        description: The Availability Domain of the volume.
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment that contains the volume.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: A user-friendly name for the volume. Does not have to be unique,
          and it's changeable.
        maxLength: 255
        minLength: 1
        type: string
      sizeInMBs:
        description: The size of the volume in MBs.
        format: int64
        type: integer
    required:
      - availabilityDomain
      - compartmentId
  DhcpOptions:
    description: A set of DHCP options.
    properties:
      compartmentId:
        description: The OCID of the compartment containing the set of DHCP options.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: Oracle ID (OCID) for the set of DHCP options.
        maxLength: 255
        minLength: 1
        type: string
      modifiedTime:
        description: |
          Date and time the set of DHCP options was last modified (same as `TimeCreated`
          if not yet modified).
        format: date-time
        type: string
      options:
        description: The collection of individual DHCP options.
        items:
          $ref: '#/definitions/DhcpOption'
        type: array
      state:
        description: The current state of the set of DHCP options.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      timeCreated:
        description: Date and time the set of DHCP options was created.
        format: date-time
        type: string
    required:
    - id
    - compartmentId
    - options
    - state
    - timeCreated
  DhcpOption:
    type: object
    description: |
      A single DHCP option according to [RFC 1533](https://tools.ietf.org/html/rfc1533).
      The only option available to use is [DhcpDnsOption](#DhcpDnsOption).
    discriminator: type
    properties:
      type:
        type: string
    required:
      - type
  DhcpDnsOption:
    type: object
    extends: '#/definitions/DhcpOption'
    description: |
      DHCP option for specifying how DNS (host name resolution) is handled in the VCN.
    allOf:
      - $ref: '#/definitions/DhcpOption'
      - discriminator: DomainNameServer
        properties:
          serverType:
            description: |
               - *VcnLocal:* Reserved for future use.
               - *VcnLocalPlusInternet:* Instances can resolve only internet host
               names (no Internet Gateway is required). The instances still need to use
               their IP addresses to communicate with each other. This is the default
               value in the default set of DHCP options in the VCN.
               - *CustomDnsServer:* Instances use a DNS server of your choice (three maximum).
            type: string
            enum:
            - VcnLocal
            - VcnLocalPlusInternet
            - CustomDnsServer
          customDnsServers:
            description: |
              If you set `serverType` to `CustomDnsServer`, specify the IP address
              of at least one DNS server of your choice (three maximum).
            type: array
            max: 3
            items:
              type: string
        required:
        - serverType
  Drg:
    description: A Dynamic Routing Gateway (DRG).
    properties:
      compartmentId:
        description: The OCID of the compartment containing the DRG.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The DRG's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      state:
        description: The DRG's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      timeCreated:
        description: Date and time the DRG was created.
        format: date-time
        type: string
    required:
    - compartmentId
    - id
    - state
  DrgAttachment:
    description: A link between a DRG and VCN.
    properties:
      compartmentId:
        description: The OCID of the compartment containing the DRG attachment.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      drgId:
        description: The OCID of the DRG.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The DRG attachment's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      state:
        description: The DRG attachment's current state.
        enum:
        - ATTACHING
        - ATTACHED
        - DETACHING
        - DETACHED
        type: string
      timeCreated:
        description: Date and time the DRG attachment was created.
        format: date-time
        type: string
      vcnId:
        description: The OCID of the VCN.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - id
    - compartmentId
    - drgId
    - vcnId
    - state
  EgressSecurityRule:
    description: A rule for allowing egress IP packets.
    properties:
      destination:
        description: |
          The destination CIDR block for the egress rule.
        type: string
      icmpOptions:
        description: |
          Optional and valid only for ICMP. Use to specify a particular ICMP type and code
          as defined in
          [ICMP Parameters] (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
          If you specify ICMP as the protocol but omit this object, then all ICMP types and
          codes are allowed. If you do provide this object, the type is required and the code is optional.
          To enable MTU negotiation for ingress internet traffic, make sure to allow Type 3 ("Destination
          Unreachable") code 4 ("Fragmentation Needed and Don't Fragment was Set"). If you need to specify
          multiple codes for a single type, create a separate security list rule for each.
        $ref: "#/definitions/IcmpOptions"
      protocol:
        description: |
          The transport protocol. Specify either `all` or an IPv4 protocol number as
          defined in
          [Protocol Numbers] (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
          Additional constraints are supported only for ICMP ("1"), TCP ("6"), and UDP ("17").
        type: string
      tcpOptions:
        description: |
          Optional and valid only for TCP. Use to specify particular destination ports for TCP rules.
          If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
        $ref: "#/definitions/TcpOptions"
      udpOptions:
        description: |
          Optional and valid only for UDP. Use to specify particular destination ports for UDP rules.
          If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
        $ref: "#/definitions/UdpOptions"
    required:
    - destination
    - protocol
  Error:
    properties:
      code:
        type: string
      message:
        type: string
    required:
    - code
    - message
  IcmpOptions:
    description: |
      Optional object to specify a particular ICMP type and code. If you specify ICMP as the protocol
      but do not provide this object, then all ICMP types and codes are allowed. If you do provide
      this object, the type is required and the code is optional.
      See [ICMP Parameters] (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml)
      for allowed values. To enable MTU negotiation for ingress internet traffic, make sure to allow
      Type 3 ("Destination Unreachable") code 4 ("Fragmentation Needed and Don't Fragment was Set").
      If you need to specify multiple codes for a single type, create a separate security list rule for each.
    properties:
      code:
        description: The ICMP code (optional).
        maximum: 16
        minimum: 0
        type: integer
      type:
        description: The ICMP type.
        maximum: 254
        minimum: 0
        type: integer
    required:
    - type
  Image:
    description: A boot disk image for launching an instance.
    required:
      - id
      - state
      - timeCreated
      - operatingSystem
      - operatingSystemVersion
      - snapshotAllowed
    properties:
      compartmentId:
        description: |
          The OCID of the compartment containing the instance you want to use as the basis for the image.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        type: string
        maxLength: 255
        minLength: 1
        description: |
          A user-friendly name for the image. It does not have to be unique, and it's changeable.
          You cannot use an Oracle-provided image name as a custom image name.

          Example: `My custom Oracle Linux 7.1 image`

      id:
        description: The OCID of the image.
        maxLength: 255
        minLength: 1
        type: string
      state:
        type: string
        enum:
          - PROVISIONING
          - AVAILABLE
          - DISABLED
          - DELETED
      timeCreated:
        description: |
          The date and time the image was created, in the format defined by RFC3339.

          Example: `2016-07-22T17:43:01.389+0000`

        format: date-time
        type: string
      baseImageId:
        type: string
        maxLength: 255
        minLength: 1
        description: The OCID of the image originally used to launch the instance.
      operatingSystem:
        description: |
          The image's operating system.

          Example: `Oracle Linux`

        type: string
        minLength: 1
        maxLength: 255
      operatingSystemVersion:
        description: |
          The image's operating system version.

          Example: `7.1`

        type: string
        minLength: 1
        maxLength: 255
      snapshotAllowed:
        description: |
          Whether instances launched with this image can be used to create new images. For example, you cannot create an image of an Oracle Database instance.

          Example: `true`

        type: boolean
  ImportImageDetails:
    properties:
      namespace:
        description: Object store namespace
        type: string
      bucket:
        description: Object store bucket
        type: string
      object:
        description: Object store object name
        type: string
      operatingSystem:
        type: string
        minLength: 1
        maxLength: 255
      operatingSystemVersion:
        type: string
        minLength: 1
        maxLength: 255
    required:
      - namespace
      - bucket
      - object
      - operatingSystem
      - operatingSystemVersion
  IngressSecurityRule:
    description: A rule for allowing ingress IP packets.
    properties:
      icmpOptions:
        description: |
          Optional and valid only for ICMP. Use to specify a particular ICMP type and code
          as defined in
          [ICMP Parameters] (http://www.iana.org/assignments/icmp-parameters/icmp-parameters.xhtml).
          If you specify ICMP as the protocol but omit this object, then all ICMP types and
          codes are allowed. If you do provide this object, the type is required and the code is optional.
          To enable MTU negotiation for ingress internet traffic, make sure to allow Type 3 ("Destination
          Unreachable") code 4 ("Fragmentation Needed and Don't Fragment was Set"). If you need to specify
          multiple codes for a single type, create a separate security list rule for each.
        $ref: "#/definitions/IcmpOptions"
      protocol:
        description: |
          The transport protocol. Specify either `all` or an IPv4 protocol number as
          defined in
          [Protocol Numbers] (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
          Additional constraints are supported only for ICMP ("1"), TCP ("6"), and UDP ("17").
        type: string
      source:
        description: |
          The source CIDR block for the ingress rule.
        type: string
      tcpOptions:
        description: |
          Optional and valid only for TCP. Use to specify particular destination ports for TCP rules.
          If you specify TCP as the protocol but omit this object, then all destination ports are allowed.
        $ref: "#/definitions/TcpOptions"
      udpOptions:
        description: |
          Optional and valid only for UDP. Use to specify particular destination ports for UDP rules.
          If you specify UDP as the protocol but omit this object, then all destination ports are allowed.
        $ref: "#/definitions/UdpOptions"
    required:
    - protocol
    - source
  IPSecConnection:
    description: A connection between a DRG and CPE.
    properties:
      compartmentId:
        description: The OCID of the compartment containing the IPsec connection.
        maxLength: 255
        minLength: 1
        type: string
      cpeId:
        description: The OCID of the CPE.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      drgId:
        description: The OCID of the DRG.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The IPsec connection's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      state:
        description: The IPsec connection's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      staticRoutes:
        description: Static routes to the CPE.
        items:
          maxLength: 10
          type: string
        type: array
        uniqueItems: true
      timeCreated:
        description: Date and time the IPsec connection was created.
        format: date-time
        type: string
    required:
    - compartmentId
    - id
    - drgId
    - cpeId
    - state
    - staticRoutes
  IPSecConnectionDeviceConfig:
    description: Information about the IPSecConnection device configuration.
    properties:
      compartmentId:
        description: The OCID of the compartment containing the IPsec connection.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The IPsec connection's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: Date and time the IPsec connection was created.
        format: date-time
        type: string
      tunnels:
        description: Two [TunnelConfig](#TunnelConfig) objects.
        items:
          $ref: '#/definitions/TunnelConfig'
        type: array
    required:
    - compartmentId
    - id
  IPSecConnectionDeviceStatus:
    description: Status of the IPsec connection.
    properties:
      compartmentId:
        description: The OCID of the compartment containing the IPsec connection.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The IPsec connection's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: Date and time the IPsec connection was created.
        format: date-time
        type: string
      tunnels:
        description: Two [TunnelStatus](#TunnelStatus) objects.
        items:
          $ref: '#/definitions/TunnelStatus'
        type: array
    required:
    - compartmentId
    - id
  IScsiVolumeAttachment:
    allOf:
    - $ref: '#/definitions/VolumeAttachment'
    - discriminator: iscsi
      properties:
        chapSecret:
          description: |
            The Challenge-Handshake-Authentication-Protocol (CHAP) secret valid for the associated CHAP user name. (Also called the "CHAP password".)

            Example: `d6866c0d-298b-48ba-95af-309b4faux45e`

          type: string
        chapUsername:
          description: |
            The volume's system-generated Challenge-Handshake-Authentication-Protocol (CHAP) user name.

            Example: `ocid1.volume.oc1.phx.abyhqljrgvttnlx73nmrwfaux7kcvzfs3s66izvxf2h4lgvyndsdsnoiwr5q`

          type: string
        ipv4:
          description: |
            The volume's iSCSI IP address.

            Example: `169.254.0.2`

          maxLength: 15
          minLength: 7
          type: string
        iqn:
          description: |
            The target volume's iSCSI Qualified Name in the format defined by RFC 3720.

            Example: `iqn.2015-12.us.oracle.com:456b0391-17b8-4122-bbf1-f85fc0bb97d9`

          minLength: 1
          type: string
        port:
          description: |
            The volume's iSCSI port.

            Example: `3260`

          maximum: 65535
          minimum: 1
          type: integer
      required:
      - iqn
      - ipv4
      - port
    description: An ISCSI volume attachment.
  Instance:
    properties:
      availabilityDomain:
        description: The Availability Domain the instance is running in.
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment that contains the instance.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: The non-unique, changeable name of the instance.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The OCID that uniquely identifies the instance.
        maxLength: 255
        minLength: 1
        type: string
      image:
        description: |
          The OCID of the image used to boot the instance. The available images are:

            * __ol7.1-base-0.0.1__ - For Oracle Linux 7.1.

            * __ol6.7-oracledbee_12.1.0.2/11.2.0.4-0.0.1__ - For Oracle Linux 6.7 with Oracle Database Enterprise Edition 11.2.0.4 or 12.1.0.2.

            * __ol6.7-base-0.0.1__ - For Oracle Linux 6.7 with Unbreakable Enterprise Kernel (UEK) Release 3.

        maxLength: 255
        minLength: 1
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Custom metadata that you provide.
        type: object
      ipxeScript:
        description: The iPXE script that the instance launches with.
        maxLength: 10240
        minLength: 1
        type: string
      region:
        description: The region that contains the Availability Domain the instance
          is running in.
        maxLength: 255
        minLength: 1
        type: string
      shape:
        description: The shape of the instance. The shape determines the number of
          CPUs and the amount of memory allocated to the instance.
        maxLength: 255
        minLength: 1
        type: string
      state:
        description: The current state of the instance.
        enum:
        - PROVISIONING
        - RUNNING
        - STARTING
        - STOPPING
        - STOPPED
        - SNAPSHOTTING
        - TERMINATING
        - TERMINATED
        type: string
      timeCreated:
        description: The date and time the instance was created.
        format: date-time
        type: string
    required:
    - id
    - compartmentId
    - shape
    - region
    - availabilityDomain
    - state
    - timeCreated
  InternetGateway:
    description: Represents a router connectecting the edge of a VCN with the Internet.
    properties:
      compartmentId:
        description: The OCID of the compartment containing the Internet Gateway.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The Internet Gateway's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      isEnabled:
        description: |
          Whether the gateway is enabled. When the gateway is disabled, traffic is not
          routed to/from the Internet, regardless of route rules.
        type: boolean
      modifiedTime:
        description: |
          Date and time the Internet Gateway was last modified
          (same as `TimeCreated` if not yet modified).
        format: date-time
        type: string
      state:
        description: The Internet Gateway's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      timeCreated:
        description: Date and time the Internet Gateway was created.
        format: date-time
        type: string
    required:
    - id
    - compartmentId
    - state
  LaunchInstanceRequest:
    properties:
      availabilityDomain:
        description: The Availability Domain of an instance.
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: The non-unique, changeable name of an instance.
        maxLength: 255
        minLength: 1
        type: string
      image:
        description: The name or OCID of the image used to boot the instance.
        maxLength: 255
        minLength: 1
        type: string
      metadata:
        additionalProperties:
          type: string
        description: |
          Custom metadata key/value pairs that you provide, such as the SSH public key
          required to connect to the instance.

          A metadata service runs on every launched instance. The service is an HTTP
          endpoint listening on 169.254.169.254. You can use the service to:

          * Provide information to [Cloud-Init](https://cloudinit.readthedocs.org/en/latest/)
            to be used for various system initialization tasks.

          * Get information about the instance, including the custom metadata that you
            provide when you launch the instance.

           __Providing Cloud-Init Metadata__

           You can use the following metadata key names to provide information to
           Cloud-Init:

           __"ssh_authorized_keys"__ - Provide one or more public SSH keys to be
           included in the `~/.ssh/authorized_keys` file for the default user on the
           instance. Use a newline character to separate multiple keys. The SSH
           keys must be in the format necessary for the `authorized_keys` file, as shown
           in the example below.

           __"user_data"__ - Provide your own base64-encoded data to be used by
           Cloud-Init to run custom scripts or provide custom Cloud-Init configuration. For
           information about how to take advantage of user data, see the
           [Cloud-Init Documentation](http://cloudinit.readthedocs.org/en/latest/topics/format.html).

           __Note:__ Cloud-Init does not pull this data from the `http://169.254.169.254/opc/v1/instance/metadata/` path. When the instance
           launches and either of these keys are provided, the key values are formatted as
           OpenStack metadata and copied to the following locations, which are recognized by Cloud-Init:

           `http://169.254.169.254/openstack/latest/meta_data.json` - This JSON blob
           contains, among other things, the SSH keys that you provided for
            __"ssh_authorized_keys"__.

           `http://169.254.169.254/openstack/latest/user_data` - Contains the
           base64-decoded data that you provided for __"user_data"__.

           __Metadata Example__

                "metadata" : {
                   "quake_bot_level" : "Severe",
                   "ssh_authorized_keys" : "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCZ06fccNTQfq+xubFlJ5ZR3kt+uzspdH9tXL+lAejSM1NXM+CFZev7MIxfEjas06y80ZBZ7DUTQO0GxJPeD8NCOb1VorF8M4xuLwrmzRtkoZzU16umt4y1W0Q4ifdp3IiiU0U8/WxczSXcUVZOLqkz5dc6oMHdMVpkimietWzGZ4LBBsH/LjEVY7E0V+a0sNchlVDIZcm7ErReBLcdTGDq0uLBiuChyl6RUkX1PNhusquTGwK7zc8OBXkRuubn5UKXhI3Ul9Nyk4XESkVWIGNKmw8mSpoJSjR8P9ZjRmcZVo8S+x4KVPMZKQEor== ryan.smith@company.com
                   ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAzJSAtwEPoB3Jmr58IXrDGzLuDYkWAYg8AsLYlo6JZvKpjY1xednIcfEVQJm4T2DhVmdWhRrwQ8DmayVZvBkLt+zs2LdoAJEVimKwXcJFD/7wtH8Lnk17HiglbbbNXsemjDY0hea4JUE5CfvkIdZBITuMrfqSmA4n3VNoorXYdvtTMoGG8fxMub46RPtuxtqi9bG9Zqenordkg5FJt2mVNfQRqf83CWojcOkklUWq4CjyxaeLf5i9gv1fRoBo4QhiA8I6NCSppO8GnoV/6Ox6TNoh9BiifqGKC9VGYuC89RvUajRBTZSK2TK4DPfaT+2R+slPsFrwiT/oPEhhEK1S5Q== rsa-key-20160227",
                   "user_data" : "SWYgeW91IGNhbiBzZWUgdGhpcywgdGhlbiBpdCB3b3JrZWQgbWF5YmUuCg=="
                }
           __Getting Metadata on the Instance__

           To get information about your instance, connect to the instance using SSH and issue any of the
           following GET requests:

               curl http://169.254.169.254/opc/v1/instance/
               curl http://169.254.169.254/opc/v1/instance/metadata/
               curl http://169.254.169.254/opc/v1/instance/metadata/<any-key-name>

           You'll get back a response that includes all the instance information; only the metadata information; or the metadata information for the specified key name, respectively.
        type: object
      shape:
        description: |
          The shape of an instance. The shape determines the number of CPUs, amount of memory,
          and other resources allocated to the instance. Specify one of the following shapes:

          __x5-2.36.256__ Creates a bare metal general purpose compute instance on an
          Oracle Server X5-2 with 36 cores and 256 GB RAM. You can add network-attached block
          storage as needed by using the Cloud Block Storage service. This option offers a balance
          of compute power, memory capacity, and network resources for your general purpose computing needs.

          __x5-2.36.512.nvme-6.4__ Creates a bare metal compute instance with NVMe drives. This option adds
          four locally-attached 1.6 TB NVMe drives (6.4 TB total) to the general purpose compute
          Oracle Server X5-2. This option provides hundreds of thousands of IOPS and multiple
          GBs of throughput per second. Use this option for I/O-intensive workloads such as
          running large databases, Hadoop, and Apache Spark.

          You may enumerate all available shapes by calling [ListShapes] (#listShapes).
        maxLength: 255
        minLength: 1
        type: string
      subnetId:
        description: The OCID of the subnet.
        maxLength: 255
        minLength: 1
        type: string
      opcIpxeScript:
        description: For Oracle internal use only
        minLength: 1
        maxLength: 10240
        type: string
    required:
    - compartmentId
    - shape
    - availabilityDomain
    - subnetId
    - image
  PortRange:
    properties:
      max:
        description: |
          The maximum port number. Must not be lower than the minimum port number. To specify
          a single port number, set both the min and max to the same value.
        minimum: 1
        maximum: 65535
        type: integer
      min:
        description: The minimum port number. Must not be greater than the maximum port number.
        minimum: 1
        maximum: 65535
        type: integer
    required:
    - max
    - min
  RouteRule:
    description: |
      A mapping between a destination IP address range and a virtual device to route matching
      packets to (a target).
    properties:
      cidrBlock:
        description: |
          A destination IP address range in CIDR notation. Matching packets will
          be routed to the indicated network entity (the target).
        maxLength: 18
        minLength: 9
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      networkEntityId:
        description: The OCID for the route rule's target.
        maxLength: 255
        minLength: 1
        type: string
      networkEntityType:
        description: The type of target.
        enum:
        - VNIC
        - INTERNET_GATEWAY
        - DYNAMICALLY_ROUTING_GATEWAY
        type: string
      timeCreated:
        description: Date and time the route rule was created.
        format: date-time
        type: string
    required:
    - cidrBlock
    - networkEntityType
    - networkEntityId
  RouteTable:
    description: Summarizes all the details of a route table.
    properties:
      compartmentId:
        description: The OCID of the compartment containing the route table.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The route table's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      modifiedTime:
        description: Date and time the route table was last modified (same as `TimeCreated`
          if not yet modified).
        format: date-time
        type: string
      routeRules:
        description: The collection of rules for routing destination IPs to network
          devices.
        items:
          $ref: '#/definitions/RouteRule'
          maximum: 10
          minimum: 0
        type: array
      state:
        description: The route table's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      timeCreated:
        description: Date and time the route table was created.
        format: date-time
        type: string
    required:
    - id
    - compartmentId
    - routeRules
    - state
  SecurityList:
    description: Summarizes all the details of a security list.
    properties:
      compartmentId:
        description: The OCID of the compartment containing the security list.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      egressSecurityRules:
        description: Rules for allowing egress IP packets.
        items:
          $ref: "#/definitions/EgressSecurityRule"
        type: array
      id:
        description: The security list's Oracle Cloud ID (OCID).
        minLength: 1
        maxLength: 255
        type: string
      ingressSecurityRules:
        description: Rules for allowing ingress IP packets.
        items:
          $ref: "#/definitions/IngressSecurityRule"
        type: array
      state:
        description: The security list's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      timeCreated:
        description: Date and time the security list was created.
        format: date-time
        type: string
      vcnId:
        description: The OCID of the VCN the security list belongs to.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - compartmentId
    - displayName
    - egressSecurityRules
    - id
    - ingressSecurityRules
    - state
    - timeCreated
    - vcnId
  Shape:
    description: A compute instance shape that can be used in LaunchInstance
    properties:
      shape:
        description: The name of the shape
        maxLength: 255
        minLength: 1
        type: string
    required:
      - shape
  SnapshotInstanceRequest:
    properties:
      compartmentId:
        description: The OCID of the compartment containing the instance you want to use as the basis for the image.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name for the image. It does not have to be unique, and it's changeable. You cannot use an Oracle-provided image name as a custom image name.

          Example: `My Oracle Linux 7.1 image`

        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance you want to use as the basis for the image.
        maxLength: 255
        minLength: 1
        type: string
      importImageDetails:
        description: Details for creating an image through import
        $ref: "#/definitions/ImportImageDetails"
    required:
      - compartmentId
  Subnet:
    description: A logical subdivision of a VCN.
    properties:
      availabilityDomain:
        description: The subnet's Availability Domain.
        maxLength: 255
        minLength: 1
        type: string
      cidrBlock:
        description: The subnet's CIDR block.
        maxLength: 32
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment containing the subnet.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      dhcpOptionsId:
        description: |
          The OCID of the set of DHCP options associated with the subnet.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The subnet's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      routeTableId:
        description: The OCID of the route table the subnet is using.
        maxLength: 255
        minLength: 1
        type: string
      securityListIds:
        description: IDs for the security lists to use for VNICs in this subnet.
        items:
          type: string
          maximum: 5
          maxLength: 255
          minimum: 0
          minLength: 1
        type: array
      state:
        description: The subnet's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      timeCreated:
        description: Date and time the subnet was created.
        format: date-time
        type: string
      vcnId:
        description: The OCID of the VCN the subnet is in.
        maxLength: 255
        minLength: 1
        type: string
      virtualRouterIp:
        description: The IP address of the virtual router.
        maxLength: 32
        minLength: 1
        type: string
      virtualRouterMac:
        description: The MAC address of the virtual router.
        maxLength: 32
        minLength: 1
        type: string
    required:
    - vcnId
    - id
    - compartmentId
    - availabilityDomain
    - cidrBlock
    - routeTableId
    - virtualRouterIp
    - virtualRouterMac
    - state
  TcpOptions:
    description: |
      Optional object to specify destination ports for a TCP rule. If you specify TCP as the
      protocol but omit this object, then all destination ports are allowed.
    properties:
      destinationPortRange:
        description: A single destination port or a range.
        $ref: "#/definitions/PortRange"
    required:
    - destinationPortRange
  TunnelConfig:
    description: Specific connection details for an IPsec tunnel.
    properties:
      ipAddress:
        description: The IP address of Oracle's VPN headend.
        maxLength: 46
        minLength: 8
        type: string
      sharedSecret:
        description: The shared secret of the IPsec tunnel.
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: Date and time the IPsec connection was created.
        format: date-time
        type: string
    required:
    - ipAddress
    - sharedSecret
  TunnelStatus:
    description: |
      Specific connection details for an IPsec tunnel.
    properties:
      ipAddress:
        description: The IP address of Oracle's VPN headend.
        maxLength: 46
        minLength: 8
        type: string
      state:
        description: The tunnel's current state.
        enum:
        - UP
        - DOWN
        - DOWN_FOR_MAINTENANCE
        type: string
      timeCreated:
        description: Date and time the IPsec connection was created.
        format: date-time
        type: string
      timeStateModified:
        description: When the state of the tunnel last changed.
        format: date-time
        type: string
    required:
    - ipAddress
  UdpOptions:
    description: |
      Optional object to specify destination ports for a UDP rule. If you specify UDP as the
      protocol but omit this object, then all destination ports are allowed.
    properties:
      destinationPortRange:
        description: A single destination port or a range.
        $ref: "#/definitions/PortRange"
    required:
    - destinationPortRange
  UpdateDhcpRequest:
    properties:
      displayName:
        description: |
          Optional user-friendly name. Does not have to be unique.
        maxLength: 255
        minLength: 1
        type: string
      options:
        type: array
        items:
          $ref: '#/definitions/DhcpOption'
        uniqueItems: true
    required:
    - options
  UpdateImageRequest:
    properties:
      displayName:
        description: |
          A user-friendly name for the image. It does not have to be unique, and it's changeable. You cannot use an Oracle-provided image name as a custom image name.

          Example: `My Oracle Linux 7.1 image`

        maxLength: 255
        minLength: 1
        type: string
      operatingSystem:
        description: Image operating system
        maxLength: 255
        minLength: 1
        type: string
      operatingSystemVersion:
        description: Image operating system version
        maxLength: 255
        minLength: 1
        type: string
  UpdateInstanceRequest:
    properties:
      displayName:
        description: The non-unique, changeable name of the instance.
        maxLength: 255
        minLength: 1
        type: string
  UpdateInternetGatewayRequest:
    properties:
      isEnabled:
        description: Whether the gateway is enabled.
        type: boolean
    required:
    - isEnabled
  UpdateRouteTableRequest:
    properties:
      routeRules:
        description: The collection of rules used for routing destination IPs to network
          devices.
        items:
          $ref: '#/definitions/RouteRule'
          maximum: 10
          minimum: 0
        type: array
    required:
    - routeRules
  UpdateSecurityListRequest:
    properties:
      displayName:
        description: A user-friendly name. Does not have to be unique.
        maxLength: 255
        minLength: 1
        type: string
      egressSecurityRules:
        description: Rules for allowing egress IP packets.
        items:
          $ref: "#/definitions/EgressSecurityRule"
          minimum: 1
          maximum: 50
        type: array
      ingressSecurityRules:
        description: Rules for allowing ingress IP packets.
        items:
          $ref: "#/definitions/IngressSecurityRule"
          minimum: 1
          maximum: 50
        type: array
    required:
    - egressSecurityRules
    - ingressSecurityRules
  UpdateVolumeRequest:
    properties:
      displayName:
        description: A user-friendly name for the volume. Does not have to be unique,
          and it's changeable.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - displayName
  Vcn:
    description: A Virtual Cloud Network (VCN).
    properties:
      cidrBlock:
        description: The CIDR IP address block of the VCN.
        maxLength: 32
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment containing the VCN.
        maxLength: 255
        minLength: 1
        type: string
      defaultDhcpOptionsId:
        description: |
          The OCID for the VCN's default set of DHCP options.
        maxLength: 255
        minLength: 1
        type: string
      defaultRouteTableId:
        description: The OCID for the VCN's default route table.
        maxLength: 255
        minLength: 1
        type: string
      defaultSecurityListId:
        description: The OCID for the VCN's default security list.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The VCN's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      state:
        description: The VCN's current state.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      timeCreated:
        description: Date and time the VCN was created.
        format: date-time
        type: string
    required:
    - id
    - compartmentId
    - cidrBlock
    - state
  Vnic:
    description: A virtual network interface card.
    properties:
      availabilityDomain:
        description: The VNIC's Availability Domain.
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment containing the VNIC.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's unchangeable.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The VNIC's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      overlayIp:
        description: |
          The private IP addresses of the VNIC, which is within the VNIC subnet
          and is accessible within the VCN.
        type: string
      publicIp:
        description: |
          The public IP address of the VNIC, which Oracle performs NAT for at the gateway.
        type: string
      state:
        description: The current state of the VNIC
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        type: string
      subnetId:
        description: The OCID of the subnet the VNIC is in.
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: Date and time the VNIC was created.
        format: date-time
        type: string
  VnicAttachment:
    properties:
      availabilityDomain:
        description: The Availability Domain of an instance.
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: The name of the VNIC attachment.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The OCID of the VNIC attachment.
        maxLength: 255
        minLength: 1
        type: string
      instanceId:
        description: The OCID of the instance.
        maxLength: 255
        minLength: 1
        type: string
      state:
        description: The current state of the VNIC attachment.
        enum:
        - ATTACHING
        - ATTACHED
        - DETACHING
        - DETACHED
        type: string
      subnetId:
        description: The OCID of the subnet of the VNIC.
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        format: date-time
        type: string
      vnicId:
        description: The vnic identifier
        maxLength: 255
        minLength: 1
        type: string
    required:
    - id
    - compartmentId
    - instanceId
    - subnetId
    - vnicId
    - state
    - availabilityDomain
    - timeCreated
  Volume:
    properties:
      availabilityDomain:
        description: The Availability Domain of the volume.
        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment that contains the volume.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: A user-friendly name for the volume. Does not have to be unique,
          and it's changeable.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The Oracle Cloud ID (OCID) that uniquely identifies the volume.
        maxLength: 255
        minLength: 1
        type: string
      sizeInMBs:
        description: The size of the volume in MBs.
        format: int64
        type: integer
      state:
        description: The current state of a volume.
        enum:
        - PROVISIONING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        - FAULTY
        type: string
      timeCreated:
        description: The date and time the volume was created. Format defined by RFC3339.
        format: date-time
        type: string
    required:
    - id
    - availabilityDomain
    - displayName
    - sizeInMBs
    - compartmentId
    - timeCreated
    - state
  VolumeAttachment:
    description: |
      Represents an attachment between a storage volume and an instance.

      This is the base type for polymorphic volume types.
    discriminator: attachmentType
    properties:
      attachmentType:
        description: The type of volume attachment.
        type: string
        maxLength: 255
        minLength: 1
      availabilityDomain:
        description: The Availability Domain of the instance.
        type: string
        maxLength: 255
        minLength: 1
      compartmentId:
        description: The OCID of the compartment.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: The name of the volume attachment.
        type: string
        maxLength: 255
        minLength: 1
      id:
        description: The OCID of the volume attachment.
        type: string
        maxLength: 255
        minLength: 1
      instanceId:
        description: The OCID of the instance the volume is attached to.
        maxLength: 255
        minLength: 1
        type: string
      state:
        description: The current state of the volume attachment.
        enum:
        - ATTACHING
        - ATTACHED
        - DETACHING
        - DETACHED
        type: string
      timeCreated:
        description: |
          The date and time the volume was created, in the format defined by RFC3339.

          Example: `2016-03-24T17:43:01.389+0000`

        format: date-time
        type: string
      volumeId:
        description: The OCID of the volume.
        maxLength: 255
        minLength: 1
        type: string
      isReadOnly:
        description: Whether the attachment was created in read-only mode.
        type: boolean
    required:
    - id
    - attachmentType
    - instanceId
    - volumeId
    - state
    - compartmentId
    - availabilityDomain
    - timeCreated
parameters:
  AvailabilityDomainQueryParam:
    description: The name of the Availability Domain.
    in: query
    name: availabilityDomain
    required: false
    type: string
  CompartmentIdQueryParam:
    description: The OCID of the compartment.
    in: query
    maxLength: 255
    minLength: 1
    name: compartmentId
    required: true
    type: string
  CpeIdOptionalQueryParam:
    description: The CPE's OCID.
    in: query
    maxLength: 255
    minLength: 1
    name: cpeId
    required: false
    type: string
  CpeIdPathParam:
    description: The CPE's OCID.
    in: path
    maxLength: 255
    minLength: 1
    name: cpeId
    required: true
    type: string
  DisplayNameQueryParam:
    description: The non-unique, changeable name of the instance.
    in: query
    maxLength: 255
    minLength: 1
    name: displayName
    type: string
  DhcpIdPathParam:
    description: The OCID for the set of DHCP options.
    in: path
    maxLength: 255
    minLength: 1
    name: dhcpId
    required: true
    type: string
  DrgAttachmentIdPathParam:
    description: The DRG attachment's OCID.
    in: path
    maxLength: 255
    minLength: 1
    name: drgAttachmentId
    required: true
    type: string
  DrgIdOptionalQueryParam:
    description: The DRG's OCID.
    in: query
    maxLength: 255
    minLength: 1
    name: drgId
    required: false
    type: string
  DrgIdPathParam:
    description: The DRG's OCID.
    in: path
    maxLength: 255
    minLength: 1
    name: drgId
    required: true
    type: string
  IPSecConnectionIdPathParam:
    description: The IPsec connection's OCID.
    in: path
    maxLength: 255
    minLength: 1
    name: ipscId
    required: true
    type: string
  IdempotencyTokenHeader:
    description: |
      A token you supply to uniquely identify the request and provide idempotency if
      the request is retried. Idempotency tokens expire after 30 minutes.
    in: header
    maxLength: 64
    minLength: 1
    name: opc-idempotency-token
    type: string
  IfMatchHeader:
    description: |
      For optimistic concurrency control. In the PUT or DELETE call for a resource, set the `if-match`
      parameter to the value of the etag from a previous GET or POST response for that resource.  The resource
      will be updated or deleted only if the etag you provide matches the resource's current etag value.
    in: header
    name: if-match
    type: string
  ImageIdPathParam:
    description: The OCID of the image.
    in: path
    name: imageId
    required: true
    type: string
  ImageIdQueryParam:
    description: |
      The Oracle ID (OCID) of an image
    in: query
    name: imageId
    type: string
  InstanceActionQueryParam:
    description: The action to perform on the instance.
    enum:
    - STOP
    - START
    - RESET
    in: query
    name: action
    required: true
    type: string
    x-obmcs-inline-enum: false
  InstanceConsoleHistoryIdPathParam:
    description: The OCID of the console history.
    in: path
    name: instanceConsoleHistoryId
    required: true
    type: string
  InstanceIdPathParam:
    description: The OCID of the instance.
    in: path
    name: instanceId
    required: true
    type: string
  InstanceIdQueryParam:
    description: The OCID of the instance.
    in: query
    name: instanceId
    type: string
  InternetGatewayIdPathParam:
    description: The Internet Gateway's OCID.
    in: path
    maxLength: 255
    minLength: 1
    name: igId
    required: true
    type: string
  OperatingSystemQueryParam:
    description: |
      The image's operating system.

      Example: `Oracle Linux`

    in: query
    name: operatingSystem
    type: string
  OperatingSystemVersionQueryParam:
    description: |
      The image's operating system version.

      Example: `7.1`

    in: query
    name: operatingSystemVersion
    type: string
  OpcHostSerialQueryParam:
    description: For Oracle internal use only.
    in: query
    name: opc-host-serial
    type: string
  OpcPoolNameQueryParam:
    description: For Oracle internal use only.
    in: query
    name: opc-pool-name
    type: string
  OpcVnicIdQueryParam:
    description: For Oracle internal use only.
    in: query
    name: opc-vnic-id
    type: string
  PaginationLimitQueryParam:
    description: |
      The maximum number of items to return in a paginated "List" call.
    in: query
    maximum: 1000
    minimum: 1
    name: limit
    type: integer
  PaginationTokenQueryParam:
    description: |
      The value of the `opc-next-page` response header from the previous "List" call.
    in: query
    maxLength: 512
    minLength: 1
    name: page
    type: string
  RouteTableIdPathParam:
    description: The route table's OCID.
    in: path
    maxLength: 255
    minLength: 1
    name: rtId
    required: true
    type: string
  SecurityListIdPathParam:
    description: The security list's OCID.
    in: path
    maxLength: 255
    minLength: 1
    name: securityListId
    required: true
    type: string
  SubnetIdPathParam:
    description: The subnet's OCID.
    in: path
    maxLength: 255
    minLength: 1
    name: subnetId
    required: true
    type: string
  SubnetIdQueryParam:
    description: The subnet's OCID.
    in: query
    maxLength: 255
    minLength: 1
    name: subnet
    required: true
    type: string
  VcnIdOptionalQueryParam:
    description: The VCN's OCID.
    in: query
    maxLength: 255
    minLength: 1
    name: vcnId
    required: false
    type: string
  VcnIdPathParam:
    description: The VCN's OCID.
    in: path
    maxLength: 255
    minLength: 1
    name: vcnId
    required: true
    type: string
  VcnIdQueryParam:
    description: The VCN's OCID.
    in: query
    maxLength: 255
    minLength: 1
    name: vcn
    required: true
    type: string
  VnicIdPathParam:
    description: The VNIC's OCID.
    in: path
    maxLength: 255
    minLength: 1
    name: vnicId
    required: true
    type: string
  VnicIdQueryParam:
    description: The OCID of the VNIC.
    in: query
    name: vnicId
    type: string
  VolumeAttachmentIdPathParam:
    description: The OCID of the volume attachment.
    in: path
    name: volumeAttachmentId
    required: true
    type: string
  VolumeIdPathParam:
    description: The Oracle Cloud ID (OCID) that uniquely identifies the volume.
    in: path
    name: volumeId
    required: true
    type: string
  VolumeIdQueryParam:
    description: The OCID of the volume.
    in: query
    name: volumeId
    type: string
responses:
  Error:
    description: |
      An error has occurred.
    headers:
      opc-request-id:
        description: |-
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
          a particular request, please provide the request ID.
        type: string
    schema:
      $ref: '#/definitions/Error'
