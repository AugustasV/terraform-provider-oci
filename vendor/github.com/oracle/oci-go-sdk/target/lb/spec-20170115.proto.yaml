---
swagger: "2.0"
info:
  title: "Load Balancing Service API"
  description: API for the Load Balancing Service
  version: "20170115"

basePath: /20170115

paths:
  /loadBalancers:
    get:
      summary: "ListLoadBalancers"
      tags: ['loadBalancer']
      description: Lists all load balancers in the specified compartment.
      operationId: "ListLoadBalancers"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "limit"
        in: "query"
        description: |
          The maximum number of items to return in a paginated "List" call.

          Example: `500`

        required: false
        type: "integer"
        default: 10
        format: "int64"
      - name: "page"
        in: "query"
        description: |
          The value of the `opc-next-page` response header from the previous "List" call.

          Example: `3`

        required: false
        type: "string"
      - name: "compartmentId"
        in: "query"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the compartment containing the load balancers to list.
        required: true
        type: "string"
      - name: "detail"
        in: "query"
        description: |
          The level of detail to return for each result. Can be `full` or `simple`.

          Example: `full`

        required: false
        type: "string"
        default: "full"
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/FilterByLifecycleStateQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          schema:
            type: "array"
            items:
              $ref: "#/definitions/LoadBalancer"
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    post:
      summary: "CreateLoadBalancer"
      tags: ['loadBalancer']
      description: |
        Creates a new load balancer in the specified compartment. For general information about load balancers,
        see [Overview of the Load Balancing Service](/Content/Balance/Concepts/balanceoverview.htm).

        For the purposes of access control, you must provide the OCID of the compartment where you want
        the load balancer to reside. Notice that the load balancer doesn't have to be in the same compartment as the VCN
        or backend set. If you're not sure which compartment to use, put the load balancer in the same compartment as the VCN.
        For information about access control and compartments, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm).

        You must specify a display name for the load balancer. It does not have to be unique, and you can change it.

        For information about Availability Domains, see
        [Regions and Availability Domains](/Content/General/Concepts/regions.htm).
        To get a list of Availability Domains, use the `ListAvailabilityDomains` operation
        in the Identity and Access Management Service API.

        All Oracle Cloud Infrastructure resources, including load balancers, get an Oracle-assigned,
        unique ID called an Oracle Cloud Identifier (OCID). When you create a resource, you can find its OCID
        in the response. You can also retrieve a resource's OCID by using a List API operation on that resource type,
        or by viewing the resource in the Console. Fore more information, see
        [Resource Identifiers](/Content/General/Concepts/identifiers.htm).

        After you send your request, the new object's state will temporarily be PROVISIONING. Before using the
        object, first make sure its state has changed to RUNNING.

        When you create a load balancer, the system assigns an IP address.
        To get the IP address, use the [GetLoadBalancer](#/en/loadbalancer/20170115/LoadBalancer/GetLoadBalancer) operation.

      operationId: "CreateLoadBalancer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - $ref: '#/parameters/RetryTokenHeader'
      - in: "body"
        name: "CreateLoadBalancerDetails"
        description: The configuration details for creating a load balancer.
        required: true
        schema:
          $ref: "#/definitions/CreateLoadBalancerDetails"
      x-example: |
        POST /20170115/loadBalancers
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "displayName": "demoLoadBalancer",
          "shape": "100Mbps",
          "listeners": {},
          "backendSets": {},
          "subnetIds": ["ocid1.subnet.oc1.phx.aaaaajdsrd4qjlvh4be7qmqwq6bwuk5tx2dt7n6nt5oq5faux5sxscrjxt6a","ocid1.subnet.oc1.phx.aaaaajds23llt4so7icmml7yk4zgfgpelurndfauxsntjagvlots7a35aypq"],
          "compartmentId": "ocid1.compartment.oc1..aaaaajdstulmjn6slkkzxqvscobn7cwgzt534fauxkfsgvgrwkybbhak4jfq"
        }

      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}:
    get:
      summary: "GetLoadBalancer"
      tags: ['loadBalancer']
      description: Gets the specified load balancer's configuration information.
      operationId: "GetLoadBalancer"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer to retrieve.
        required: true
        type: "string"
      responses:
        200:
          description: The configuration information is being retrieved.
          schema:
            $ref: "#/definitions/LoadBalancer"
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    put:
      summary: "UpdateLoadBalancer"
      tags: ['loadBalancer']
      description: Updates a load balancer's configuration.
      operationId: "UpdateLoadBalancer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - $ref: '#/parameters/RetryTokenHeader'
      - in: "body"
        name: "UpdateLoadBalancerDetails"
        description: The details for updating a load balancer's configuration.
        required: true
        schema:
          $ref: "#/definitions/UpdateLoadBalancerDetails"
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer to update.
        required: true
        type: "string"
      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    delete:
      summary: "DeleteLoadBalancer"
      tags: ['loadBalancer']
      description: Stops a load balancer and removes it from service.
      operationId: "DeleteLoadBalancer"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer to delete.
        required: true
        type: "string"
      responses:
        204:
          description: The request to delete the load balancer was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}/backendSets:
    get:
      summary: "ListBackendSets"
      tags: ['loadBalancer']
      description: Lists all backend sets associated with a given load balancer.
      operationId: "ListBackendSets"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description:  |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend sets to retrieve.
        required: true
        type: "string"
      responses:
        200:
          description: The list is being retrieved.
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BackendSet"
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    post:
      summary: "CreateBackendSet"
      tags: ['loadBalancer']
      description: Adds a backend set to a load balancer.
      operationId: "CreateBackendSet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - $ref: '#/parameters/RetryTokenHeader'
      - in: "body"
        name: "CreateBackendSetDetails"
        description: The details for adding a backend set.
        required: true
        schema:
          $ref: "#/definitions/CreateBackendSetDetails"
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer on which to add a backend set.
        required: true
        type: "string"
      x-example: |
        POST /20170115/loadBalancers/<var>&lt;loadBalancerId&gt;</var>/backendSets
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "name": demoBackendSet,
          "policy": "ROUND_ROBIN",
          "healthChecker": {
            "protocol": "HTTP",
            "timeoutInMillis": "10000",
            "retries": "3",
            "returnCode": "200",
            "port": "80",
            "urlPath": "/healthcheck",
            "intervalInMillis": "3000"
          },
          "backends": [],
          "sslConfiguration": {
            "certificateName": "My_certificate_bundle",
            "verifyDepth": "3",
            "verifyPeerCertificate": true
          }
        }

      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}/backendSets/{backendSetName}:
    get:
      summary: "GetBackendSet"
      tags: ['loadBalancer']
      description: Gets the specified backend set's configuration information.
      operationId: "GetBackendSet"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the specified load balancer.
        required: true
        type: "string"
      - name: "backendSetName"
        in: "path"
        description: |
          The name of the backend set to retrieve.

          Example: `My_backend_set`

        required: true
        type: "string"
      responses:
        200:
          description: The backend set information is being retrieved.
          schema:
            $ref: "#/definitions/BackendSet"
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    put:
      summary: "UpdateBackendSet"
      tags: ['loadBalancer']
      description: Updates a backend set.
      operationId: "UpdateBackendSet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - $ref: '#/parameters/RetryTokenHeader'
      - in: "body"
        name: "UpdateBackendSetDetails"
        description: The details to update a backend set.
        required: true
        schema:
          $ref: "#/definitions/UpdateBackendSetDetails"
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set.
        required: true
        type: "string"
      - name: "backendSetName"
        in: "path"
        description: |
          The name of the backend set to update.

          Example: `My_backend_set`

        required: true
        type: "string"
      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    delete:
      summary: "DeleteBackendSet"
      tags: ['loadBalancer']
      description: |
        Deletes the specified backend set. Note that deleting a backend set removes its backend servers from the load balancer.

        Before you can delete a backend set, you must remove it from any active listeners.

      operationId: "DeleteBackendSet"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set.
        required: true
        type: "string"
      - name: "backendSetName"
        in: "path"
        description: |
          The name of the backend set to delete.

          Example: `My_backend_set`

        required: true
        type: "string"
      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}/backendSets/{backendSetName}/backends:
    get:
      summary: "ListBackends"
      tags: ['loadBalancer']
      description: Lists the backend servers for a given load balancer and backend set.
      operationId: "ListBackends"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set and servers.
        required: true
        type: "string"
      - name: "backendSetName"
        in: "path"
        description: |
          The name of the backend set associated with the backend servers.

          Example: `My_backend_set`

        required: true
        type: "string"
      responses:
        200:
          description: The list is being retrieved.
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Backend"
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    post:
      summary: "CreateBackend"
      tags: ['loadBalancer']
      description: Adds a backend server to a backend set.
      operationId: "CreateBackend"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - $ref: '#/parameters/RetryTokenHeader'
      - in: "body"
        name: "CreateBackendDetails"
        description: The details to add a backend server to a backend set.
        required: true
        schema:
          $ref: "#/definitions/CreateBackendDetails"
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set and servers.
        required: true
        type: "string"
      - name: "backendSetName"
        in: "path"
        description: |
          The name of the backend set to add the backend server to.

          Example: `My_backend_set`

        required: true
        type: "string"
      x-example: |
        POST /20170115/loadBalancers/<var>&lt;loadBalancerId&gt;</var>/backendSets/<var>&lt;backendSetName&gt;</var>/backends
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "ipAddress": "10.10.10.4",
          "port": "8080",
          "weight": "3",
          "backup": "false",
          "drain": "false",
          "offline": "false",
        }

      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}/backendSets/{backendSetName}/backends/{backendName}:
    get:
      summary: "GetBackend"
      tags: ['loadBalancer']
      description: Gets the specified backend server's configuration information.
      operationId: "GetBackend"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set and server.
        required: true
        type: "string"
      - name: "backendSetName"
        in: "path"
        description: |
          The name of the backend set that includes the backend server.

          Example: `My_backend_set`

        required: true
        type: "string"
      - name: "backendName"
        in: "path"
        description: |
          The IP address and port of the backend server to retrieve.

          Example: `1.1.1.7:42`

        required: true
        type: "string"
      responses:
        200:
          description: The backend server information is being retrieved.
          schema:
            $ref: "#/definitions/Backend"
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    put:
      summary: "UpdateBackend"
      tags: ['loadBalancer']
      description: Updates the configuration of a backend server within the specified backend set.
      operationId: "UpdateBackend"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - $ref: '#/parameters/RetryTokenHeader'
      - in: "body"
        name: "UpdateBackendDetails"
        description: Details for updating a backend server.
        required: true
        schema:
          $ref: "#/definitions/UpdateBackendDetails"
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set and server.
        required: true
        type: "string"
      - name: "backendSetName"
        in: "path"
        description: |
          The name of the backend set associated with the backend server.

          Example: `My_backend_set`

        required: true
        type: "string"
      - name: "backendName"
        in: "path"
        description: |
          The IP address and port of the backend server to update.

          Example: `1.1.1.7:42`

        required: true
        type: "string"
      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    delete:
      summary: "DeleteBackend"
      tags: ['loadBalancer']
      description: Removes a backend server from a given load balancer and backend set.
      operationId: "DeleteBackend"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set and server.
        required: true
        type: "string"
      - name: "backendSetName"
        in: "path"
        description: |
          The name of the backend set associated with the backend server.

          Example: `My_backend_set`

        required: true
        type: "string"
      - name: "backendName"
        in: "path"
        description: |
          The IP address and port of the backend server to remove.

          Example: `1.1.1.7:42`

        required: true
        type: "string"
      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}/backendSets/{backendSetName}/healthChecker:
    get:
      summary: "GetHealthChecker"
      tags: ['loadBalancer']
      description: Gets the health check policy information for a given load balancer and backend set.
      operationId: "GetHealthChecker"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the health check policy to be retrieved.
        required: true
        type: "string"
      - name: "backendSetName"
        in: "path"
        description: |
          The name of the backend set associated with the health check policy to be retrieved.

          Example: `My_backend_set`

        required: true
        type: "string"
      responses:
        200:
          description: The health check policy information is being retrieved.
          schema:
            $ref: "#/definitions/HealthChecker"
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    put:
      summary: "UpdateHealthChecker"
      tags: ['loadBalancer']
      description: Updates the health check policy for a given load balancer and backend set.
      operationId: "UpdateHealthChecker"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - $ref: '#/parameters/RetryTokenHeader'
      - in: "body"
        name: "HealthChecker"
        description: The health check policy configuration details.
        required: true
        schema:
          $ref: "#/definitions/UpdateHealthCheckerDetails"
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the health check policy to be updated.
        required: true
        type: "string"
      - name: "backendSetName"
        in: "path"
        description: |
          The name of the backend set associated with the health check policy to be retrieved.

          Example: `My_backend_set`

        required: true
        type: "string"
      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'

  /loadBalancerHealths:
    get:
      summary: "ListLoadBalancerHealths"
      tags: ['loadBalancer']
      description: Lists the summary health statuses for all load balancers in the specified compartment.
      operationId: "ListLoadBalancerHealths"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "limit"
        in: "query"
        description: |
          The maximum number of items to return in a paginated "List" call.

          Example: `500`

        required: false
        type: "integer"
        default: 10
        format: "int64"
      - name: "page"
        in: "query"
        description: |
          The value of the `opc-next-page` response header from the previous "List" call.

          Example: `3`

        required: false
        type: "string"
      - name: "compartmentId"
        in: "query"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the compartment containing the load balancers to return health status information for.
        required: true
        type: "string"
      responses:
        200:
          description: The health status information was retrieved.
          schema:
            type: "array"
            items:
              $ref: "#/definitions/LoadBalancerHealthSummary"
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}/health:
    get:
      summary: "LoadBalancerHealth"
      tags: ['loadBalancer']
      description: Gets the health status for the specified load balancer.
      operationId: "GetLoadBalancerHealth"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer to return health status for.
        required: true
        type: "string"
      responses:
        200:
          description: The health status information was retrieved.
          schema:
            $ref: "#/definitions/LoadBalancerHealth"
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}/backendSets/{backendSetName}/health:
    get:
      summary: "BackendSetHealth"
      tags: ['loadBalancer']
      description: Gets the health status for the specified backend set.
      operationId: "GetBackendSetHealth"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set health status to be retrieved.
        required: true
        type: "string"
      - name: "backendSetName"
        in: "path"
        description: |
          The name of the backend set to retrieve the health status for.

          Example: `My_backend_set`

        required: true
        type: "string"
      responses:
        200:
          description: The health status information was retrieved.
          schema:
            $ref: "#/definitions/BackendSetHealth"
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}/backendSets/{backendSetName}/backends/{backendName}/health:
    get:
      summary: "BackendHealth"
      tags: ['loadBalancer']
      description: Gets the current health status of the specified backend server.
      operationId: "GetBackendHealth"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend server health status to be retrieved.
        required: true
        type: "string"
      - name: "backendSetName"
        in: "path"
        description: |
          The name of the backend set associated with the backend server to retrieve the health status for.

          Example: `My_backend_set`

        required: true
        type: "string"
      - name: "backendName"
        in: "path"
        description: |
          The IP address and port of the backend server to retrieve the health status for.

          Example: `1.1.1.7:42`

        required: true
        type: "string"
      responses:
        200:
          description: The health status information was retrieved.
          schema:
            type: "array"
            $ref: "#/definitions/BackendHealth"
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}/certificates:
    get:
      summary: "ListCertificates"
      tags: ['loadBalancer']
      description: Lists all SSL certificates associated with a given load balancer.
      operationId: "ListCertificates"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the certificates to be listed.
        required: true
        type: "string"
      responses:
        200:
          description: The list is being retrieved.
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Certificate"
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    post:
      summary: "CreateCertificate"
      tags: ['loadBalancer']
      description: Creates an asynchronous request to add an SSL certificate.
      operationId: "CreateCertificate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - $ref: '#/parameters/RetryTokenHeader'
      - in: "body"
        name: "CreateCertificateDetails"
        description: The details of the certificate to add.
        required: true
        schema:
          $ref: "#/definitions/CreateCertificateDetails"
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer on which to add the certificate.
        required: true
        type: "string"
      x-example: |
        POST /20170115/loadBalancers/<var>&lt;loadBalancerId&gt;</var>/certificates
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "passphrase": "Mysecretunlockingcode42!1!",
          "privateKey": "-----BEGIN RSA PRIVATE KEY-----jO1O1v2ftXMsawM90tnXwc6xhOAT1gDBC9S8DKeca...JZNUgYYwNS0dP2UK-----END RSA PRIVATE KEY-----",
          "publicCertificate": "-----BEGIN CERTIFICATE-----MIIC2jCCAkMCAg38MA0GCSqGSIb3DQEBBQUAMIGbM...QswCQYDVQQGEwJKUDEOMAwG-----END CERTIFICATE-----",
          "caCertificate": "-----BEGIN CERTIFICATE-----MIIEczCCA1ugAwIBAgIBADANBgkqhkiG9w0BAQQFAD...AkGA1UEBhMCR0Ix-----END CERTIFICATE-----",
          "certificateName": "My_certificate_bundle"
        }

      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}/certificates/{certificateName}:
    delete:
      summary: "DeleteCertificate"
      tags: ['loadBalancer']
      description: Deletes an SSL certificate from a load balancer.
      operationId: "DeleteCertificate"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the certificate to be deleted.
        required: true
        type: "string"
      - name: "certificateName"
        in: "path"
        pattern: '^[a-zA-Z0-9_.-]*$'
        minLength: 1
        maxLength: 255
        description: |
          The name of the certificate to delete.

          Example: `My_certificate_bundle`

        required: true
        type: "string"
      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}/listeners:
    post:
      summary: "CreateListener"
      tags: ['loadBalancer']
      description: Adds a listener to a load balancer.
      operationId: "CreateListener"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - $ref: '#/parameters/RetryTokenHeader'
      - in: "body"
        name: "CreateListenerDetails"
        description: Details to add a listener.
        required: true
        schema:
          $ref: "#/definitions/CreateListenerDetails"
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer on which to add a listener.
        required: true
        type: "string"
      x-example: |
        POST /20170115/loadBalancers/<var>&lt;loadBalancerId&gt;</var>/listeners
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "defaultBackendSetName": "My_backend_set",
          "pathRouteSetName": "path-route-set-001",
          "port": "80",
          "protocol": "HTTP",
          "sslConfiguration": {
            "certificateName": "My_certificate_bundle",
            "verifyDepth": "3",
            "verifyPeerCertificate": true
          }
          "connectionConfiguration": {
            "idleTimeout": 1200
          }
          "name": "My listener"
        }

      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}/listeners/{listenerName}:
    put:
      summary: "UpdateListener"
      tags: ['loadBalancer']
      description: Updates a listener for a given load balancer.
      operationId: "UpdateListener"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - $ref: '#/parameters/RetryTokenHeader'
      - in: "body"
        name: "UpdateListenerDetails"
        description: Details to update a listener.
        required: true
        schema:
          $ref: "#/definitions/UpdateListenerDetails"
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the listener to update.
        required: true
        type: "string"
      - name: "listenerName"
        in: "path"
        description: |
          The name of the listener to update.

          Example: `My listener`

        required: true
        type: "string"
      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    delete:
      summary: "DeleteListener"
      tags: ['loadBalancer']
      description: Deletes a listener from a load balancer.
      operationId: "DeleteListener"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the listener to delete.
        required: true
        type: "string"
      - name: "listenerName"
        in: "path"
        description: |
          The name of the listener to delete.

          Example: `My listener`

        required: true
        type: "string"
      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'

  /loadBalancers/{loadBalancerId}/pathRouteSets:
    get:
      x-obmcs-feature-id:
      - udx-491
      summary: "ListPathRouteSets"
      tags: ['loadBalancer']
      description: Lists all path route sets associated with the specified load balancer.
      operationId: "ListPathRouteSets"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description:  |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: |
          The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the path route sets
          to retrieve.
        required: true
        type: "string"
      responses:
        200:
          description: The list is being retrieved.
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PathRouteSet"
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    post:
      x-obmcs-feature-id:
      - udx-491
      summary: "CreatePathRouteSet"
      tags: ['loadBalancer']
      description: |
        Adds a path route set to a load balancer. For more information, see
        [Managing Request Routing](/Content/Balance/Tasks/managingrequest.htm).

      operationId: "CreatePathRouteSet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - $ref: '#/parameters/RetryTokenHeader'
      - in: "body"
        name: "CreatePathRouteSetDetails"
        description: The details of the path route set to add.
        required: true
        schema:
          $ref: "#/definitions/CreatePathRouteSetDetails"
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer to add the path route set to.
        required: true
        type: "string"
      x-example: |
        POST /20170115/loadBalancers/<var>&lt;loadBalancerId&gt;</var>/pathRouteSets
        Host: iaas.us-phoenix-1.oraclecloud.com
        <var>&lt;authorization and other headers&gt;</var>
        {
          "name": "path-route-set-001",
          "pathRoutes": [
            {
              "backendSetName": "My_backend_set",
              "path": "/example/video/123",
              "pathMatchType": {
                "matchType": "EXACT_MATCH"
              }
            }
          ]
        }

      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancers/{loadBalancerId}/pathRouteSets/{pathRouteSetName}:
    get:
      x-obmcs-feature-id:
      - udx-491
      summary: "GetPathRouteSet"
      tags: ['loadBalancer']
      description: Gets the specified path route set's configuration information.
      operationId: "GetPathRouteSet"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the specified load balancer.
        required: true
        type: "string"
      - name: "pathRouteSetName"
        in: "path"
        description: |
          The name of the path route set to retrieve.

          Example: `path-route-set-001`

        required: true
        type: "string"
      responses:
        200:
          description: The path route set information is being retrieved.
          schema:
            $ref: "#/definitions/PathRouteSet"
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    put:
      x-obmcs-feature-id:
      - udx-491
      summary: "UpdatePathRouteSet"
      tags: ['loadBalancer']
      description: |
        Overwrites an existing path route set on the specified load balancer. Use this operation to add, delete, or alter
        path route rules in a path route set.

        To add a new path route rule to a path route set, the `pathRoutes` in the
        [UpdatePathRouteSetDetails](#/en/loadbalancer/20170115/requests/UpdatePathRouteSetDetails) object must include
        both the new path route rule to add and the existing path route rules to retain.
      operationId: "UpdatePathRouteSet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - $ref: '#/parameters/RetryTokenHeader'
      - in: "body"
        name: "UpdatePathRouteSetDetails"
        description: The configuration details to update a path route set.
        required: true
        schema:
          $ref: "#/definitions/UpdatePathRouteSetDetails"
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the path route set to update.
        required: true
        type: "string"
      - name: "pathRouteSetName"
        in: "path"
        description: |
          The name of the path route set to update.

          Example: `path-route-set-001`

        required: true
        type: "string"
      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    delete:
      x-obmcs-feature-id:
      - udx-491
      summary: "DeletePathRouteSet"
      tags: ['loadBalancer']
      description: |
        Deletes a path route set from the specified load balancer.

        To delete a path route rule from a path route set, use the
        [UpdatePathRouteSet](#/en/loadbalancer/20170115/PathRouteSet/UpdatePathRouteSet) operation.
      operationId: "DeletePathRouteSet"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the path route set to delete.
        required: true
        type: "string"
      - name: "pathRouteSetName"
        in: "path"
        description: |
          The name of the path route set to delete.

          Example: `path-route-set-001`

        required: true
        type: "string"
      responses:
        204:
          description: The request was accepted for processing.
          headers:
            opc-work-request-id:
              $ref: '#/x-descriptions/opc-work-request-id'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'

  /loadBalancers/{loadBalancerId}/workRequests:
    get:
      summary: "ListWorkRequests"
      tags: ['loadBalancer']
      description: Lists the work requests for a given load balancer.
      operationId: "ListWorkRequests"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "limit"
        in: "query"
        description: |
          The maximum number of items to return in a paginated "List" call.

          Example: `500`

        required: false
        type: "integer"
        default: 100
        format: "int64"
      - name: "page"
        in: "query"
        description: |
          The value of the `opc-next-page` response header from the previous "List" call.

          Example: `3`

        required: false
        type: "string"
      - name: "loadBalancerId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer associated with the work requests to retrieve.
        required: true
        type: "string"
      responses:
        200:
          description: The list is being retrieved.
          schema:
            type: "array"
            items:
              $ref: "#/definitions/WorkRequest"
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancerPolicies:
    get:
      summary: "ListPolicies"
      tags: ['loadBalancer']
      description: Lists the available load balancer policies.
      operationId: "ListPolicies"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "compartmentId"
        in: "query"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the compartment containing the load balancer policies to list.
        required: true
        type: "string"
      - name: "limit"
        in: "query"
        description: |
          The maximum number of items to return in a paginated "List" call.

          Example: `500`

        required: false
        type: "integer"
        default: 16
        format: "int64"
      - name: "page"
        in: "query"
        description: |
          The value of the `opc-next-page` response header from the previous "List" call.

          Example: `3`

        required: false
        type: "string"
      responses:
        200:
          description: The list is being retrieved.
          schema:
            type: "array"
            items:
              $ref: "#/definitions/LoadBalancerPolicy"
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'

  /loadBalancerProtocols:
    get:
      summary: "ListProtocols"
      tags: ['loadBalancer']
      description: Lists all supported traffic protocols.
      operationId: "ListProtocols"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "compartmentId"
        in: "query"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the compartment containing the load balancer protocols to list.
        required: true
        type: "string"
      - name: "limit"
        in: "query"
        description: |
          The maximum number of items to return in a paginated "List" call.

          Example: `500`

        required: false
        type: "integer"
        default: 16
        format: "int64"
      - name: "page"
        in: "query"
        description: |
          The value of the `opc-next-page` response header from the previous "List" call.

          Example: `3`

        required: false
        type: "string"
      responses:
        200:
          description: The list is being retrieved.
          schema:
            type: "array"
            items:
              $ref: "#/definitions/LoadBalancerProtocol"
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'

  /loadBalancerShapes:
    get:
      summary: "ListShapes"
      tags: ['loadBalancer']
      description: Lists the valid load balancer shapes.
      operationId: "ListShapes"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "compartmentId"
        in: "query"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the compartment containing the load balancer shapes to list.
        required: true
        type: "string"
      - name: "limit"
        in: "query"
        description: |
          The maximum number of items to return in a paginated "List" call.

          Example: `500`

        required: false
        type: "integer"
        default: 16
        format: "int64"
      - name: "page"
        in: "query"
        description: |
          The value of the `opc-next-page` response header from the previous "List" call.

          Example: `3`

        required: false
        type: "string"
      responses:
        200:
          description: The list is being retrieved.
          schema:
            type: "array"
            items:
              $ref: "#/definitions/LoadBalancerShape"
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /loadBalancerWorkRequests/{workRequestId}:
    get:
      summary: "GetWorkRequest"
      tags: ['loadBalancer']
      description: Gets the details of a work request.
      operationId: "GetWorkRequest"
      produces:
      - "application/json"
      parameters:
      - name: "opc-request-id"
        in: "header"
        description: |
          The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
        required: false
        type: "string"
        default: ""
      - name: "workRequestId"
        in: "path"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the work request to retrieve.
        required: true
        type: "string"
      responses:
        200:
          description: The work request is being retrieved.
          schema:
            $ref: "#/definitions/WorkRequest"
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
definitions:
  CreateBackendDetails:
    type: "object"
    required:
    - "ipAddress"
    - "port"
    properties:
      ipAddress:
        type: "string"
        description: |
          The IP address of the backend server.

          Example: `10.10.10.4`

      port:
        type: "integer"
        format: "int32"
        minimum: 1.0
        maximum: 65535.0
        description: |
          The communication port for the backend server.

          Example: `8080`

      weight:
        type: "integer"
        format: "int32"
        description: |
          The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger
          proportion of incoming traffic. For example, a server weighted '3' receives 3 times the number of new connections
          as a server weighted '1'.
          For more information on load balancing policies, see
          [How Load Balancing Policies Work](/Content/Balance/Reference/lbpolicies.htm).

          Example: `3`

      backup:
        type: "boolean"
        default: false
        description: |
          Whether the load balancer should treat this server as a backup unit. If `true`, the load balancer forwards no ingress
          traffic to this backend server unless all other backend servers not marked as "backup" fail the health check policy.

          Example: `true`

      drain:
        type: "boolean"
        default: false
        description: |
          Whether the load balancer should drain this server. Servers marked "drain" receive no new
          incoming traffic.

          Example: `true`

      offline:
        type: "boolean"
        default: false
        description: |
          Whether the load balancer should treat this server as offline. Offline servers receive no incoming
          traffic.

          Example: `true`

    description: |
      The configuration details for creating a backend server in a backend set.
      For more information on backend server configuration, see
      [Managing Backend Servers](/Content/Balance/tasks/managingbackendservers.htm).
  CreateBackendSetDetails:
    type: "object"
    required:
    - "healthChecker"
    - "name"
    - "policy"
    properties:
      name:
        type: "string"
        minLength: 1
        maxLength: 32
        description: |
          A friendly name for the backend set. It must be unique and it cannot be changed.

          Valid backend set names include only alphanumeric characters, dashes, and underscores. Backend set names cannot
          contain spaces. Avoid entering confidential information.

          Example: `My_backend_set`

      policy:
        type: "string"
        description: |
          The load balancer policy for the backend set. To get a list of available policies, use the
          [ListPolicies](#/en/loadbalancer/20170115/LoadBalancerPolicy/ListPolicies) operation.

          Example: `LEAST_CONNECTIONS`

      backends:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/BackendDetails"
      healthChecker:
        $ref: "#/definitions/HealthCheckerDetails"
      sslConfiguration:
        $ref: "#/definitions/SSLConfigurationDetails"
      sessionPersistenceConfiguration:
        $ref: "#/definitions/SessionPersistenceConfigurationDetails"

    description: |
      The configuration details for creating a backend set in a load balancer.
      For more information on backend set configuration, see
      [Managing Backend Sets](/Content/Balance/tasks/managingbackendsets.htm).
  CreateCertificateDetails:
    type: "object"
    required:
    - certificateName
    properties:
      passphrase:
        type: "string"
        description: |
          A passphrase for encrypted private keys. This is needed only if you created your certificate with a passphrase.

          Example: `Mysecretunlockingcode42!1!`

      privateKey:
        type: "string"
        description: |
          The SSL private key for your certificate, in PEM format.

          Example:

              -----BEGIN RSA PRIVATE KEY-----
              jO1O1v2ftXMsawM90tnXwc6xhOAT1gDBC9S8DKeca..JZNUgYYwNS0dP2UK
              tmyN+XqVcAKw4HqVmChXy5b5msu8eIq3uc2NqNVtR..2ksSLukP8pxXcHyb
              +sEwvM4uf8qbnHAqwnOnP9+KV9vds6BaH1eRA4CHz..n+NVZlzBsTxTlS16
              /Umr7wJzVrMqK5sDiSu4WuaaBdqMGfL5hLsTjcBFD..Da2iyQmSKuVD4lIZ
              ...
              -----END RSA PRIVATE KEY-----

      publicCertificate:
        type: "string"
        description: |
          The public certificate, in PEM format, that you received from your SSL certificate provider.

          Example:

              -----BEGIN CERTIFICATE-----
              MIIC2jCCAkMCAg38MA0GCSqGSIb3DQEBBQUAMIGbMQswCQYDVQQGEwJKUDEOMAwG
              A1UECBMFVG9reW8xEDAOBgNVBAcTB0NodW8ta3UxETAPBgNVBAoTCEZyYW5rNERE
              MRgwFgYDVQQLEw9XZWJDZXJ0IFN1cHBvcnQxGDAWBgNVBAMTD0ZyYW5rNEREIFdl
              YiBDQTEjMCEGCSqGSIb3DQEJARYUc3VwcG9ydEBmcmFuazRkZC5jb20wHhcNMTIw
              ...
              -----END CERTIFICATE-----

      caCertificate:
        type: "string"
        description: |
          The Certificate Authority certificate, or any interim certificate, that you received from your SSL certificate provider.

          Example:

              -----BEGIN CERTIFICATE-----
              MIIEczCCA1ugAwIBAgIBADANBgkqhkiG9w0BAQQFAD..AkGA1UEBhMCR0Ix
              EzARBgNVBAgTClNvbWUtU3RhdGUxFDASBgNVBAoTC0..0EgTHRkMTcwNQYD
              VQQLEy5DbGFzcyAxIFB1YmxpYyBQcmltYXJ5IENlcn..XRpb24gQXV0aG9y
              aXR5MRQwEgYDVQQDEwtCZXN0IENBIEx0ZDAeFw0wMD..TUwMTZaFw0wMTAy
              ...
              -----END CERTIFICATE-----

      certificateName:
        type: "string"
        pattern: '^[a-zA-Z0-9_.-]*$'
        minLength: 1
        maxLength: 255
        description: |
          A friendly name for the certificate bundle. It must be unique and it cannot be changed.
          Valid certificate bundle names include only alphanumeric characters, dashes, and underscores.
          Certificate bundle names cannot contain spaces. Avoid entering confidential information.

          Example: `My_certificate_bundle`

    description: |
      The configuration details for adding a certificate bundle to a listener.
      For more information on SSL certficate configuration, see
      [Managing SSL Certificates](/Content/Balance/Tasks/managingcertificates.htm).
  CreateListenerDetails:
    type: "object"
    required:
    - "defaultBackendSetName"
    - "name"
    - "port"
    - "protocol"
    properties:
      defaultBackendSetName:
        type: "string"
        minLength: 1
        maxLength: 32
        description: |
          The name of the associated backend set.

          Example: `My_backend_set`
      port:
        type: "integer"
        format: "int32"
        minimum: 1.0
        maximum: 65535.0
        description: |
          The communication port for the listener.

          Example: `80`

      protocol:
        type: "string"
        description: |
          The protocol on which the listener accepts connection requests.
          To get a list of valid protocols, use the [ListProtocols](#/en/loadbalancer/20170115/LoadBalancerProtocol/ListProtocols)
          operation.

          Example: `HTTP`

      serverName:
        type: "string"
        x-obmcs-feature-id:
        - udx-491
        x-obmcs-internal-only: true
        description: |
          Specifies a virtual host name for this listener.

          Example: `app.example.com`

          This feature supports HTTP and HTTPS listeners only. It does not support TCP listeners.

          You can define an exact virtual server name, as in the preceding example, or you can use a wildcard name. A
          wildcard name includes an asterisk (*) in place of the first or last part of the name. When searching for a
          virtual server name, the service chooses the first matching variant in the following priority order:

          1. Exact name match (no asterisk), such as `app.example.com`.

          2. Longest wildcard name that begins with an asterisk, such as `*.example.com`.

             Note: Prefix wildcard names might require a wildcard certificate for HTTPS sites.

          3. Longest wildcard name that ends with an asterisk, such as `app.example.*`.

             Note: Suffix wildcard names might require a multi-domain Subject Alternative Name (SAN) certificate for HTTPS sites.

          You do not need to specify the matching pattern to apply. It is inherent in the `serverName` asterisk position,
          that is, starting, ending, or none. Server name selection priority is not related to the virtual server's
          configuration order.

          You cannot use regular expressions.

          If a listener has no `serverName` specified, it is the default listener on the assigned port.

          If all listeners on a port have virtual host names, the first virtual host configured for the port serves as
          the default listener.

          For information on the interaction between virtual servers and path route rules, see
          [Managing Request Routing](/Content/Balance/Tasks/managingrequest.htm).

      pathRouteSetName:
        type: "string"
        x-obmcs-feature-id:
        - udx-491
        minLength: 1
        maxLength: 32
        description: |
          The name of the set of path-based routing rules, [PathRouteSet](#/en/loadbalancer/20170115/PathRouteSet/),
          applied to this listener's traffic.

          Example: `path-route-set-001`

      sslConfiguration:
        $ref: "#/definitions/SSLConfigurationDetails"

      connectionConfiguration:
        $ref: "#/definitions/ConnectionConfiguration"

      name:
        type: "string"
        minLength: 1
        maxLength: 255
        description: |
          A friendly name for the listener. It must be unique and it cannot be changed.
          Avoid entering confidential information.

          Example: `My listener`

    description: |
      The configuration details for adding a listener to a backend set.
      For more information on listener configuration, see
      [Managing Load Balancer Listeners](/Content/Balance/tasks/managinglisteners.htm).
  Backend:
    type: "object"
    required:
    - "backup"
    - "drain"
    - "ipAddress"
    - "name"
    - "offline"
    - "port"
    - "weight"
    properties:
      name:
        type: "string"
        readOnly: true
        description: |
          A read-only field showing the IP address and port that uniquely identify this backend server in the backend set.

          Example: `10.10.10.4:8080`

      ipAddress:
        type: "string"
        description: |
          The IP address of the backend server.

          Example: `10.10.10.4`

      port:
        type: "integer"
        format: "int32"
        description: |
          The communication port for the backend server.

          Example: `8080`

      weight:
        type: "integer"
        format: "int32"
        description: |
          The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger
          proportion of incoming traffic. For example, a server weighted '3' receives 3 times the number of new connections
          as a server weighted '1'.
          For more information on load balancing policies, see
          [How Load Balancing Policies Work](/Content/Balance/Reference/lbpolicies.htm).

          Example: `3`

      drain:
        type: "boolean"
        default: false
        description: |
          Whether the load balancer should drain this server. Servers marked "drain" receive no new
          incoming traffic.

          Example: `true`

      backup:
        type: "boolean"
        default: false
        description: |
          Whether the load balancer should treat this server as a backup unit. If `true`, the load balancer forwards no ingress
          traffic to this backend server unless all other backend servers not marked as "backup" fail the health check policy.

          Example: `true`

      offline:
        type: "boolean"
        default: false
        description: |
          Whether the load balancer should treat this server as offline. Offline servers receive no incoming
          traffic.

          Example: `true`

    description: |
      The configuration of a backend server that is a member of a load balancer backend set.
      For more information, see [Managing Backend Servers](/Content/Balance/Tasks/managingbackendservers.htm).
  BackendDetails:
    type: "object"
    required:
    - "ipAddress"
    - "port"
    properties:
      ipAddress:
        type: "string"
        description: |
          The IP address of the backend server.

          Example: `10.10.10.4`

      port:
        type: "integer"
        format: "int32"
        minimum: 1.0
        maximum: 65535.0
        description: |
          The communication port for the backend server.

          Example: `8080`

      weight:
        type: "integer"
        format: "int32"
        description: |
          The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger
          proportion of incoming traffic. For example, a server weighted '3' receives 3 times the number of new connections
          as a server weighted '1'.
          For more information on load balancing policies, see
          [How Load Balancing Policies Work](/Content/Balance/Reference/lbpolicies.htm).

          Example: `3`

      backup:
        type: "boolean"
        default: false
        description: |
          Whether the load balancer should treat this server as a backup unit. If `true`, the load balancer forwards no ingress
          traffic to this backend server unless all other backend servers not marked as "backup" fail the health check policy.

          Example: `true`

      drain:
        type: "boolean"
        default: false
        description: |
          Whether the load balancer should drain this server. Servers marked "drain" receive no new
          incoming traffic.

          Example: `true`

      offline:
        type: "boolean"
        default: false
        description: |
          Whether the load balancer should treat this server as offline. Offline servers receive no incoming
          traffic.

          Example: `true`

    description: The load balancing configuration details of a backend server.
  BackendSet:
    type: "object"
    required:
    - "backends"
    - "healthChecker"
    - "name"
    - "policy"
    properties:
      name:
        type: "string"
        description: |
          A friendly name for the backend set. It must be unique and it cannot be changed.

          Valid backend set names include only alphanumeric characters, dashes, and underscores. Backend set names cannot
          contain spaces. Avoid entering confidential information.

          Example: `My_backend_set`

      policy:
        type: "string"
        description: |
          The load balancer policy for the backend set. To get a list of available policies, use the
          [ListPolicies](#/en/loadbalancer/20170115/LoadBalancerPolicy/ListPolicies) operation.

          Example: `LEAST_CONNECTIONS`

      backends:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/Backend"
      healthChecker:
        $ref: "#/definitions/HealthChecker"
      sslConfiguration:
        $ref: "#/definitions/SSLConfiguration"
      sessionPersistenceConfiguration:
        $ref: "#/definitions/SessionPersistenceConfigurationDetails"
    description: |
      The configuration of a load balancer backend set.
      For more information on backend set configuration, see
      [Managing Backend Sets](/Content/Balance/tasks/managingbackendsets.htm).
  BackendSetDetails:
    type: "object"
    required:
    - "healthChecker"
    - "policy"
    properties:
      policy:
        type: "string"
        description: |
          The load balancer policy for the backend set. To get a list of available policies, use the
          [ListPolicies](#/en/loadbalancer/20170115/LoadBalancerPolicy/ListPolicies) operation.

          Example: `LEAST_CONNECTIONS`

      backends:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/BackendDetails"
      healthChecker:
        $ref: "#/definitions/HealthCheckerDetails"
      sslConfiguration:
        $ref: "#/definitions/SSLConfigurationDetails"
      sessionPersistenceConfiguration:
        $ref: "#/definitions/SessionPersistenceConfigurationDetails"
    description: |
      The configuration details for a load balancer backend set.
      For more information on backend set configuration, see
      [Managing Backend Sets](/Content/Balance/tasks/managingbackendsets.htm).

  HealthCheckResult:
    type: "object"
    required:
    - "subnetId"
    - "sourceIpAddress"
    - "timestamp"
    - "healthCheckStatus"
    properties:
      subnetId:
        type: "string"
        description: |
          The OCID of the subnet hosting the load balancer that reported this health check status.
      sourceIpAddress:
        type: "string"
        description: |
          The IP address of the health check status report provider. This identifier helps you differentiate same-subnet
          (private) load balancers that report health check status.

          Example: `10.2.0.1`
      timestamp:
        type: "string"
        format: "date-time"
        description: |
          The date and time the data was retrieved, in the format defined by RFC3339.

          Example: `2017-06-02T18:28:11+00:00`
      healthCheckStatus:
        type: "string"
        enum:
        - "OK"
        - "INVALID_STATUS_CODE"
        - "TIMED_OUT"
        - "REGEX_MISMATCH"
        - "CONNECT_FAILED"
        - "IO_ERROR"
        - "OFFLINE"
        - "UNKNOWN"
        description: |
          The result of the most recent health check.
    description: |
      Information about a single backend server health check result reported by a load balancer.

  BackendHealth:
    type: "object"
    required:
    - "status"
    - "healthCheckResults"
    properties:
      status:
        type: "string"
        enum:
        - "OK"
        - "WARNING"
        - "CRITICAL"
        - "UNKNOWN"
        description: |
          The general health status of the specified backend server as reported by the primary and standby load balancers.

          *   **OK:** Both health checks returned `OK`.

          *   **WARNING:** One health check returned `OK` and one did not.

          *   **CRITICAL:** Neither health check returned `OK`.

          *   **UNKNOWN:** One or both health checks returned `UNKNOWN`, or the system was unable to retrieve metrics at this time.

      healthCheckResults:
        type: "array"
        items:
          $ref: "#/definitions/HealthCheckResult"
        description: |
          A list of the most recent health check results returned for the specified backend server.
    description: |
      The health status of the specified backend server as reported by the primary and standby load balancers.

  BackendSetHealth:
    type: "object"
    required:
    - "status"
    - "warningStateBackendNames"
    - "criticalStateBackendNames"
    - "unknownStateBackendNames"
    - "totalBackendCount"
    properties:
      status:
        type: "string"
        enum:
        - "OK"
        - "WARNING"
        - "CRITICAL"
        - "UNKNOWN"
        description: |
          Overall health status of the backend set.

          *  **OK:** All backend servers in the backend set return a status of `OK`.

          *  **WARNING:** Half or more of the backend set's backend servers return a status of `OK` and at least one backend
          server returns a status of `WARNING`, `CRITICAL`, or `UNKNOWN`.

          *  **CRITICAL:** Fewer than half of the backend set's backend servers return a status of `OK`.

          *  **UNKNOWN:** More than half of the backend set's backend servers return a status of `UNKNOWN`, the system was
          unable to retrieve metrics, or the backend set does not have a listener attached.

      warningStateBackendNames:
        type: "array"
        items:
          type: "string"
        description: |
          A list of backend servers that are currently in the `WARNING` health state. The list identifies each backend server by
          IP address and port.

          Example: `1.1.1.7:42`
      criticalStateBackendNames:
        type: "array"
        items:
          type: "string"
        description: |
          A list of backend servers that are currently in the `CRITICAL` health state. The list identifies each backend server by
          IP address and port.

          Example: `1.1.1.1:80`
      unknownStateBackendNames:
        type: "array"
        items:
          type: "string"
        description: |
          A list of backend servers that are currently in the `UNKNOWN` health state. The list identifies each backend server by
          IP address and port.

          Example: `1.1.1.5:80`
      totalBackendCount:
        type: "integer"
        description: |
          The total number of backend servers in this backend set.

          Example: `5`
    description: |
      The health status details for a backend set.

      This object does not explicitly enumerate backend servers with a status of `OK`. However, they are included in the
      `totalBackendCount` sum.

  LoadBalancerHealth:
    type: "object"
    required:
    - "status"
    - "warningStateBackendSetNames"
    - "criticalStateBackendSetNames"
    - "unknownStateBackendSetNames"
    - "totalBackendSetCount"
    properties:
      status:
        type: "string"
        enum:
        - "OK"
        - "WARNING"
        - "CRITICAL"
        - "UNKNOWN"
        description: |
          The overall health status of the load balancer.

          *  **OK:** All backend sets associated with the load balancer return a status of `OK`.

          *  **WARNING:** At least one of the backend sets associated with the load balancer returns a status of `WARNING`,
          no backend sets return a status of `CRITICAL`, and the load balancer life cycle state is `ACTIVE`.

          *  **CRITICAL:** One or more of the backend sets associated with the load balancer return a status of `CRITICAL`.

          *  **UNKNOWN:** If any one of the following conditions is true:

              *  The load balancer life cycle state is not `ACTIVE`.

              *  No backend sets are defined for the load balancer.

              *  More than half of the backend sets associated with the load balancer return a status of `UNKNOWN`, none of the backend
                 sets return a status of `WARNING` or `CRITICAL`, and the load balancer life cycle state is `ACTIVE`.

              *  The system could not retrieve metrics for any reason.

      warningStateBackendSetNames:
        type: "array"
        items:
          type: "string"
        description: |
          A list of backend sets that are currently in the `WARNING` health state. The list identifies each backend set by the
          friendly name you assigned when you created it.

          Example: `Backend_set3`
      criticalStateBackendSetNames:
        type: "array"
        items:
          type: "string"
        description: |
          A list of backend sets that are currently in the `CRITICAL` health state. The list identifies each backend set by the
          friendly name you assigned when you created it.

          Example: `My_backend_set`
      unknownStateBackendSetNames:
        type: "array"
        items:
          type: "string"
        description: |
          A list of backend sets that are currently in the `UNKNOWN` health state. The list identifies each backend set by the
          friendly name you assigned when you created it.

          Example: `Backend_set2`
      totalBackendSetCount:
        type: "integer"
        description: |
          The total number of backend sets associated with this load balancer.

          Example: `4`
    description: |
      The health status details for the specified load balancer.

      This object does not explicitly enumerate backend sets with a status of `OK`. However, they are included in the
      `totalBackendSetCount` sum.

  LoadBalancerHealthSummary:
    type: "object"
    required:
    - loadBalancerId
    - "status"
    properties:
      loadBalancerId:
        type: "string"
        description: |
          The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer the health status is associated with.
      status:
        type: "string"
        enum:
        - "OK"
        - "WARNING"
        - "CRITICAL"
        - "UNKNOWN"
        description: |
          The overall health status of the load balancer.

          *  **OK:** All backend sets associated with the load balancer return a status of `OK`.

          *  **WARNING:** At least one of the backend sets associated with the load balancer returns a status of `WARNING`,
          no backend sets return a status of `CRITICAL`, and the load balancer life cycle state is `ACTIVE`.

          *  **CRITICAL:** One or more of the backend sets associated with the load balancer return a status of `CRITICAL`.

          *  **UNKNOWN:** If any one of the following conditions is true:

              *  The load balancer life cycle state is not `ACTIVE`.

              *  No backend sets are defined for the load balancer.

              *  More than half of the backend sets associated with the load balancer return a status of `UNKNOWN`, none of the backend
                 sets return a status of `WARNING` or `CRITICAL`, and the load balancer life cycle state is `ACTIVE`.

              *  The system could not retrieve metrics for any reason.

    description:
      A health status summary for the specified load balancer.

  Certificate:
    type: "object"
    required:
    - "caCertificate"
    - "certificateName"
    - "publicCertificate"
    properties:
      certificateName:
        type: "string"
        pattern: '^[a-zA-Z0-9_.-]*$'
        minLength: 1
        maxLength: 255
        description: |
          A friendly name for the certificate bundle. It must be unique and it cannot be changed.
          Valid certificate bundle names include only alphanumeric characters, dashes, and underscores.
          Certificate bundle names cannot contain spaces. Avoid entering confidential information.

          Example: `My_certificate_bundle`

      publicCertificate:
        type: "string"
        description: |
          The public certificate, in PEM format, that you received from your SSL certificate provider.

          Example:

              -----BEGIN CERTIFICATE-----
              MIIC2jCCAkMCAg38MA0GCSqGSIb3DQEBBQUAMIGbMQswCQYDVQQGEwJKUDEOMAwG
              A1UECBMFVG9reW8xEDAOBgNVBAcTB0NodW8ta3UxETAPBgNVBAoTCEZyYW5rNERE
              MRgwFgYDVQQLEw9XZWJDZXJ0IFN1cHBvcnQxGDAWBgNVBAMTD0ZyYW5rNEREIFdl
              YiBDQTEjMCEGCSqGSIb3DQEJARYUc3VwcG9ydEBmcmFuazRkZC5jb20wHhcNMTIw
              ...
              -----END CERTIFICATE-----

      caCertificate:
        type: "string"
        description: |
          The Certificate Authority certificate, or any interim certificate, that you received from your SSL certificate provider.

          Example:

              -----BEGIN CERTIFICATE-----
              MIIEczCCA1ugAwIBAgIBADANBgkqhkiG9w0BAQQFAD..AkGA1UEBhMCR0Ix
              EzARBgNVBAgTClNvbWUtU3RhdGUxFDASBgNVBAoTC0..0EgTHRkMTcwNQYD
              VQQLEy5DbGFzcyAxIFB1YmxpYyBQcmltYXJ5IENlcn..XRpb24gQXV0aG9y
              aXR5MRQwEgYDVQQDEwtCZXN0IENBIEx0ZDAeFw0wMD..TUwMTZaFw0wMTAy
              ...
              -----END CERTIFICATE-----

    description: |
      The configuration details of a listener certificate bundle.
      For more information on SSL certficate configuration, see
      [Managing SSL Certificates](/Content/Balance/Tasks/managingcertificates.htm).
  CertificateDetails:
    type: "object"
    required:
    - certificateName
    properties:
      passphrase:
        type: "string"
        description: |
          A passphrase for encrypted private keys. This is needed only if you created your certificate with a passphrase.

          Example: `Mysecretunlockingcode42!1!`

      privateKey:
        type: "string"
        description: |
          The SSL private key for your certificate, in PEM format.

          Example:

              -----BEGIN RSA PRIVATE KEY-----
              jO1O1v2ftXMsawM90tnXwc6xhOAT1gDBC9S8DKeca..JZNUgYYwNS0dP2UK
              tmyN+XqVcAKw4HqVmChXy5b5msu8eIq3uc2NqNVtR..2ksSLukP8pxXcHyb
              +sEwvM4uf8qbnHAqwnOnP9+KV9vds6BaH1eRA4CHz..n+NVZlzBsTxTlS16
              /Umr7wJzVrMqK5sDiSu4WuaaBdqMGfL5hLsTjcBFD..Da2iyQmSKuVD4lIZ
              ...
              -----END RSA PRIVATE KEY-----

      publicCertificate:
        type: "string"
        description: |
          The public certificate, in PEM format, that you received from your SSL certificate provider.

          Example:

              -----BEGIN CERTIFICATE-----
              MIIC2jCCAkMCAg38MA0GCSqGSIb3DQEBBQUAMIGbMQswCQYDVQQGEwJKUDEOMAwG
              A1UECBMFVG9reW8xEDAOBgNVBAcTB0NodW8ta3UxETAPBgNVBAoTCEZyYW5rNERE
              MRgwFgYDVQQLEw9XZWJDZXJ0IFN1cHBvcnQxGDAWBgNVBAMTD0ZyYW5rNEREIFdl
              YiBDQTEjMCEGCSqGSIb3DQEJARYUc3VwcG9ydEBmcmFuazRkZC5jb20wHhcNMTIw
              ...
              -----END CERTIFICATE-----

      caCertificate:
        type: "string"
        description: |
          The Certificate Authority certificate, or any interim certificate, that you received from your SSL certificate provider.

          Example:

              -----BEGIN CERTIFICATE-----
              MIIEczCCA1ugAwIBAgIBADANBgkqhkiG9w0BAQQFAD..AkGA1UEBhMCR0Ix
              EzARBgNVBAgTClNvbWUtU3RhdGUxFDASBgNVBAoTC0..0EgTHRkMTcwNQYD
              VQQLEy5DbGFzcyAxIFB1YmxpYyBQcmltYXJ5IENlcn..XRpb24gQXV0aG9y
              aXR5MRQwEgYDVQQDEwtCZXN0IENBIEx0ZDAeFw0wMD..TUwMTZaFw0wMTAy
              ...
              -----END CERTIFICATE-----

      certificateName:
        type: "string"
        pattern: '^[a-zA-Z0-9_.-]*$'
        minLength: 1
        maxLength: 255
        description: |
          A friendly name for the certificate bundle. It must be unique and it cannot be changed.
          Valid certificate bundle names include only alphanumeric characters, dashes, and underscores.
          Certificate bundle names cannot contain spaces. Avoid entering confidential information.

          Example: `My_certificate_bundle`

    description: |
      The configuration details for a listener certificate bundle.
      For more information on SSL certficate configuration, see
      [Managing SSL Certificates](/Content/Balance/Tasks/managingcertificates.htm).
  CreateLoadBalancerDetails:
    type: "object"
    required:
    - "compartmentId"
    - "displayName"
    - "shapeName"
    - "subnetIds"
    properties:
      compartmentId:
        type: "string"
        minLength: 1
        maxLength: 255
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the compartment in which to create the load balancer.
      displayName:
        type: "string"
        minLength: 1
        maxLength: 1024
        description: |
          A user-friendly name. It does not have to be unique, and it is changeable.
          Avoid entering confidential information.

          Example: `My load balancer`

      shapeName:
        type: "string"
        description: |
          A template that determines the total pre-provisioned bandwidth (ingress plus egress).
          To get a list of available shapes, use the [ListShapes](#/en/loadbalancer/20170115/LoadBalancerShape/ListShapes)
          operation.

          Example: `100Mbps`
      isPrivate:
        type: "boolean"
        description: |
          Whether the load balancer has a VCN-local (private) IP address.

          If "true", the service assigns a private IP address to the load balancer. The load balancer requires only one subnet
          to host both the primary and secondary load balancers. The private IP address is local to the subnet. The load balancer
          is accessible only from within the VCN that contains the associated subnet, or as further restricted by your security
          list rules. The load balancer can route traffic to any backend server that is reachable from the VCN.

          For a private load balancer, both the primary and secondary load balancer hosts are within the same Availability Domain.

          If "false", the service assigns a public IP address to the load balancer. A load balancer with a public IP address
          requires two subnets, each in a different Availability Domain. One subnet hosts the primary load balancer and the other
          hosts the secondary (standby) load balancer. A public load balancer is accessible from the internet, depending on your
          VCN's [security list rules](/Content/Network/Concepts/securitylists.htm).

          Example: `false`
        default: false
      listeners:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/ListenerDetails"
      backendSets:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/BackendSetDetails"
      subnetIds:
        type: "array"
        description: An array of subnet [OCIDs](/Content/General/Concepts/identifiers.htm).
        items:
          type: "string"
          minLength: 1
          maxLength: 255
      certificates:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/CertificateDetails"
      pathRouteSets:
        type: "object"
        x-obmcs-feature-id:
        - udx-491
        additionalProperties:
          $ref: "#/definitions/PathRouteSetDetails"
    description: The configuration details for creating a load balancer.
  Error:
    properties:
      code:
        type: string
        description: |
          A short error code that defines the error, meant for programmatic parsing. See
          [API Errors](/Content/API/References/apierrors.htm).
      message:
        type: string
        description: A human-readable error string.
    required:
    - code
    - message
  HealthChecker:
    type: "object"
    required:
    - "port"
    - "protocol"
    - "responseBodyRegex"
    - "returnCode"
    properties:
      protocol:
        type: "string"
        description: |
          The protocol the health check must use; either HTTP or TCP.

          Example: `HTTP`

      urlPath:
        type: "string"
        description: |
          The path against which to run the health check.

          Example: `/healthcheck`

      port:
        type: "integer"
        format: "int32"
        example: "0"
        description: |
          The backend server port against which to run the health check. If the port is not specified, the load balancer uses the
          port information from the `Backend` object.

          Example: `8080`

      returnCode:
        type: "integer"
        format: "int32"
        example: "0"
        description: |
          The status code a healthy backend server should return. If you configure the health check policy to use the HTTP protocol,
          you can use common HTTP status codes such as "200".

          Example: `200`

      retries:
        type: "integer"
        format: "int32"
        description: |
          The number of retries to attempt before a backend server is considered "unhealthy". Defaults to 3.

          Example: `3`

      timeoutInMillis:
        type: "integer"
        format: "int32"
        description: |
          The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply
          returns within this timeout period. Defaults to 3000 (3 seconds).

          Example: `6000`

      intervalInMillis:
        type: "integer"
        format: "int32"
        description: |
          The interval between health checks, in milliseconds. The default is 10000 (10 seconds).

          Example: `30000`

      responseBodyRegex:
        type: "string"
        description: |
          A regular expression for parsing the response body from the backend server.

          Example: `^(500|40[1348])$`

    description: |
      The health check policy configuration.
      For more information, see [Editing Health Check Policies](/Content/Balance/Tasks/editinghealthcheck.htm).
  HealthCheckerDetails:
    type: "object"
    required:
    - "protocol"
    properties:
      protocol:
        type: "string"
        description: |
          The protocol the health check must use; either HTTP or TCP.

          Example: `HTTP`

      urlPath:
        type: "string"
        maxLength: 1024
        description: |
          The path against which to run the health check.

          Example: `/healthcheck`

      port:
        type: "integer"
        format: "int32"
        minimum: 0.0
        maximum: 65535.0
        description: |
          The backend server port against which to run the health check. If the port is not specified, the load balancer uses the
          port information from the `Backend` object.

          Example: `8080`

      returnCode:
        type: "integer"
        format: "int32"
        description: |
          The status code a healthy backend server should return.

          Example: `200`

      retries:
        type: "integer"
        format: "int32"
        description: |
          The number of retries to attempt before a backend server is considered "unhealthy".

          Example: `3`

      timeoutInMillis:
        type: "integer"
        format: "int32"
        minimum: 1.0
        maximum: 600000.0
        description: |
          The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply
          returns within this timeout period.

          Example: `6000`

      intervalInMillis:
        type: "integer"
        format: "int32"
        minimum: 1000.0
        maximum: 1800000.0
        description: |
          The interval between health checks, in milliseconds.

          Example: `30000`

      responseBodyRegex:
        type: "string"
        maxLength: 255
        description: |
          A regular expression for parsing the response body from the backend server.

          Example: `^(500|40[1348])$`

    description: The health check policy's configuration details.
  IpAddress:
    properties:
      ipAddress:
        type: string
        description: |
          An IP address.

          Example: `128.148.10.20`
      isPublic:
        type: "boolean"
        description: |
          Whether the IP address is public or private.

          If "true", the IP address is public and accessible from the internet.

          If "false", the IP address is private and accessible only from within the associated VCN.
    required:
    - "ipAddress"
    description:  A load balancer IP address.
  Listener:
    type: "object"
    required:
    - "defaultBackendSetName"
    - "name"
    - "port"
    - "protocol"
    properties:
      name:
        type: "string"
        description: |
          A friendly name for the listener. It must be unique and it cannot be changed.

          Example: `My listener`

      defaultBackendSetName:
        type: "string"
        description: |
          The name of the associated backend set.

          Example: `My_backend_set`
      port:
        type: "integer"
        format: "int32"
        example: "0"
        description: |
          The communication port for the listener.

          Example: `80`

      protocol:
        type: "string"
        description: |
          The protocol on which the listener accepts connection requests.
          To get a list of valid protocols, use the [ListProtocols](#/en/loadbalancer/20170115/LoadBalancerProtocol/ListProtocols)
          operation.

          Example: `HTTP`

      serverName:
        type: "string"
        x-obmcs-feature-id:
        - udx-491
        x-obmcs-internal-only: true
        description: |
          Specifies a virtual host name for this listener.

          Example: `app.example.com`

          This feature supports HTTP and HTTPS listeners only. It does not support TCP listeners.

          You can define an exact virtual server name, as in the preceding example, or you can use a wildcard name. A
          wildcard name includes an asterisk (*) in place of the first or last part of the name. When searching for a
          virtual server name, the service chooses the first matching variant in the following priority order:

          1. Exact name match (no asterisk), such as `app.example.com`.

          2. Longest wildcard name that begins with an asterisk, such as `*.example.com`.

             Note: Prefix wildcard names might require a wildcard certificate for HTTPS sites.

          3. Longest wildcard name that ends with an asterisk, such as `app.example.*`.

             Note: Suffix wildcard names might require a multi-domain Subject Alternative Name (SAN) certificate for HTTPS sites.

          You do not need to specify the matching pattern to apply. It is inherent in the `serverName` asterisk position,
          that is, starting, ending, or none. Server name selection priority is not related to the virtual server's
          configuration order.

          You cannot use regular expressions.

          If a listener has no `serverName` specified, it is the default listener on the assigned port.

          If all listeners on a port have virtual host names, the first virtual host configured for the port serves as
          the default listener.

          For information on the interaction between virtual servers and path route rules, see
          [Managing Request Routing](/Content/Balance/Tasks/managingrequest.htm).

      pathRouteSetName:
        type: "string"
        x-obmcs-feature-id:
        - udx-491
        minLength: 1
        maxLength: 32
        description: |
          The name of the set of path-based routing rules, [PathRouteSet](#/en/loadbalancer/20170115/PathRouteSet/),
          applied to this listener's traffic.

          Example: `path-route-set-001`

      sslConfiguration:
        $ref: "#/definitions/SSLConfiguration"

      connectionConfiguration:
        $ref: "#/definitions/ConnectionConfiguration"
    description: |
      The listener's configuration.
      For more information on backend set configuration, see
      [Managing Load Balancer Listeners](/Content/Balance/tasks/managinglisteners.htm).
  ListenerDetails:
    type: "object"
    required:
    - "defaultBackendSetName"
    - "port"
    - "protocol"
    properties:
      defaultBackendSetName:
        type: "string"
        minLength: 1
        maxLength: 32
        description: |
          The name of the associated backend set.

          Example: `My_backend_set`
      port:
        type: "integer"
        format: "int32"
        minimum: 1.0
        maximum: 65535.0
        description: |
          The communication port for the listener.

          Example: `80`

      protocol:
        type: "string"
        description: |
          The protocol on which the listener accepts connection requests.
          To get a list of valid protocols, use the [ListProtocols](#/en/loadbalancer/20170115/LoadBalancerProtocol/ListProtocols)
          operation.

          Example: `HTTP`

      serverName:
        type: "string"
        x-obmcs-feature-id:
        - udx-491
        x-obmcs-internal-only: true
        description: |
          Specifies a virtual host name for this listener.

          Example: `app.example.com`

          This feature supports HTTP and HTTPS listeners only. It does not support TCP listeners.

          You can define an exact virtual server name, as in the preceding example, or you can use a wildcard name. A
          wildcard name includes an asterisk (*) in place of the first or last part of the name. When searching for a
          virtual server name, the service chooses the first matching variant in the following priority order:

          1. Exact name match (no asterisk), such as `app.example.com`.

          2. Longest wildcard name that begins with an asterisk, such as `*.example.com`.

             Note: Prefix wildcard names might require a wildcard certificate for HTTPS sites.

          3. Longest wildcard name that ends with an asterisk, such as `app.example.*`.

             Note: Suffix wildcard names might require a multi-domain Subject Alternative Name (SAN) certificate for HTTPS sites.

          You do not need to specify the matching pattern to apply. It is inherent in the `serverName` asterisk position,
          that is, starting, ending, or none. Server name selection priority is not related to the virtual server's
          configuration order.

          You cannot use regular expressions.

          If a listener has no `serverName` specified, it is the default listener on the assigned port.

          If all listeners on a port have virtual host names, the first virtual host configured for the port serves as
          the default listener.

          For information on the interaction between virtual servers and path route rules, see
          [Managing Request Routing](/Content/Balance/Tasks/managingrequest.htm).

      pathRouteSetName:
        type: "string"
        x-obmcs-feature-id:
        - udx-491
        minLength: 1
        maxLength: 32
        description: |
          The name of the set of path-based routing rules, [PathRouteSet](#/en/loadbalancer/20170115/PathRouteSet/),
          applied to this listener's traffic.

          Example: `path-route-set-001`

      sslConfiguration:
        $ref: "#/definitions/SSLConfigurationDetails"

      connectionConfiguration:
        $ref: "#/definitions/ConnectionConfiguration"

    description: The listener's configuration details.
  LoadBalancer:
    type: "object"
    required:
    - "id"
    - "compartmentId"
    - "lifecycleState"
    - "displayName"
    - "shapeName"
    - "timeCreated"
    properties:
      id:
        type: "string"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer.
      compartmentId:
        type: "string"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the compartment containing the load balancer.
      displayName:
        type: "string"
        description: |
          A user-friendly name. It does not have to be unique, and it is changeable.

          Example: `My load balancer`

      lifecycleState:
        type: "string"
        description: |
          The current state of the load balancer.
        enum:
        - "CREATING"
        - "FAILED"
        - "ACTIVE"
        - "DELETING"
        - "DELETED"
      timeCreated:
        type: "string"
        format: "date-time"
        description:  |
          The date and time the load balancer was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`

      ipAddresses:
        type: "array"
        description: |
          An array of IP addresses.
        uniqueItems: true
        items:
          $ref: "#/definitions/IpAddress"

      shapeName:
        type: "string"
        description: |
          A template that determines the total pre-provisioned bandwidth (ingress plus egress).
          To get a list of available shapes, use the [ListShapes](#/en/loadbalancer/20170115/LoadBalancerShape/ListShapes)
          operation.

          Example: `100Mbps`
      isPrivate:
        type: "boolean"
        description: |
          Whether the load balancer has a VCN-local (private) IP address.

          If "true", the service assigns a private IP address to the load balancer. The load balancer requires only one subnet
          to host both the primary and secondary load balancers. The private IP address is local to the subnet. The load balancer
          is accessible only from within the VCN that contains the associated subnet, or as further restricted by your security
          list rules. The load balancer can route traffic to any backend server that is reachable from the VCN.

          For a private load balancer, both the primary and secondary load balancer hosts are within the same Availability Domain.

          If "false", the service assigns a public IP address to the load balancer. A load balancer with a public IP address
          requires two subnets, each in a different Availability Domain. One subnet hosts the primary load balancer and the other
          hosts the secondary (standby) load balancer. A public load balancer is accessible from the internet, depending on your
          VCN's [security list rules](/Content/Network/Concepts/securitylists.htm).
      subnetIds:
        type: "array"
        description: An array of subnet [OCIDs](/Content/General/Concepts/identifiers.htm).
        items:
          type: "string"
      listeners:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Listener"
      certificates:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/Certificate"
      backendSets:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/BackendSet"
      pathRouteSets:
        type: "object"
        x-obmcs-feature-id:
        - udx-491
        additionalProperties:
          $ref: "#/definitions/PathRouteSet"
    description: |
      The properties that define a load balancer. For more information, see
      [Managing a Load Balancer](/Content/Balance/Tasks/managingloadbalancer.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).

      For information about endpoints and signing API requests, see
      [About the API](/Content/API/Concepts/usingapi.htm). For information about available SDKs and tools, see
      [SDKS and Other Tools](/Content/API/Concepts/sdks.htm).

  LoadBalancerProtocol:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: The name of the protocol.

    description: The protocol that defines the type of traffic accepted by a listener.
  LoadBalancerPolicy:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: The name of the load balancing policy.

    description: |
      A policy that determines how traffic is distributed among backend servers.
      For more information on load balancing policies, see
      [How Load Balancing Policies Work](/Content/Balance/Reference/lbpolicies.htm).
  SSLConfiguration:
    type: "object"
    required:
    - "certificateName"
    - "verifyDepth"
    - "verifyPeerCertificate"
    properties:
      certificateName:
        type: "string"
        pattern: '^[a-zA-Z0-9_.-]*$'
        minLength: 1
        maxLength: 255
        description: |
          A friendly name for the certificate bundle. It must be unique and it cannot be changed.
          Valid certificate bundle names include only alphanumeric characters, dashes, and underscores.
          Certificate bundle names cannot contain spaces. Avoid entering confidential information.

          Example: `My_certificate_bundle`

      verifyPeerCertificate:
        type: "boolean"
        example: "true"
        description: |
          Whether the load balancer listener should verify peer certificates.

          Example: `true`

        default: false
      verifyDepth:
        type: "integer"
        format: "int32"
        description: |
          The maximum depth for peer certificate chain verification.

          Example: `3`

    description: |
      A listener's SSL handling configuration.

      To use SSL, a listener must be associated with a [certificate bundle](#/en/loadbalancer/20170115/Certificate/).
  SSLConfigurationDetails:
    type: "object"
    required:
    - "certificateName"
    properties:
      certificateName:
        type: "string"
        pattern: '^[a-zA-Z0-9_.-]*$'
        minLength: 1
        maxLength: 255
        description: |
          A friendly name for the certificate bundle. It must be unique and it cannot be changed.
          Valid certificate bundle names include only alphanumeric characters, dashes, and underscores.
          Certificate bundle names cannot contain spaces. Avoid entering confidential information.

          Example: `My_certificate_bundle`

      verifyPeerCertificate:
        type: "boolean"
        default: false
        description: |
          Whether the load balancer listener should verify peer certificates.

          Example: `true`

      verifyDepth:
        type: "integer"
        format: "int32"
        description: |
          The maximum depth for peer certificate chain verification.

          Example: `3`

    description: The load balancer's SSL handling configuration details.
  ConnectionConfiguration:
    type: "object"
    required:
    - "idleTimeout"
    properties:
      idleTimeout:
        type: "integer"
        minimum: 1.0
        format: "int64"
        description: |
          The maximum idle time, in seconds, allowed between two successive receive or two successive send operations
          between the client and backend servers. A send operation does not reset the timer for receive operations. A
          receive operation does not reset the timer for send operations.
          
          The default values are:
          
          *  300 seconds for TCP
          
          *  60 seconds for HTTP and WebSocket protocols.
          
          Note: The protocol is set at the listener.
          
          Modify this parameter if the client or backend server stops transmitting data for more than the default time.
          Some examples include:
          
          *  The client sends a database query to the backend server and the database takes over 300 seconds to execute.
             Therefore, the backend server does not transmit any data within 300 seconds.
          
          *  The client uploads data using the HTTP protocol. During the upload, the backend does not transmit any data
             to the client for more than 60 seconds.
          
          *  The client downloads data using the HTTP protocol.  After the initial request, it stops transmitting data to
             the backend server for more than 60 seconds.
          
          *  The client starts transmitting data after establishing a WebSocket connection, but the backend server does
             not transmit data for more than 60 seconds.
          
          *  The backend server starts transmitting data after establishing a WebSocket connection, but the client does
             not transmit data for more than 60 seconds.
          
          The maximum value is 7200 seconds. Contact My Oracle Support to file a service request if you want to increase
          this limit for your tenancy. For more information, see [Service Limits](/Content/General/Concepts/servicelimits.htm).
          
          Example: `1200`

    description: |
      Configuration details for the connection between the client and backend servers.
  SessionPersistenceConfigurationDetails:
    type: "object"
    required:
        - "cookieName"
    properties:
      cookieName:
          type: "string"
          minLength: 1
          maxLength: 4096
          description: |
            The name of the cookie used to detect a session initiated by the backend server. Use '*' to specify
            that any cookie set by the backend causes the session to persist.

            Example: `myCookieName`

      disableFallback:
          type: "boolean"
          default: false
          description: |
            Whether the load balancer is prevented from directing traffic from a persistent session client to
            a different backend server if the original server is unavailable. Defaults to false.

            Example: `true`

    description: |
      The configuration details for implementing session persistence. Session persistence enables the Load Balancing
      Service to direct any number of requests that originate from a single logical client to a single backend web server.
      For more information, see [Session Persistence](/Content/Balance/Reference/sessionpersistence.htm).

      To disable session persistence on a running load balancer, use the
      [UpdateBackendSet](#/en/loadbalancer/20170115/BackendSet/UpdateBackendSet) operation and specify "null" for the
      `SessionPersistenceConfigurationDetails` object.

      Example: `SessionPersistenceConfigurationDetails: null`
  LoadBalancerShape:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: The name of the shape.

    description: |
      A shape is a template that determines the total pre-provisioned bandwidth (ingress plus egress) for the
      load balancer.

      Note that the pre-provisioned maximum capacity applies to aggregated connections, not to a single client
      attempting to use the full bandwidth.
  UpdateBackendDetails:
    type: "object"
    required:
    - "weight"
    - "backup"
    - "drain"
    - "offline"
    properties:
      weight:
        type: "integer"
        format: "int32"
        description: |
          The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger
          proportion of incoming traffic. For example, a server weighted '3' receives 3 times the number of new connections
          as a server weighted '1'.
          For more information on load balancing policies, see
          [How Load Balancing Policies Work](/Content/Balance/Reference/lbpolicies.htm).

          Example: `3`

      backup:
        type: "boolean"
        default: false
        description: |
          Whether the load balancer should treat this server as a backup unit. If `true`, the load balancer forwards no ingress
          traffic to this backend server unless all other backend servers not marked as "backup" fail the health check policy.

          Example: `true`

      drain:
        type: "boolean"
        default: false
        description: |
          Whether the load balancer should drain this server. Servers marked "drain" receive no new
          incoming traffic.

          Example: `true`

      offline:
        type: "boolean"
        default: false
        description: |
          Whether the load balancer should treat this server as offline. Offline servers receive no incoming
          traffic.

          Example: `true`

    description: The configuration details for updating a backend server.
  UpdateBackendSetDetails:
    type: "object"
    required:
    - "policy"
    - "backends"
    - "healthChecker"
    properties:
      policy:
        type: "string"
        description: |
          The load balancer policy for the backend set. To get a list of available policies, use the
          [ListPolicies](#/en/loadbalancer/20170115/LoadBalancerPolicy/ListPolicies) operation.

          Example: `LEAST_CONNECTIONS`

      backends:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/BackendDetails"
      healthChecker:
        $ref: "#/definitions/HealthCheckerDetails"
      sslConfiguration:
        $ref: "#/definitions/SSLConfigurationDetails"
      sessionPersistenceConfiguration:
        $ref: "#/definitions/SessionPersistenceConfigurationDetails"
    description: |
      The configuration details for updating a load balancer backend set.
      For more information on backend set configuration, see
      [Managing Backend Sets](/Content/Balance/tasks/managingbackendsets.htm).

  UpdateHealthCheckerDetails:
    type: "object"
    required:
    - "protocol"
    - "port"
    - "returnCode"
    - "retries"
    - "timeoutInMillis"
    - "intervalInMillis"
    - "responseBodyRegex"
    properties:
      protocol:
        type: "string"
        description: |
          The protocol the health check must use; either HTTP or TCP.

          Example: `HTTP`

      urlPath:
        type: "string"
        maxLength: 1024
        description: |
          The path against which to run the health check.

          Example: `/healthcheck`

      port:
        type: "integer"
        format: "int32"
        minimum: 0.0
        maximum: 65535.0
        description: |
          The backend server port against which to run the health check.

          Example: `8080`

      returnCode:
        type: "integer"
        format: "int32"
        description: |
          The status code a healthy backend server should return.

          Example: `200`

      retries:
        type: "integer"
        format: "int32"
        description: |
          The number of retries to attempt before a backend server is considered "unhealthy".

          Example: `3`

      timeoutInMillis:
        type: "integer"
        format: "int32"
        minimum: 1.0
        maximum: 600000.0
        description: |
          The maximum time, in milliseconds, to wait for a reply to a health check. A health check is successful only if a reply
          returns within this timeout period.

          Example: `6000`

      intervalInMillis:
        type: "integer"
        format: "int32"
        minimum: 1000.0
        maximum: 1800000.0
        description: |
          The interval between health checks, in milliseconds.

          Example: `30000`

      responseBodyRegex:
        type: "string"
        maxLength: 255
        description: |
          A regular expression for parsing the response body from the backend server.

          Example: `^(500|40[1348])$`

    description: The health checker's configuration details.

  UpdateListenerDetails:
    type: "object"
    required:
    - "defaultBackendSetName"
    - "port"
    - "protocol"
    properties:
      defaultBackendSetName:
        type: "string"
        minLength: 1
        maxLength: 32
        description: |
          The name of the associated backend set.

          Example: `My_backend_set`
      port:
        type: "integer"
        format: "int32"
        minimum: 1.0
        maximum: 65535.0
        description: |
          The communication port for the listener.

          Example: `80`

      protocol:
        type: "string"
        description: |
          The protocol on which the listener accepts connection requests.
          To get a list of valid protocols, use the [ListProtocols](#/en/loadbalancer/20170115/LoadBalancerProtocol/ListProtocols)
          operation.

          Example: `HTTP`

      serverName:
        type: "string"
        x-obmcs-feature-id:
        - udx-491
        x-obmcs-internal-only: true
        description: |
          Specifies a virtual host name for this listener.

          Example: `app.example.com`

          This feature supports HTTP and HTTPS listeners only. It does not support TCP listeners.

          You can define an exact virtual server name, as in the preceding example, or you can use a wildcard name. A
          wildcard name includes an asterisk (*) in place of the first or last part of the name. When searching for a
          virtual server name, the service chooses the first matching variant in the following priority order:

          1. Exact name match (no asterisk), such as `app.example.com`.

          2. Longest wildcard name that begins with an asterisk, such as `*.example.com`.

             Note: Prefix wildcard names might require a wildcard certificate for HTTPS sites.

          3. Longest wildcard name that ends with an asterisk, such as `app.example.*`.

             Note: Suffix wildcard names might require a multi-domain Subject Alternative Name (SAN) certificate for HTTPS sites.

          You do not need to specify the matching pattern to apply. It is inherent in the `serverName` asterisk position,
          that is, starting, ending, or none. Server name selection priority is not related to the virtual server's
          configuration order.

          You cannot use regular expressions.

          If a listener has no `serverName` specified, it is the default listener on the assigned port.

          If all listeners on a port have virtual host names, the first virtual host configured for the port serves as
          the default listener.

          For information on the interaction between virtual servers and path route rules, see
          [Managing Request Routing](/Content/Balance/Tasks/managingrequest.htm).

      pathRouteSetName:
        type: "string"
        x-obmcs-feature-id:
        - udx-491
        minLength: 1
        maxLength: 32
        description: |
          The name of the set of path-based routing rules, [PathRouteSet](#/en/loadbalancer/20170115/PathRouteSet/),
          applied to this listener's traffic.

          Example: `path-route-set-001`

      sslConfiguration:
        $ref: "#/definitions/SSLConfigurationDetails"

      connectionConfiguration:
        $ref: "#/definitions/ConnectionConfiguration"

    description: The configuration details for updating a listener.
  UpdateLoadBalancerDetails:
    type: "object"
    required:
    - "displayName"
    properties:
      displayName:
        type: "string"
        minLength: 1
        maxLength: 1024
        description: |
          The user-friendly display name for the load balancer. It does not have to be unique, and it is changeable.
          Avoid entering confidential information.

          Example: `My load balancer`

    description: Configuration details to update a load balancer.

  PathMatchType:
    type: object
    x-obmcs-feature-id:
    - udx-491
    description: The type of matching to apply to incoming URIs.
    required:
    - "matchType"
    properties:
      matchType:
        type: "string"
        enum:
          - EXACT_MATCH
          - FORCE_LONGEST_PREFIX_MATCH
          - PREFIX_MATCH
          - SUFFIX_MATCH
        description: |
          Specifies how the load balancing service compares a [PathRoute](#/en/loadbalancer/20170115/requests/PathRoute)
          object's `path` string against the incoming URI.

          *  **EXACT_MATCH** - Looks for a `path` string that exactly matches the incoming URI path.

          *  **FORCE_LONGEST_PREFIX_MATCH** - Looks for the `path` string with the best, longest match of the beginning
             portion of the incoming URI path.

          *  **PREFIX_MATCH** - Looks for a `path` string that matches the beginning portion of the incoming URI path.

          *  **SUFFIX_MATCH** - Looks for a `path` string that matches the ending portion of the incoming URI path.

          For a full description of how the system handles `matchType` in a path route set containing multiple rules, see
          [Managing Request Routing](/Content/Balance/Tasks/managingrequest.htm).

  PathRouteSet:
    type: "object"
    x-obmcs-feature-id:
    - udx-491
    description: |
      A named set of path route rules. For more information, see
      [Managing Request Routing](/Content/Balance/Tasks/managingrequest.htm).
    required:
      - "name"
      - "pathRoutes"
    properties:
      name:
        type: "string"
        minLength: 1
        maxLength: 32
        description: |
          The unique name for this set of path route rules. Avoid entering confidential information.

          Example: `path-route-set-001`
      pathRoutes:
        type: "array"
        minItems: 0
        maxItems: 20
        description: The set of path route rules.
        items:
          $ref: "#/definitions/PathRoute"

  PathRouteSetDetails:
    type: "object"
    x-obmcs-feature-id:
    - udx-491
    description: A set of path route rules.
    required:
      - "pathRoutes"
    properties:
      pathRoutes:
        type: "array"
        minItems: 1
        description: The set of path route rules.
        maxItems: 20
        items:
          $ref: "#/definitions/PathRoute"

  CreatePathRouteSetDetails:
    type: "object"
    x-obmcs-feature-id:
    - udx-491
    description: A named set of path route rules to add to the load balancer.
    required:
      - "name"
      - "pathRoutes"
    properties:
      name:
        type: "string"
        minLength: 1
        maxLength: 32
        description: |
          The name for this set of path route rules. It must be unique and it cannot be changed. Avoid entering
          confidential information.

          Example: `path-route-set-001`
      pathRoutes:
        type: "array"
        minItems: 1
        maxItems: 20
        description: The set of path route rules.
        items:
          $ref: "#/definitions/PathRoute"

  UpdatePathRouteSetDetails:
    type: "object"
    x-obmcs-feature-id:
    - udx-491
    description: An updated set of path route rules that overwrites the existing set of rules.
    required:
      - "pathRoutes"
    properties:
      pathRoutes:
        type: "array"
        minItems: 0
        maxItems: 20
        description: The set of path route rules.
        items:
          $ref: "#/definitions/PathRoute"

  PathRoute:
    type: "object"
    x-obmcs-feature-id:
    - udx-491
    description: |
      A "path route rule" to evaluate an incoming URI path, and then route a matching request to the specified backend set.

      Path route rules apply only to HTTP and HTTPS requests. They have no effect on TCP requests.
    required:
    - "path"
    - "pathMatchType"
    - "backendSetName"
    properties:
      path:
        type: "string"
        minLength: 1
        maxLength: 2048
        description: |
          The path string to match against the incoming URI path.

          *  Path strings are case-insensitive.

          *  Asterisk (*) wildcards are not supported.

          *  Regular expressions are not supported.

          Example: `/example/video/123`

      pathMatchType:
        description: The type of matching to apply to incoming URIs.
        $ref: "#/definitions/PathMatchType"

      backendSetName:
        type: "string"
        minLength: 1
        maxLength: 32
        description: |
          The name of the target backend set for requests where the incoming URI matches the specified path.

          Example: `My_backend_set`

  WorkRequest:
    type: "object"
    required:
    - "errorDetails"
    - "id"
    - "lifecycleState"
    - "loadBalancerId"
    - "message"
    - "timeAccepted"
    - "type"
    properties:
      id:
        type: "string"
        description: The [OCID](/Content/General/Concepts/identifiers.htm) of the work request.
      loadBalancerId:
        type: "string"
        description: |
          The [OCID](/Content/General/Concepts/identifiers.htm) of the load balancer with which the work request
          is associated.
      type:
        type: "string"
        description: |
          The type of action the work request represents.
      lifecycleState:
        type: "string"
        description: |
          The current state of the work request.
        enum:
        - "ACCEPTED"
        - "IN_PROGRESS"
        - "FAILED"
        - "SUCCEEDED"
      message:
        type: "string"
        description: |
          A collection of data, related to the load balancer provisioning process, that helps with debugging in the event of failure.
          Possible data elements include:

          - workflow name
          - event ID
          - work request ID
          - load balancer ID
          - workflow completion message

      timeAccepted:
        type: "string"
        format: "date-time"
        description:  |
          The date and time the work request was created, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`

      timeFinished:
        type: "string"
        format: "date-time"
        description:  |
          The date and time the work request was completed, in the format defined by RFC3339.

          Example: `2016-08-25T21:10:29.600Z`

      errorDetails:
        type: "array"
        items:
          $ref: "#/definitions/WorkRequestError"

    description: |
      Many of the API requests you use to create and configure load balancing do not take effect immediately.
      In these cases, the request spawns an asynchronous work flow to fulfill the request. WorkRequest objects provide visibility
      for in-progress work flows.
      For more information about work requests, see [Viewing the State of a Work Request](/Content/Balance/Tasks/viewingworkrequest.htm).
  WorkRequestError:
    type: "object"
    required:
    - "errorCode"
    - "message"
    properties:
      errorCode:
        type: "string"
        enum:
        - "BAD_INPUT"
        - "INTERNAL_ERROR"
      message:
        type: "string"
        description:  A human-readable error string.
    description:  An object returned in the event of a work request error.

parameters:
  RetryTokenHeader:
    description: |
      A token that uniquely identifies a request so it can be retried in case of a timeout or
      server error without risk of executing that same action again. Retry tokens expire after 24
      hours, but can be invalidated before then due to conflicting operations (e.g., if a resource
      has been deleted and purged from the system, then a retry of the original creation request
      may be rejected).
    in: header
    maxLength: 64
    minLength: 1
    name: opc-retry-token
    type: string

  FilterByLifecycleStateQueryParam:
    name: lifecycleState
    in: query
    required: false
    type: "string"
    x-obmcs-enumref: "#/definitions/LoadBalancer/lifecycleState"
    description: |
      A filter to return only resources that match the given lifecycle state.

  FilterByDisplayNameQueryParam:
    name: displayName
    in: query
    required: false
    type: string
    description: |
      A filter to return only resources that match the given display name exactly.

  SortByQueryParam:
    name: sortBy
    in: query
    required: false
    type: string
    enum:
    - TIMECREATED
    - DISPLAYNAME
    description: |
      The field to sort by.  You can provide one sort order (`sortOrder`). Default order for TIMECREATED is descending.
      Default order for DISPLAYNAME is ascending. The DISPLAYNAME sort order is case sensitive.

  SortOrderQueryParam:
    name: sortOrder
    in: query
    required: false
    type: string
    enum:
    - ASC
    - DESC
    description: |
      The sort order to use, either ascending (`ASC`) or descending (`DESC`). The DISPLAYNAME sort order is case sensitive.
responses:
  400:
    description: Bad Request
    $ref: '#/responses/Error'
  401:
    description: Unauthorized
    $ref: '#/responses/Error'
  404:
    description: Not Found
    $ref: '#/responses/Error'
  409:
    description: Conflict
    $ref: '#/responses/Error'
  412:
    description: Precondition Failed
    $ref: '#/responses/Error'
  500:
    description: Internal Server Error
    $ref: '#/responses/Error'
  DefaultError:
    description: An error has occurred.
    $ref: '#/responses/Error'
  Error:
    headers:
      opc-request-id:
        $ref: '#/x-descriptions/opc-request-id'
    schema:
      $ref: '#/definitions/Error'
x-descriptions:
  opc-next-page:
    description: |
      For pagination of a list of items. When paging through a list, if this header appears in the response,
      then a partial list might have been returned. Include this value as the `page` parameter for the
      subsequent GET request to get the next batch of items.
    type: string
  opc-request-id:
    description: |
      Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
      a particular request, please provide the request ID.
    type: string
  opc-work-request-id:
    description: The [OCID](/Content/General/Concepts/identifiers.htm) of the work request.
    type: "string"
