#==========[ Schema ]===================================================================================================

swagger: "2.0"
info:
  version: '20160918'
  title: Amazon S3 Compatibility API
  description: |
    Amazon S3 Compatibility API supported by the Oracle Cloud Infrastructure Object Storage Service.
  contact:
    name: OCI Object Storage Team
    url: https://confluence.aka.lgl.grungy.us/display/CASPER/Integrating+With+Casper
    email: opc_casper_users_us_grp@oracle.com
  license:
    name: Oracle Corporation
host: localhost:9060
basePath: /
schemes:
  - https
consumes:
  - application/xml
produces:
  - application/xml

#==========[ Paths ]====================================================================================================

paths:

  #----------[ Namespace ]-----------------------------------------------------------------------------------

  /:

    get:
      tags:
        - s3ObjectStorage
      summary: GET Service (List Buckets)
      description: |
        Lists all buckets owned by the authenticated sender of the request.
      operationId: GetService
      x-related-resource: '#/definitions/Service'
      parameters:
        - $ref: '#/parameters/OptionalDateTimeHeader'
      x-example: |
        GET / HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 12 Aug 2016 22:42:15 GMT
        Authorization: <var>&lt;authorization_string&gt;</var>
      responses:
        200:
          description: A list of all of the buckets owned by the authenticated sender of the request.
          schema:
            $ref: '#/definitions/ListAllMyBuckets'
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
          examples:
            application-xml: |
              <?xml version="1.0" encoding="UTF-8"?>
              <ListAllMyBucketsResult xmlns="http://s3.amazonaws.com/doc/2006-03-01">
                <Owner>
                  <ID>bcaf1ffd86f461ca5fb16fd081034f</ID>
                  <DisplayName>webfile</DisplayName>
                </Owner>
                <Buckets>
                  <Bucket>
                    <Name>quotes</Name>
                    <CreationDate>2006-02-03T16:45:09.000Z</CreationDate>
                  </Bucket>
                  <Bucket>
                    <Name>samples</Name>
                    <CreationDate>2006-02-03T16:41:58.000Z</CreationDate>
                  </Bucket>
                </Buckets>
              </ListAllMyBucketsResult>
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

#  ----------[ Bucket ]-------------------------------------------------------------------------------------------------

  /{bucketName}:

    get:
      tags:
        - s3ObjectStorage
      summary: GET Bucket (List Objects)
      description: |
        Lists up to 1000 objects in the specified bucket.
      operationId: ListObjects
      x-related-resource: '#/definitions/Bucket'
      parameters:
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/DelimiterQueryParam'
        - $ref: '#/parameters/EncodingTypeQueryParam'
        - $ref: '#/parameters/MaxKeysQueryParam'
        - $ref: '#/parameters/PrefixQueryParam'
        - $ref: '#/parameters/ContinuationTokenQueryParam'
        - $ref: '#/parameters/StartAfterQueryParam'
        - $ref: '#/parameters/OptionalDateTimeHeader'
      x-example: |
        GET /example_bucket HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 12 Aug 2016 22:52:33 GMT
        Authorization: <var>&lt;authorization_string&gt;</var>
      responses:
        200:
          description: A list of objects in the bucket.
          schema:
            $ref: '#/definitions/ListBucket'
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
          examples:
            application-xml: |
              <?xml version="1.0" encoding="UTF-8"?>
              <ListBucketResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/">
                  <Name>bucket</Name>
                  <Prefix/>
                  <KeyCount>205</KeyCount>
                  <MaxKeys>1000</MaxKeys>
                  <IsTruncated>false</IsTruncated>
                  <Contents>
                      <Key>my-image.jpg</Key>
                      <LastModified>2009-10-12T17:50:30.000Z</LastModified>
                      <ETag>&quot;fba9dede5f27731c9771645a39863328&quot;</ETag>
                      <Size>434234</Size>
                      <StorageClass>STANDARD</StorageClass>
                  </Contents>
                  <Contents>
                     ...
                  </Contents>
                  ...
              </ListBucketResult>
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

    head:
      tags:
        - s3ObjectStorage
      summary: HEAD Bucket
      description: |
        Checks to see if a bucket exists and that the requester has permission to access it.
      operationId: HeadBucket
      x-related-resource: '#/definitions/Bucket'
      parameters:
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/OptionalDateTimeHeader'
      x-example: |
        HEAD /example_bucket HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 12 Aug 2016 22:52:33 GMT
        Authorization: <var>&lt;authorization_string&gt;</var>
        Connection: Keep-Alive
      responses:
        200:
          description: The bucket exists and access is authorized.
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            ETag:
              type: string
              description: The current entity tag for the bucket.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

    put:
      tags:
        - s3ObjectStorage
      summary: PUT Bucket (Create Bucket)
      description: |
        Creates a new bucket.
      operationId: PutBucket
      x-related-resource: '#/definitions/Bucket'
      parameters:
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/OptionalDateTimeHeader'
      x-example: |
        PUT /example_bucket HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Content-Length: 0
        Date: Fri, 12 Aug 2016 22:52:33 GMT
        Authorization: <var>&lt;authorization_string&gt;</var>
      responses:
        200:
          description: The bucket was successfully created.
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        409:
          description: Conflict
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

    delete:
      tags:
        - s3ObjectStorage
      summary: DELETE Bucket
      description: |
        Deletes a bucket. All objects in the bucket must be deleted before the bucket itself can be deleted.
      operationId: DeleteBucket
      x-related-resource: '#/definitions/Bucket'
      parameters:
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/OptionalDateTimeHeader'
      x-example: |
        DELETE /example_bucket HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 12 Aug 2016 22:52:33 GMT
        Authorization: <var>&lt;authorization_string&gt;</var>
      responses:
        204:
          description: The response body is always empty.
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        409:
          description: Conflict
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

  #----------[ Object ]-------------------------------------------------------------------------------------------------

  /{bucketName}/{objectName}:

    get:
      tags:
        - objectStorage
      summary: GET Object
      description: |
        Retrieves an object.
      operationId: GetObject
      x-related-resource: '#/definitions/Object'
      parameters:
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/ObjectPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfNoneMatchHeader'
        - $ref: '#/parameters/IfModifiedSinceHeader'
        - $ref: '#/parameters/IfUnmodifiedSinceHeader'
        - $ref: '#/parameters/RangeRequestHeader'
        - $ref: '#/parameters/OptionalDateTimeHeader'
      x-example: |
        GET /example_bucket/dummy_object HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 19 Aug 2016 23:43:49 GMT
        Authorization: <var>&lt;authorization_string&gt;</var>
      responses:
        200:
          description: The object metadata and bytes.
          schema:
            type: string
            format: binary
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            ETag:
              type: string
              description: The entity tag for the object.
            opc-meta-*:
              type: string
              description: The user-defined metadata for the object.
              x-obmcs-header-collection: true
              x-obmcs-prefix: opc-meta-
            content-length:
              type: integer
              format: int64
              description: The object size in bytes.
            content-range:
              type: string
              description: Content-Range header for range requests, per [RFC 7233](https://tools.ietf.org/rfc/rfc7233), section 4.2.
            content-md5:
              type: string
              description: |
                Content-MD5 header, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616), section 14.15.
                Unavailable for objects uploaded using multipart upload.
            content-type:
              type: string
              description: Content-Type header, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616), section 14.17.
            content-language:
              type: string
              description: Content-Language header, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616), section 14.12.
            content-encoding:
              type: string
              description: Content-Encoding header, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616), section 14.11.
            last-modified:
              type: string
              format: date-time
              description: The object modification time, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616), section 14.29.
            x-amz-storage-class:
              type: string
              description: Provides the storage class information of the object. Returned for all objects except Standard storage class objects.
        304:
          description: Not Modified
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            ETag:
              type: string
              description: The entity tag for the object.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        412:
          description: Precondition Failed
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

    head:
      tags:
        - objectStorage
      summary: HEAD Object
      description: |
        Gets the user-defined metadata and entity tag for an object.
      operationId: HeadObject
      x-related-resource: '#/definitions/Object'
      parameters:
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/ObjectPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfNoneMatchHeader'
        - $ref: '#/parameters/IfModifiedSinceHeader'
        - $ref: '#/parameters/IfUnmodifiedSinceHeader'
        - $ref: '#/parameters/RangeRequestHeader'
        - $ref: '#/parameters/OptionalDateTimeHeader'
      x-example: |
        HEAD /example_bucket/dummy_object HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 19 Aug 2016 23:43:49 GMT
        Authorization: <var>&lt;authorization_string&gt;</var>
      responses:
        200:
          description: The object metadata.
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            ETag:
              type: string
              description: The entity tag for the object.
            opc-meta-*:
              type: string
              description: The user-defined metadata for the object.
              x-obmcs-header-collection: true
              x-obmcs-prefix: opc-meta-
            content-length:
              type: integer
              format: int64
              description: The object size in bytes.
            content-md5:
              type: string
              description: |
                Content-MD5 header, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616), section 14.15.
                Unavailable for objects uploaded using multipart upload.
            content-type:
              type: string
              description: Content-Type header, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616), section 14.17.
            content-language:
              type: string
              description: Content-Language header, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616), section 14.12.
            content-encoding:
              type: string
              description: Content-Encoding header, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616), section 14.11.
            last-modified:
              type: string
              format: date-time
              description: The object modification time, as described in [RFC 2616](https://tools.ietf.org/rfc/rfc2616), section 14.29.
            x-amz-storage-class:
              type: string
              description: Provides the storage class information of the object. Returned for all objects except Standard storage class objects.
        304:
          description: Not Modified
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            ETag:
              type: string
              description: The entity tag for the object.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        412:
          description: Precondition Failed
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

    put:
      tags:
        - objectStorage
      summary: PUT Object
      description: |
        Creates a new object or overwrites an existing one.

        To use this and other API operations, you must be authorized in an IAM policy. If you're not authorized,
        talk to an administrator. If you're an administrator who needs to write policies to give users access, see
        [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
      operationId: PutObject
      x-related-resource: '#/definitions/Object'
      parameters:
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/ObjectPathParam'
        - $ref: '#/parameters/Expect100ContinueHeader'
        - $ref: '#/parameters/RequiredContentLengthHeader'
        - $ref: '#/parameters/OptionalContentMD5Header'
        - $ref: '#/parameters/OptionalContentTypeHeader'
        - $ref: '#/parameters/OptionalContentEncodingHeader'
        - $ref: '#/parameters/AmzMetaHeader'
        - name: PutObjectBody
          description: The object to upload to the object store.
          required: true
          in: body
          schema:
            type: string
            format: binary
      x-example: |
        PUT /example_bucket/example_object HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Wed, 12 Oct 2009 17:50:00 GMT
        Authorization: <var>&lt;authorization string&gt;</var>
        Content-Type: text/plain
        Content-Length: 11434
        opc-meta-author: Janet
        Expect: 100-continue
      responses:
        200:
          description: The object was successfully created.
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            opc-content-md5:
              type: string
              description: The base-64 encoded MD5 hash of the request body as computed by the server.
            ETag:
              type: string
              description: The entity tag for the object.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        409:
          description: Conflict
          schema:
            $ref: '#/responses/Error'
        412:
          description: Precondition Failed
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

    delete:
      tags:
        - objectStorage
      summary: DELETE Object
      description: |
        Deletes an object.
      operationId: DeleteObject
      x-related-resource: '#/definitions/Object'
      parameters:
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/ObjectPathParam'
        - $ref: '#/parameters/IfMatchHeader'
      x-example: |
        DELETE /example_bucket/dummy_object HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 19 Aug 2016 23:43:49 GMT
        Authorization: <var>&lt;authorization_string&gt;</var>
      responses:
        204:
          description: The object was successfully deleted.
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        409:
          description: Conflict
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

#----------[ Location ]--------------------------------------------------------------------------------------
  /{bucketName}?location:

    get:
      tags:
        - objectStorage
      summary: GetLocation
      description: |
        Get the location of bucket's region.
      operationId: GetLocation
      parameters:
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/OptionalDateTimeHeader'
      x-example: |
        GET /example_bucket?location HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 1 Oct 2017 22:52:33 GMT
      responses:
        200:
          description: Returns location of bucket.
          schema:
            $ref: '#/definitions/LocationConstraint'
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
          examples:
            <?xml version="1.0" encoding="UTF-8"?>
            <LocationConstraint xmlns="http://s3.amazonaws.com/doc/2006-03-01/">us-ashburn-1</LocationConstraint>
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

#----------[ Multi-Part Upload ]--------------------------------------------------------------------------------------

  /{bucketName}?uploads:

    get:
      tags:
        - objectStorage
      summary: List Uploads
      description: |
        Lists up to 1000 in-progress multipart uploads in the given bucket.
      operationId: ListUploads
      x-related-resource: '#/definitions/Object'
      parameters:
        - $ref: '#/parameters/BucketPathParam'
        - $ref: '#/parameters/MaxUploadsQueryParam'
        - $ref: '#/parameters/KeyMarkerQueryParam'
        - $ref: '#/parameters/UploadIdMarkerQueryParam'
        - $ref: '#/parameters/EncodingTypeQueryParam'
      x-example: |
        GET /example_bucket?uploads HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 12 Aug 2016 22:52:33 GMT
      responses:
        200:
          description: A list of in-progress multipart uploads in the bucket.
          schema:
            $ref: '#/definitions/ListMultipartUploads'
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

  /{bucketName}/{objectName}?uploads:

    post:
      tags:
        - objectStorage
      summary: Initiate Multipart Upload
      description: |
        Starts a new multipart upload to a specific object in the given bucket.
      operationId: InitiateMultipartUpload
      x-related-resource: '#/definitions/Object'
      parameters:
      - $ref: '#/parameters/BucketPathParam'
      - $ref: '#/parameters/ObjectPathParam'
      - $ref: '#/parameters/AmzMetaHeader'
      x-example: |
        POST /example_bucket/object?uploads HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 12 Aug 2016 22:52:33 GMT
      responses:
        200:
          description: The full details of the newly created multipart upload.
          schema:
            $ref: '#/definitions/InitiateMultipartUploadResult'
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

  /{bucketName}/{objectName}?uploadId={uploadId}:

    get:
      tags:
        - objectStorage
      summary: List Parts
      description: |
        Lists the parts that have been uploaded for a specific multipart upload.
      operationId: ListParts
      x-related-resource: '#/definitions/Object'
      parameters:
      - $ref: '#/parameters/BucketPathParam'
      - $ref: '#/parameters/ObjectPathParam'
      - $ref: '#/parameters/UploadIdQueryParam'
      - $ref: '#/parameters/MaxPartsQueryParam'
      - $ref: '#/parameters/PartNumberMarkerQueryParam'
      - $ref: '#/parameters/EncodingTypeQueryParam'
      x-example: |
        GET /example_bucket/object?uploadId=fj38rtudiu HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 12 Aug 2016 22:52:33 GMT
      responses:
        200:
          description: The full details of the newly created multipart upload.
          schema:
            $ref: '#/definitions/ListPartsResult'
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'
    put:
      tags:
        - objectStorage
      summary: Upload Part
      description: |
        Uploads a part in a multipart upload.
      operationId: UploadPart
      x-related-resource: '#/definitions/Object'
      parameters:
      - $ref: '#/parameters/BucketPathParam'
      - $ref: '#/parameters/ObjectPathParam'
      - $ref: '#/parameters/UploadIdQueryParam'
      - $ref: '#/parameters/RequiredContentLengthHeader'
      - $ref: '#/parameters/OptionalContentMD5Header'
      - $ref: '#/parameters/Expect100ContinueHeader'
      x-example: |
        PUT /example_bucket/object?uploadId=fj38rtudiu HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 12 Aug 2016 22:52:33 GMT
      responses:
        200:
          description: The object was successfully created.
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
            ETag:
              type: string
              description: The entity tag for the object.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

    delete:
      tags:
        - objectStorage
      summary: Abort Multipart Upload
      description: |
        Aborts a multipart upload.
      operationId: AbortMultipartUpload
      x-related-resource: '#/definitions/Object'
      parameters:
      - $ref: '#/parameters/BucketPathParam'
      - $ref: '#/parameters/ObjectPathParam'
      - $ref: '#/parameters/UploadIdQueryParam'
      x-example: |
        DELETE /example_bucket/object?uploadId=fj38rtudiu HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 12 Aug 2016 22:52:33 GMT
      responses:
        204:
          description: The object was successfully deleted.
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

    post:
      tags:
        - objectStorage
      summary: Complete Multipart Upload
      description: |
        Commits a multipart upload.
      operationId: CompleteMultipartUpload
      x-related-resource: '#/definitions/Object'
      parameters:
      - $ref: '#/parameters/BucketPathParam'
      - $ref: '#/parameters/ObjectPathParam'
      - $ref: '#/parameters/UploadIdQueryParam'
      - name: CompleteMultipartUpload
        description: The part numbers and ETags for the parts you want to commit.
        required: True
        in: body
        schema:
          $ref: '#/definitions/CompleteMultipartUpload'
      x-example: |
        POST /example_bucket/object?uploadId=fj38rtudiu HTTP/1.1
        Host: mynamespace.compat.objectstorage.us-phoenix-1.oraclecloud.com
        Date: Fri, 10 Mar 2017 11:50:24 GMT
        <CompleteMultipartUpload>
          <Part>
            <PartNumber>1</PartNumber>
            <ETag>a54357aff0632cce46d942af68356b38</ETag>
          </Part>
        </CompleteMultipartUpload>
      responses:
        200:
          description: The multipart upload was successfully completed.
          schema:
            $ref: '#/definitions/CompleteMultipartUploadResult'
          headers:
            opc-request-id:
              type: string
              description: |
                Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
                request, please provide this request ID.
        400:
          description: Bad Request
          schema:
            $ref: '#/responses/Error'
        403:
          description: Forbidden
          schema:
            $ref: '#/responses/Error'
        404:
          description: Not Found
          schema:
            $ref: '#/responses/Error'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/responses/Error'
        default:
          $ref: '#/responses/Error'

#==========[ Definitions ]==============================================================================================

definitions:
  Owner:
    description: Container for information about the bucket owner.
    xml:
      name: Owner
    required:
      - id
      - displayName
    properties:
      id:
        type: string
        description: Bucket owner's user ID.
        xml:
          name: ID
      displayName:
        type: string
        description: Bucket owner's display name.
        xml:
          name: DisplayName
  Bucket:
    description: Container for bucket information.
    xml:
      name: Bucket
    required:
      - name
      - creationDate
    properties:
      name:
        type: string
        description: The bucket name. Avoid entering confidential information.
        xml:
          name: Name
      creationDate:
        type: string
        format: date-time
        description: Date the bucket was created.
        xml:
          name: CreationDate
  Buckets:
    description: Container for one or more buckets.
    xml:
      name: Buckets
      wrapped: true
    type: array
    items:
      $ref: '#/definitions/Bucket'
  Contents:
    description: Object metadata returned.
    required:
      - key
      - lastModified
      - eTag
      - size
      - storageClass
    properties:
      key:
        type: string
        description: The object's key.
        xml:
          name: Key
      lastModified:
        type: string
        format: date-time
        description: Date and time the object was last modified.
        xml:
          name: LastModified
      eTag:
        type: string
        description: The entity tag, an MD5 hash of the object.
        xml:
          name: ETag
      size:
        type: integer
        description: Size, in bytes, of the object.
        xml:
          name: Size
      storageClass:
        type: string
        enum:
        - STANDARD
        - GLACIER
        description: Storage class of the object.
        xml:
          name: StorageClass
  CommonPrefixes:
    description: Contains a key (if it exists) between Prefix and the next occurrence of the delimiter.
    required:
      - prefix
    properties:
      prefix:
        type: string
        description: A substring from the beginning to the first occurrence of the specified delimiter after the prefix.
        xml:
          name: Prefix
  ListAllMyBuckets:
    description: |
      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    xml:
      name: ListAllMyBucketsResult
      namespace: http://s3.amazonaws.com/doc/2006-03-01
    required:
      - owner
      - buckets
    properties:
      owner:
        $ref: '#/definitions/Owner'
      buckets:
        $ref: '#/definitions/Buckets'
  ListBucket:
    description: |
      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    xml:
      name: ListBucketResult
      namespace: http://s3.amazonaws.com/doc/2006-03-01
    required:
      - name
      - keyCount
      - maxKeys
      - isTruncated
      - contents
    properties:
      name:
        type: string
        description: Name of the bucket. Avoid entering confidential information.
        xml:
          name: Name
      prefix:
        type: string
        description: The specified prefix that returned keys should start with.
        xml:
          name: Prefix
      startAfter:
        type: string
        description: Included in the response if it was sent with the request.
        xml:
          name: StartAfter
      continuationToken:
        type: string
        description: Included in the response if it was sent with the request.
        xml:
          name: ContinuationToken
      nextContinuationToken:
        type: string
        description: If the response is truncated, this can be used in the next request to retrieve the next set of keys.
        xml:
          name: NextContinuationToken
      keyCount:
        type: integer
        description: The number of keys included in the response.
        xml:
          name: KeyCount
      maxKeys:
        type: integer
        description: The maximum number of keys included in the response body.
        xml:
          name: MaxKeys
      delimiter:
        type: string
        description: Included in the response if it was sent with the request.
        xml:
          name: Delimiter
      isTruncated:
        type: boolean
        description: Specifies whether or not all of the results are returned.
        xml:
          name: IsTruncated
      contents:
        description: Metadata returned for each object.
        type: array
        items:
          $ref: '#/definitions/Contents'
          xml:
            name: Contents
      commonPrefixes:
        description: Contains all (existing) keys between Prefix and the next occurrence of the delimiter.
        type: array
        items:
          $ref: '#/definitions/CommonPrefixes'
          xml:
            name: CommonPrefixes
  Upload:
    description: Container for elements related to a particular multipart upload.
    required:
      - key
      - uploadId
      - storageClass
      - initiated
    properties:
      key:
        type: integer
        description: Key of the object for which the multipart upload was initiated.
        xml:
          name: Key
      uploadId:
        type: integer
        description: Upload ID that identifies the multipart upload.
        xml:
          name: UploadId
      storageClass:
        type: string
        enum:
        - STANDARD
        description: Storage class of the object.
        xml:
          name: StorageClass
      initiated:
        type: string
        format: date-time
        description: Date and time at which the multipart upload was initiated.
        xml:
          name: Initiated
  Part:
    description: Container for elements related to a particular part.
    required:
      - partNumber
      - eTag
      - size
    properties:
      partNumber:
        type: integer
        description: The part number.
        xml:
          name: PartNumber
      eTag:
        type: string
        description: The ETag of the part.
        xml:
          name: ETag
      size:
        type: integer
        description: The size of the part in bytes.
        xml:
          name: Size
  CompleteMultipartUpload:
    description: Container for complete multipart upload request.
    xml:
      name: CompleteMultipartUpload
    required:
      - part
    properties:
      part:
        type: array
        items:
          $ref: '#/definitions/PartAndETag'
  PartAndETag:
    description: Container for a part and its ETag.
    xml:
      name: Part
    required:
      - partNumber
      - eTag
    properties:
      partNumber:
        type: integer
        description: The part number.
        xml:
          name: PartNumber
      eTag:
        type: string
        description: The ETag of the part.
        xml:
          name: ETag
  CompleteMultipartUploadResult:
    description: |
      Container for complete multipart upload response.
    xml:
      name: CompleteMultipartUploadResult
      namespace: http://s3.amazonaws.com/doc/2006-03-01
    required:
      - location
      - bucket
      - key
      - eTag
    properties:
      location:
        type: string
        description: The URI that identifies the newly created object.
        xml:
          name: Location
      bucket:
        type: string
        description: Name of the bucket to which the multipart upload was initiated. 
        xml:
          name: Bucket
      key:
        type: string
        description: Object key of the newly created object.
        xml:
          name: Key
      eTag:
        type: string
        description: The ETag of the newly created object.
        xml:
          name: ETag
  ListMultipartUploads:
    description: |
      Container for list multipart upload response.
    xml:
      name: ListMultipartUploadsResult
      namespace: http://s3.amazonaws.com/doc/2006-03-01
    required:
      - bucket
      - isTruncated
      - uploads
      - nextKeyMarker
      - nextUploadIdMarker
    properties:
      bucket:
        type: string
        description: Name of the bucket to which the multipart upload was initiated. 
        xml:
          name: Bucket
      keyMarker:
        type: string
        description: The key at or after which the listing began.
        xml:
          name: KeyMarker
      uploadIdMarker:
        type: string
        description: Upload ID after which listing began.
        xml:
          name: UploadIdMarker
      nextKeyMarker:
        type: string
        description: |
          When a list is truncated, this element specifies the value that should be used for the key-marker request
          parameter in a subsequent request.
        xml:
          name: NextKeyMarker
      nextUploadIdMarker:
        type: string
        description: |
          When a list is truncated, this element specifies the value that should be used for the upload-id-marker
          request parameter in a subsequent request.
        xml:
          name: NextUploadIdMarker
      encodingType:
        type: string
        description: Included in the response if it was sent with the request.
        xml:
          name: Encoding-Type
      maxUploads:
        type: integer
        description: Maximum number of multipart uploads that could have been included in the response.
        xml:
          name: MaxUploads
      isTruncated:
        type: boolean
        description: Specifies whether or not all of the multipart uploads are returned.
        xml:
          name: IsTruncated
      uploads:
        description: Metadata about each multipart upload returned.
        type: array
        items:
          $ref: '#/definitions/Upload'
          xml:
            name: Upload
  InitiateMultipartUploadResult:
    description: Container for the response to initiate multipart upload.
    xml:
      name: InitiateMultipartUploadResult
      namespace: http://s3.amazonaws.com/doc/2006-03-01
    required:
      - bucket
      - key
      - uploadId
    properties:
      bucket:
        type: string
        description: Name of the bucket to which the multipart upload was initiated. 
        xml:
          name: Bucket
      key:
        type: string
        description: Object key for which the multipart upload was initiated.
        xml:
          name: Key
      uploadId:
        type: string
        description: ID for the initiated multipart upload.
        xml:
          name: UploadId
  ListPartsResult:
    description: |
      Container for list multipart upload parts response.
    xml:
      name: ListPartsResult
      namespace: http://s3.amazonaws.com/doc/2006-03-01
    required:
      - bucket
      - key
      - uploadId
      - nextPartNumberMarker
      - isTruncated
    properties:
      bucket:
        type: string
        description: Name of the bucket to which the multipart upload was initiated.
        xml:
          name: Bucket
      key:
        type: string
        description: Object key for which the multipart upload was initiated.
        xml:
          name: Key
      partNumberMarker:
        type: integer
        description: The key at or after which the listing began.
        xml:
          name: PartNumberMarker
      uploadIdMarker:
        type: string
        description: Upload ID after which listing began.
        xml:
          name: UploadIdMarker
      nextPartNumberMarker:
        type: integer
        description: |
          When a list is truncated, this element specifies the value that should be used for the part-number-marker
          request parameter in a subsequent request.
        xml:
          name: NextPartNumberMarker
      encodingType:
        type: string
        description: Included in the response if it was sent with the request.
        xml:
          name: Encoding-Type
      maxParts:
        type: integer
        description: Maximum number of parts that could have been included in the response.
        xml:
          name: MaxParts
      isTruncated:
        type: boolean
        description: Specifies whether or not all of the multipart uploads are returned.
        xml:
          name: IsTruncated
      parts:
        description: Metadata about each part returned.
        type: array
        items:
          $ref: '#/definitions/Part'
          xml:
            name: Part
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: string
        description: A short error code that defines the error, meant for programmatic parsing.
      message:
        type: string
        description: A human-readable error string.

  LocationConstraint:
    description: Contains a location of Bucket.
    xml:
      namespace: http://s3.amazonaws.com/doc/2006-03-01
      name: LocationContstraint
    type: string

#==========[ Parameters ]===============================================================================================

parameters:

  BucketPathParam:
    name: bucketName
    in: path
    required: true
    type: string
    pattern: '[A-Za-z0-9\\-_\\.]+'
    minLength: 1
    description:  |
      The name of the bucket. Avoid entering confidential information.

      Example: `my-new-bucket1`
  ObjectPathParam:
    name: objectName
    in: path
    required: true
    type: string
    pattern: '[^\\r\\n\\00#\\?]+'
    minLength: 1
    maxLength: 1024
    description: |
      The name of the object. Avoid entering confidential information.

      Example: `test/object1.log`
  DelimiterQueryParam:
    name: delimiter
    in: query
    type: string
    description: |
      When this parameter is set, only objects whose names do not contain the delimiter character
      (after an optionally specified prefix) are returned. Scanned objects whose names contain the
      delimiter have part of their name up to the last occurrence of the delimiter (after the optional
      prefix) returned as a set of prefixes. Note that only '/' is a supported delimiter character at
      this time.
  EncodingTypeQueryParam:
    name: encoding-type
    in: query
    type: string
    description: |
      When this parameter is set, the response is encoded with the specified encoding method. This
      can be used for object keys containing characters that XML 1.0 parsers cannot parse.
  MaxKeysQueryParam:
    name: max-keys
    in: query
    type: integer
    minimum: 1
    maximum: 1000
    description: The maximum number of keys to return in the response body.
  PrefixQueryParam:
    name: prefix
    in: query
    type: string
    description: The string to use for matching against the start of keys in a list query.
  ContinuationTokenQueryParam:
    name: continuation-token
    in: query
    type: string
    minLength: 1
    maxLength: 1024
    description: The token at which to start listing the next set of results when the previous response is truncated.
  StartAfterQueryParam:
    name: start-after
    in: query
    type: string
    description: Object keys returned by a list query must be after this parameter in lexicographical order.
  MaxUploadsQueryParam:
    name: max-uploads
    in: query
    type: integer
    minimum: 1
    maximum: 1000
    description: The maximum number of multipart uploads to return in the response body.
  KeyMarkerQueryParam:
    name: key-marker
    in: query
    type: string
    description: |
      Together with upload-id-marker, this parameter specifies the multipart upload after which listing should begin.
  UploadIdMarkerQueryParam:
    name: upload-id-​marker
    in: query
    type: string
    description: |
      Together with key-marker, this parameter specifies the multipart upload after which listing should begin.
  UploadIdQueryParam:
    name: uploadId
    in: query
    type: string
    description: |
      The ID of a multipart upload.
  MaxPartsQueryParam:
    name: max-parts
    in: query
    type: integer
    minimum: 1
    maximum: 1000
    description: The maximum number of parts to return in the response body.
  PartNumberMarkerQueryParam:
    name: part-number-marker
    in: query
    type: string
    description: Specifies the part number after which listing should begin.
  IfMatchHeader:
    name: If-Match
    in: header
    type: string
    description: |
      The entity tag to match. For creating and committing a multipart upload to an object, this is the entity tag of the target object.
      For uploading a part, this is the entity tag of the target part.
  IfNoneMatchHeader:
    name: If-None-Match
    in: header
    type: string
    pattern: "^[*]$"
    minLength: 0
    maxLength: 1
    description: |
      The entity tag to avoid matching. The only valid value is ‘*’, which indicates that the request should fail if the object already exists.
      For creating and committing a multipart upload, this is the entity tag of the target object. For uploading a part, this is the entity tag
      of the target part.
  IfModifiedSinceHeader:
    name: If-Modified-Since
    in: header
    type: string
    format: date-time
    description: Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).
  IfUnmodifiedSinceHeader:
    name: If-Unmodified-Since
    in: header
    type: string
    format: date-time
    description: Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).
  RangeRequestHeader:
    name: range
    in: header
    type: string
    description: |
      Optional byte range to fetch, as described in [RFC 7233](https://tools.ietf.org/rfc/rfc7233), section 2.1.
      Note, only a single range of bytes is supported.
  OptionalContentSHA256Header:
    name: x-amz-content-sha256
    in: header
    type: string
    description: A hash of the request payload.
  OptionalDateTimeHeader:
    name: x-amz-date
    in: header
    type: string
    format: date-time
    description: The current date and time according to the requester. Takes precedence over the Date header.
  Expect100ContinueHeader:
    name: Expect
    in: header
    type: string
    description: 100-continue
    default: 100-continue
  RequiredContentLengthHeader:
    name: Content-Length
    in: header
    type: integer
    format: int64
    description: The content length of the body.
    required: true
  OptionalContentMD5Header:
    name: Content-MD5
    in: header
    type: string
    description: The base-64 encoded MD5 hash of the body.
  OptionalContentTypeHeader:
    name: Content-Type
    in: header
    type: string
    description: The content type of the object.  Defaults to 'application/octet-stream' if not overridden during the PutObject call.
  OptionalContentEncodingHeader:
    name: Content-Encoding
    in: header
    type: string
    description: The content encoding of the object.
  AmzMetaHeader:
    name: x-amz-meta-*
    in: header
    type: string
    description: Optional user-defined metadata key and value.
    x-obmcs-header-collection: true
    x-obmcs-prefix: x-amz-meta-

#==========[ Responses ]================================================================================================

responses:
  Error:
    description: A description of an error that occurred.
    schema:
      $ref: '#/definitions/Error'
    headers:
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular
          request, please provide this request ID.
