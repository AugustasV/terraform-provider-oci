paths:
  /volumeBackupPolicies:
    get:
      description: Lists all volume backup policies available to the caller.
      operationId: ListVolumeBackupPolicies
      parameters:
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/VolumeBackupPolicy'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVolumeBackupPolicies
      tags:
      - blockstorage
  /volumeBackupPolicies/{policyId}:
    get:
      description: Gets information for the specified volume backup policy.
      operationId: GetVolumeBackupPolicy
      parameters:
        - $ref: '#/parameters/VolumeBackupPolicyIdPathParam'
      responses:
        200:
          description: The volume backup policy was retrieved.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/VolumeBackupPolicy'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVolumeBackupPolicy
      tags:
      - blockstorage
  /volumeBackupPolicyAssignments:
    get:
      description: |
        Gets the volume backup policy assignment for the specified asset. Note that the
        assetId query parameter is required, and that the returned list will contain at most
        one item (since any given asset can only have one policy assigned to it).
      operationId: GetVolumeBackupPolicyAssetAssignment
      parameters:
        - $ref: '#/parameters/AssetIdQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/VolumeBackupPolicyAssignment'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVolumeBackupPolicyAssetAssignment
      tags:
      - blockstorage
    post:
      description: |
        Assigns a policy to the specified asset, such as a volume. Note that a given asset can
        only have one policy assigned to it; if this method is called for an asset that previously
        has a different policy assigned, the prior assignment will be silently deleted.
      operationId: CreateVolumeBackupPolicyAssignment
      parameters:
        - name: CreateVolumeBackupPolicyAssignmentDetails
          description: Request to assign a specified policy to a particular asset.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateVolumeBackupPolicyAssignmentDetails'
      responses:
        200:
          description: The volume backup policy has been assigned.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/VolumeBackupPolicyAssignment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateVolumeBackupPolicyAssignment
      tags:
      - blockstorage
  /volumeBackupPolicyAssignments/{policyAssignmentId}:
    get:
      description: Gets information for the specified volume backup policy assignment.
      operationId: GetVolumeBackupPolicyAssignment
      parameters:
        - $ref: '#/parameters/VolumeBackupPolicyAssignmentIdPathParam'
      responses:
        200:
          description: The volume backup policy assignment was retrieved.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/VolumeBackupPolicyAssignment'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVolumeBackupPolicyAssignment
      tags:
      - blockstorage
    delete:
      description: Deletes a volume backup policy assignment (i.e. unassigns the policy from an asset).
      operationId: DeleteVolumeBackupPolicyAssignment
      parameters:
        - $ref: '#/parameters/VolumeBackupPolicyAssignmentIdPathParam'
        - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The volume backup policy assignment has been deleted.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteVolumeBackupPolicyAssignment
      tags:
      - blockstorage
  /volumeBackups:
    get:
      description: |
        Lists the volume backups in the specified compartment. You can filter the results by volume.
      operationId: ListVolumeBackups
      parameters:
        - $ref: '#/parameters/CompartmentIdQueryParam'
        - $ref: '#/parameters/VolumeIdQueryParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/FilterByDisplayNameQueryParam'
        - $ref: '#/parameters/SortByQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - name: lifecycleState
          in: query
          required: false
          type: string
          x-obmcs-enumref: "#/definitions/VolumeBackup/lifecycleState"
          description: |
            A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/VolumeBackup'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVolumeBackups
      tags:
      - blockstorage
    post:
      description: |
        Creates a new backup of the specified volume. For general information about volume backups,
        see [Overview of Block Volume Service Backups](/Content/Block/Concepts/blockvolumebackups.htm)

        When the request is received, the backup object is in a REQUEST_RECEIVED state.
        When the data is imaged, it goes into a CREATING state.
        After the backup is fully uploaded to the cloud, it goes into an AVAILABLE state.
      operationId: CreateVolumeBackup
      parameters:
        - $ref: '#/parameters/RetryTokenHeader'
        - name: CreateVolumeBackupDetails
          description: Request to create a new backup of given volume.
          required: true
          in: body
          schema:
            $ref: '#/definitions/CreateVolumeBackupDetails'
      responses:
        200:
          description: The volume backup is being created.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/VolumeBackup'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateVolumeBackup
      tags:
      - blockstorage
  /volumeBackups/{volumeBackupId}:
    get:
      description: Gets information for the specified volume backup.
      operationId: GetVolumeBackup
      parameters:
        - $ref: '#/parameters/VolumeBackupIdPathParam'
      responses:
        200:
          description: The volume backup was retrieved.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/VolumeBackup'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVolumeBackup
      tags:
      - blockstorage
    put:
      description: |
        Updates the display name for the specified volume backup.
        Avoid entering confidential information.
      operationId: UpdateVolumeBackup
      parameters:
        - $ref: '#/parameters/VolumeBackupIdPathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - name: UpdateVolumeBackupDetails
          description: Update volume backup fields
          required: true
          in: body
          schema:
            $ref: '#/definitions/UpdateVolumeBackupDetails'
      responses:
        200:
          description: The volume backup was updated.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
          schema:
            $ref: '#/definitions/VolumeBackup'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateVolumeBackup
      tags:
      - blockstorage
    delete:
      description: Deletes a volume backup.
      operationId: DeleteVolumeBackup
      parameters:
        - $ref: '#/parameters/VolumeBackupIdPathParam'
        - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The volume backup is being deleted.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteVolumeBackup
      tags:
      - blockstorage
  /volumes:
    get:
      description: |
        Lists the volumes in the specified compartment and Availability Domain.
      operationId: ListVolumes
      parameters:
      - $ref: '#/parameters/AvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      - $ref: '#/parameters/FilterByDisplayNameQueryParam'
      - $ref: '#/parameters/SortByQueryParam'
      - $ref: '#/parameters/SortOrderQueryParam'
      - name: lifecycleState
        in: query
        required: false
        type: string
        x-obmcs-enumref: "#/definitions/Volume/lifecycleState"
        description: |
          A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/Volume'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListVolumes
      tags:
      - blockstorage
    post:
      description: |
        Creates a new volume in the specified compartment. Volumes can be created in sizes ranging from
        50 GB (51200 MB) to 16 TB (16777216 MB), in 1 GB (1024 MB) increments. By default, volumes are 1 TB (1048576 MB).
        For general information about block volumes, see
        [Overview of Block Volume Service](/Content/Block/Concepts/overview.htm).

        A volume and instance can be in separate compartments but must be in the same Availability Domain.
        For information about access control and compartments, see
        [Overview of the IAM Service](/Content/Identity/Concepts/overview.htm). For information about
        Availability Domains, see [Regions and Availability Domains](/Content/General/Concepts/regions.htm).
        To get a list of Availability Domains, use the `ListAvailabilityDomains` operation
        in the Identity and Access Management Service API.

        You may optionally specify a *display name* for the volume, which is simply a friendly name or
        description. It does not have to be unique, and you can change it. Avoid entering confidential information.
      operationId: CreateVolume
      parameters:
      - $ref: '#/parameters/RetryTokenHeader'
      - description: Request to create a new volume.
        in: body
        name: CreateVolumeDetails
        required: true
        schema:
          $ref: '#/definitions/CreateVolumeDetails'
      responses:
        200:
          description: The volume is being created.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/Volume'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: CreateVolume
      tags:
      - blockstorage
  /volumes/{volumeId}:
    delete:
      description: |
        Deletes the specified volume. The volume cannot have an active connection to an instance.
        To disconnect the volume from a connected instance, see
        [Disconnecting From a Volume](/Content/Block/Tasks/disconnectingfromavolume.htm).
        **Warning:** All data on the volume will be permanently lost when the volume is deleted.
      operationId: DeleteVolume
      parameters:
      - $ref: '#/parameters/VolumeIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The volume is being deleted.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteVolume
      tags:
      - blockstorage
    get:
      description: Gets information for the specified volume.
      operationId: GetVolume
      parameters:
      - $ref: '#/parameters/VolumeIdPathParam'
      responses:
        200:
          description: The volume's information has been retrieved.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/Volume'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetVolume
      tags:
      - blockstorage
    put:
      description: |
        Updates the specified volume's display name.
        Avoid entering confidential information.
      operationId: UpdateVolume
      parameters:
      - $ref: '#/parameters/VolumeIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Update volume's display name. Avoid entering confidential information.
        in: body
        name: UpdateVolumeDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateVolumeDetails'
      responses:
        200:
          description: The volume was updated.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
            etag:
              $ref: '#/x-descriptions/etag'
          schema:
            $ref: '#/definitions/Volume'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateVolume
      tags:
      - blockstorage
  /bootVolumes:
    get:
      description: |
        Lists the boot volumes in the specified compartment and Availability Domain.
      operationId: ListBootVolumes
      parameters:
      - $ref: '#/parameters/RequiredAvailabilityDomainQueryParam'
      - $ref: '#/parameters/CompartmentIdQueryParam'
      - $ref: '#/parameters/PaginationLimitQueryParam'
      - $ref: '#/parameters/PaginationTokenQueryParam'
      responses:
        200:
          description: The list is being retrieved.
          headers:
            opc-next-page:
              $ref: '#/x-descriptions/opc-next-page'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            items:
              $ref: '#/definitions/BootVolume'
            type: array
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: ListBootVolumes
      tags:
      - blockstorage
      x-obmcs-feature-id:
      - udx-117
  /bootVolumes/{bootVolumeId}:
    delete:
      description: |
        Deletes the specified boot volume. The volume cannot have an active connection to an instance.
        To disconnect the boot volume from a connected instance, see
        [Disconnecting From a Boot Volume](/Content/Block/Tasks/deletingbootvolume.htm).
        **Warning:** All data on the boot volume will be permanently lost when the boot volume is deleted.
      operationId: DeleteBootVolume
      parameters:
      - $ref: '#/parameters/BootVolumeIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      responses:
        204:
          description: The boot volume is being deleted.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        409:
          $ref: '#/responses/409'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: DeleteBootVolume
      tags:
      - blockstorage
      x-obmcs-feature-id:
      - udx-117
    get:
      description: Gets information for the specified boot volume.
      operationId: GetBootVolume
      parameters:
      - $ref: '#/parameters/BootVolumeIdPathParam'
      responses:
        200:
          description: The boot volume's information has been retrieved.
          headers:
            etag:
              $ref: '#/x-descriptions/etag'
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
          schema:
            $ref: '#/definitions/BootVolume'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: GetBootVolume
      tags:
      - blockstorage
      x-obmcs-feature-id:
      - udx-117
    put:
      description: Updates the specified boot volume's display name.
      operationId: UpdateBootVolume
      parameters:
      - $ref: '#/parameters/BootVolumeIdPathParam'
      - $ref: '#/parameters/IfMatchHeader'
      - description: Update boot volume's display name.
        in: body
        name: UpdateBootVolumeDetails
        required: true
        schema:
          $ref: '#/definitions/UpdateBootVolumeDetails'
      responses:
        200:
          description: The boot volume was updated.
          headers:
            opc-request-id:
              $ref: '#/x-descriptions/opc-request-id'
            etag:
              $ref: '#/x-descriptions/etag'
          schema:
            $ref: '#/definitions/BootVolume'
        400:
          $ref: '#/responses/400'
        401:
          $ref: '#/responses/401'
        404:
          $ref: '#/responses/404'
        412:
          $ref: '#/responses/412'
        500:
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
      summary: UpdateBootVolume
      tags:
      - blockstorage
      x-obmcs-feature-id:
      - udx-117
definitions:
  CreateVolumeBackupDetails:
    required:
      - volumeId
    properties:
      displayName:
        type: string
        description: |
          A user-friendly name for the volume backup. Does not have to be unique and it's changeable.
          Avoid entering confidential information.
        minLength: 1
        maxLength: 255
      volumeId:
        type: string
        description: The OCID of the volume that needs to be backed up.
        minLength: 1
        maxLength: 255
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
      type:
        type: string
        description: The type of backup to create. If omitted, defaults to INCREMENTAL.
        enum:
          - FULL
          - INCREMENTAL
  CreateVolumeDetails:
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of the volume.

          Example: `Uocm:PHX-AD-1`

        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment that contains the volume.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      volumeBackupId:
        description: |
          The OCID of the volume backup from which the data should be restored on the newly created volume.
          This field is deprecated. Use the sourceDetails field instead to specify the
          backup for the volume.
        maxLength: 255
        minLength: 1
        type: string
      sourceDetails:
        description: |
          Specifies the volume source details for a new Block volume. The volume source is either another Block volume in the same Availability Domain or a Block volume backup.
          This is an optional field. If not specified or set to null, the new Block volume will be empty.
          When specified, the new Block volume will contain data from the source volume or backup.
        $ref: '#/definitions/VolumeSourceDetails'
      sizeInMBs:
        description: |
          The size of the volume in MBs. The value must be a multiple of 1024.
          This field is deprecated. Use sizeInGBs instead.
        format: int64
        type: integer
      sizeInGBs:
        description: The size of the volume in GBs.
        format: int64
        type: integer
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
      backupPolicyId:
        description: |
          If provided, specifies the ID of the volume backup policy to assign to the newly
          created volume. If omitted, no policy will be assigned.
        maxLength: 255
        minLength: 1
        type: string
    required:
    - availabilityDomain
    - compartmentId
  VolumeSourceDetails:
    discriminator: type
    properties:
      type:
        type: string
    required:
      - type
  VolumeSourceFromVolumeDetails:
    description: Specifies the source volume.
    allOf:
    - $ref: '#/definitions/VolumeSourceDetails'
    - discriminator: 'volume'
      properties:
        id:
          description: The OCID of the volume.
          maxLength: 255
          minLength: 1
          type: string
      required:
      - id
  VolumeSourceFromVolumeBackupDetails:
    description: Specifies the volume backup.
    allOf:
    - $ref: '#/definitions/VolumeSourceDetails'
    - discriminator: 'volumeBackup'
      properties:
        id:
          description: The OCID of the volume backup.
          maxLength: 255
          minLength: 1
          type: string
      required:
      - id
  UpdateVolumeBackupDetails:
    properties:
      displayName:
        type: string
        description: |
          A friendly user-specified name for the volume backup.
          Avoid entering confidential information.
        minLength: 1
        maxLength: 255
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
  UpdateVolumeDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
  UpdateBootVolumeDetails:
    properties:
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
    x-obmcs-feature-id:
    - udx-117
  Volume:
    description: |
      A detachable block volume device that allows you to dynamically expand
      the storage capacity of an instance. For more information, see
      [Overview of Cloud Volume Storage](/Content/Block/Concepts/overview.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of the volume.

          Example: `Uocm:PHX-AD-1`

        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment that contains the volume.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The OCID of the volume.
        maxLength: 255
        minLength: 1
        type: string
      sourceDetails:
        description: |
          The volume source, either an existing volume in the same Availability Domain or a volume backup.
          If null, an empty volume is created.
        $ref: '#/definitions/VolumeSourceDetails'
      sizeInMBs:
        description: The size of the volume in MBs. This field is deprecated. Use sizeInGBs instead.
        format: int64
        type: integer
      sizeInGBs:
        description: The size of the volume in GBs.
        format: int64
        type: integer
      lifecycleState:
        description: The current state of a volume.
        enum:
        - PROVISIONING
        - RESTORING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        - FAULTY
        type: string
      isHydrated:
        description: Specifies whether the cloned volume's data has finished copying from the source volume or backup.
        type: boolean
      timeCreated:
        description: The date and time the volume was created. Format defined by RFC3339.
        format: date-time
        type: string
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
    required:
    - id
    - availabilityDomain
    - displayName
    - sizeInMBs
    - compartmentId
    - timeCreated
    - lifecycleState
  BootVolume:
    description: |
      A detachable boot volume device that contains the image used to boot an Compute instance. For more information, see
      [Overview of Boot Volumes](/Content/Block/Concepts/bootvolumes.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    properties:
      availabilityDomain:
        description: |
          The Availability Domain of the boot volume.

          Example: `Uocm:PHX-AD-1`

        maxLength: 255
        minLength: 1
        type: string
      compartmentId:
        description: The OCID of the compartment that contains the boot volume.
        maxLength: 255
        minLength: 1
        type: string
      displayName:
        description: |
          A user-friendly name. Does not have to be unique, and it's changeable.
          Avoid entering confidential information.
        maxLength: 255
        minLength: 1
        type: string
      id:
        description: The boot volume's Oracle ID (OCID).
        maxLength: 255
        minLength: 1
        type: string
      imageId:
        type: string
        minLength: 1
        maxLength: 255
        description: The image OCID used to create the boot volume.
      sizeInMBs:
        description: |
          The size of the volume in MBs. The value must be a multiple of 1024.
          This field is deprecated. Please use sizeInGBs.
        format: int64
        type: integer
      sizeInGBs:
        description: The size of the boot volume in GBs.
        format: int64
        type: integer
      lifecycleState:
        description: The current state of a boot volume.
        enum:
        - PROVISIONING
        - RESTORING
        - AVAILABLE
        - TERMINATING
        - TERMINATED
        - FAULTY
        type: string
      timeCreated:
        description: The date and time the boot volume was created. Format defined by RFC3339.
        format: date-time
        type: string
    required:
    - id
    - availabilityDomain
    - sizeInMBs
    - compartmentId
    - timeCreated
    - lifecycleState
    x-obmcs-feature-id:
    - udx-117
  VolumeBackup:
    description: |
      A point-in-time copy of a volume that can then be used to create a new block volume
      or recover a block volume. For more information, see
      [Overview of Cloud Volume Storage](/Content/Block/Concepts/overview.htm).

      To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,
      talk to an administrator. If you're an administrator who needs to write policies to give users access, see
      [Getting Started with Policies](/Content/Identity/Concepts/policygetstarted.htm).
    required:
      - id
      - type
      - displayName
      - compartmentId
      - timeCreated
      - lifecycleState
    properties:
      id:
        type: string
        description: The OCID of the volume backup.
        minLength: 1
        maxLength: 255
      volumeId:
        type: string
        description: The OCID of the volume.
        minLength: 1
        maxLength: 255
      displayName:
        type: string
        description: |
          A user-friendly name for the volume backup. Does not have to be unique and it's changeable.
          Avoid entering confidential information.
        minLength: 1
        maxLength: 255
      sizeInMBs:
        type: integer
        format: int64
        description: |
          The size of the volume in MBs. The value must be a multiple of 1024.
          This field is deprecated. Please use sizeInGBs.
        minimum: 1024
        maximum: 16777216
      sizeInGBs:
        type: integer
        format: int64
        description: |
          The size of the volume, in GBs.
        minimum: 1
        maximum: 16384
      uniqueSizeInMbs:
        type: integer
        format: int64
        description: |
          The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space
          consumed on the volume and whether the backup is full or incremental.
          This field is deprecated. Please use uniqueSizeInGBs.
        minimum: 0
        maximum: 16777216
      uniqueSizeInGBs:
        type: integer
        format: int64
        description: |
          The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space
          consumed on the volume and whether the backup is full or incremental.
        minimum: 0
        maximum: 16384
      compartmentId:
        type: string
        description: The OCID of the compartment that contains the volume backup.
        minLength: 1
        maxLength: 255
      timeCreated:
        type: string
        format: date-time
        description: |
          The date and time the volume backup was created. This is the time the actual point-in-time image
          of the volume data was taken. Format defined by RFC3339.
      timeRequestReceived:
        type: string
        format: date-time
        description: |
          The date and time the request to create the volume backup was received. Format defined by RFC3339.
      lifecycleState:
        type: string
        description: The current state of a volume backup.
        enum:
          - CREATING
          - AVAILABLE
          - TERMINATING
          - TERMINATED
          - FAULTY
          - REQUEST_RECEIVED
      sourceType:
        type: string
        description: Specifies whether the backup was created manually, or via scheduled backup policy.
        enum:
          - MANUAL
          - SCHEDULED
      expirationTime:
        type: string
        format: date-time
        description: |
          The date and time the volume backup will expire and be automatically deleted.
          Format defined by RFC3339. This parameter will always be present for backups that
          were created automatically by a scheduled-backup policy. For manually created backups,
          it will be absent, signifying that there is no expiration time and the backup will
          last forever until manually deleted.
      freeformTags:
        $ref: '#/x-descriptions/FreeformTags'
      definedTags:
        $ref: '#/x-descriptions/DefinedTags'
      type:
        type: string
        description: The type of a volume backup.
        enum:
          - FULL
          - INCREMENTAL
  VolumeBackupPolicy:
    description:
      A policy for automatically creating volume backups according to a recurring schedule. Has a
      set of one or more schedules that control when and how backups are created.
    required:
      - id
      - displayName
      - schedules
      - timeCreated
    properties:
      id:
        type: string
        description: The OCID of the volume backup policy.
        minLength: 1
        maxLength: 255
      displayName:
        type: string
        description: |
          A user-friendly name for the volume backup policy. Does not have to be unique and it's changeable.
          Avoid entering confidential information.
        minLength: 1
        maxLength: 255
      schedules:
        type: array
        description: The collection of schedules that this policy will apply.
        items:
          $ref: '#/definitions/VolumeBackupSchedule'
          minimum: 1
      timeCreated:
        type: string
        format: date-time
        description: |
          The date and time the volume backup policy was created. Format defined by RFC3339.
  VolumeBackupSchedule:
    description:
      Defines a chronological recurrence pattern for creating scheduled backups at a particular periodicity.
    required:
      - period
      - offsetSeconds
      - backupType
      - retentionSeconds
    properties:
      period:
        type: string
        description: How often the backup should occur.
        enum:
          - ONE_HOUR
          - ONE_DAY
          - ONE_WEEK
          - ONE_MONTH
          - ONE_YEAR
      offsetSeconds:
        type: integer
        description: The number of seconds (positive or negative) that the backup time should be shifted from the default interval boundaries specified by the period.
      backupType:
        type: string
        description: The type of backup to create.
        enum:
          - FULL
          - INCREMENTAL
      retentionSeconds:
        type: integer
        minimum: 3600
        description: How long, in seconds, backups created by this schedule should be kept until being automatically deleted.
  VolumeBackupPolicyAssignment:
    description:
      Specifies that a particular volume backup policy is assigned to an asset such as a volume.
    required:
      - id
      - policyId
      - assetId
      - timeCreated
    properties:
      id:
        type: string
        description: The OCID of the volume backup policy assignment.
        minLength: 1
        maxLength: 255
      policyId:
        type: string
        description: The OCID of the volume backup policy that has been assigned to an asset.
        minLength: 1
        maxLength: 255
      assetId:
        type: string
        description: The OCID of the asset (e.g. a volume) to which the policy has been assigned.
        minLength: 1
        maxLength: 255
      timeCreated:
        type: string
        format: date-time
        description: |
          The date and time the volume backup policy assignment was created. Format defined by RFC3339.
  CreateVolumeBackupPolicyAssignmentDetails:
    required:
      - policyId
      - assetId
    properties:
      policyId:
        type: string
        description: The OCID of the volume backup policy to assign to an asset.
        minLength: 1
        maxLength: 255
      assetId:
        type: string
        description: The OCID of the asset (e.g. a volume) to which to assign the policy.
        minLength: 1
        maxLength: 255
parameters:
  AssetIdQueryParam:
    description: The OCID of an asset (e.g. a volume).
    in: query
    name: assetId
    required: true
    type: string
  VolumeBackupIdPathParam:
    name: volumeBackupId
    in: path
    required: true
    type: string
    description: The OCID of the volume backup.
  VolumeBackupPolicyIdPathParam:
    description: The OCID of the volume backup policy.
    in: path
    name: policyId
    required: true
    type: string
  VolumeBackupPolicyAssignmentIdPathParam:
    description: The OCID of the volume backup policy assignment.
    in: path
    name: policyAssignmentId
    required: true
    type: string
  VolumeIdPathParam:
    description: The OCID of the volume.
    in: path
    name: volumeId
    required: true
    type: string
  BootVolumeIdPathParam:
    description: The OCID of the boot volume.
    in: path
    name: bootVolumeId
    required: true
    type: string
    x-obmcs-feature-id:
    - udx-117
  VolumeIdQueryParam:
    description: The OCID of the volume.
    in: query
    name: volumeId
    type: string

# spec-conditionals-preprocessor-plugin: Enabled conditional groups:
# spec-conditionals-preprocessor-plugin:
# spec-conditionals-preprocessor-plugin: Filtered out conditional groups:
