swagger: '2.0'
info:
  version: '20180115'
  title: Public DNS Service
  description: API for managing DNS zones, records, and policies.
  license:
    name: Oracle Corporation
basePath: /20180115
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /zones:
    get:
      operationId: ListZones
      x-related-resource: '#/definitions/Zones'
      description: |
        Gets a list of all zones in the specified compartment. The collection
        can be filtered by name, time created, and zone type.
      tags:
        - dns
      parameters:
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/CompartmentIdQueryParam'
        - $ref: '#/parameters/ZoneNameQueryParam'
        - $ref: '#/parameters/ZoneNameContainsQueryParam'
        - $ref: '#/parameters/ZoneTypeQueryParam'
        - $ref: '#/parameters/TimeCreatedGreaterThanOrEqualToQueryParam'
        - $ref: '#/parameters/TimeCreatedLessThanQueryParam'
        - $ref: '#/parameters/ZonesSortByQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/LifecycleStateQueryParam'
      responses:
        '200':
          $ref: '#/responses/ZonesResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    post:
      operationId: CreateZone
      description: |
        Creates a new zone in the specified compartment. The `compartmentId`
        query parameter is required if the `Content-Type` header for the
        request is `text/dns`.
      tags:
        - dns
      consumes:
        - application/json
        - text/dns
      parameters:
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - description: Details for creating a new zone.
          in: body
          name: CreateZoneDetails
          required: true
          schema:
            $ref: '#/definitions/CreateZoneDetails'
      responses:
        '201':
          $ref: '#/responses/ZoneResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /zones/{zoneNameOrId}:
    delete:
      operationId: DeleteZone
      description: |
        Deletes the specified zone. A `204` response indicates that zone has been
        successfully deleted.
      tags:
        - dns
      consumes: []
      produces: []
      parameters:
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfUnmodifiedSinceHeader'
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
      responses:
        '204':
          $ref: '#/responses/EmptyResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    get:
      operationId: GetZone
      x-related-resource: '#/definitions/Zones'
      description: |
        Gets information about the specified zone, including its creation date,
        zone type, and serial.
      tags:
        - dns
      parameters:
        - $ref: '#/parameters/IfNoneMatchHeader'
        - $ref: '#/parameters/IfModifiedSinceHeader'
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
      responses:
        '200':
          $ref: '#/responses/ZoneResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    put:
      operationId: UpdateZone
      description: |
        Updates the specified secondary zone with your new external master
        server information. For more information about secondary zone, see
        [Manage DNS Service Zone](https://docs.us-phoenix-1.oraclecloud.com/Content/DNS/Tasks/managingdnszones.htm).
      tags:
        - dns
      parameters:
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfUnmodifiedSinceHeader'
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - description: New data for the zone.
          in: body
          name: UpdateZoneDetails
          required: true
          schema:
            $ref: '#/definitions/UpdateZoneDetails'
      responses:
        '200':
          $ref: '#/responses/ZoneResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '412':
          $ref: '#/responses/412'
        '422':
          $ref: '#/responses/422'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /zones/{zoneNameOrId}/records:
    get:
      operationId: GetZoneRecords
      x-related-resource: '#/definitions/Records'
      description: |
        Gets all records in the specified zone. The results are
        sorted by `domain` in alphabetical order by default. For more
        information about records, please see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
      tags:
        - dns
      parameters:
        - $ref: '#/parameters/IfNoneMatchHeader'
        - $ref: '#/parameters/IfModifiedSinceHeader'
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/ZoneVersionQueryParam'
        - $ref: '#/parameters/DomainNameQueryParam'
        - $ref: '#/parameters/DomainNameContainsQueryParam'
        - $ref: '#/parameters/RTypeQueryParam'
        - $ref: '#/parameters/ZoneRecordsSortByQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
      responses:
        '200':
          $ref: '#/responses/RecordsResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    patch:
      operationId: PatchZoneRecords
      x-related-resource: '#/definitions/Records'
      description: |
        Updates a collection of records in the specified zone. You can update
        one record or all records for the specified zone depending on the
        changes provided in the request body. You can also add or remove records
        using this function.
      tags:
        - dns
      parameters:
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfUnmodifiedSinceHeader'
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - name: PatchZoneRecordsDetails
          description: |
            The operations describing how to modify the collection of records.
          in: body
          required: true
          schema:
            $ref: '#/definitions/PatchZoneRecordsDetails'
      responses:
        '200':
          $ref: '#/responses/RecordsResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    put:
      operationId: UpdateZoneRecords
      x-related-resource: '#/definitions/Records'
      description: |
        Replaces records in the specified zone with the records specified in the
        request body. If a specified record does not exist, it will be created.
        If the record exists, then it will be updated to represent the record in
        the body of the request. If a record in the zone does not exist in the
        request body, the record will be removed from the zone.
      tags:
        - dns
      parameters:
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfUnmodifiedSinceHeader'
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - description: A full list of records for the zone.
          in: body
          name: UpdateZoneRecordsDetails
          required: true
          schema:
            $ref: '#/definitions/UpdateZoneRecordsDetails'
      responses:
        '200':
          $ref: '#/responses/RecordsResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /zones/{zoneNameOrId}/records/{domain}:
    delete:
      operationId: DeleteDomainRecords
      x-related-resource: '#/definitions/Records'
      description: Deletes all records at the specified zone and domain.
      tags:
        - dns
      consumes: []
      produces: []
      parameters:
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfUnmodifiedSinceHeader'
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/DomainNamePathParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
      responses:
        '204':
          $ref: '#/responses/EmptyResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    get:
      operationId: GetDomainRecords
      x-related-resource: '#/definitions/Records'
      description: |
        Gets a list of all records at the specified zone and domain.
        The results are sorted by `rtype` in alphabetical order by default. You
        can optionally filter and/or sort the results using the listed parameters.
      tags:
        - dns
      parameters:
        - $ref: '#/parameters/IfNoneMatchHeader'
        - $ref: '#/parameters/IfModifiedSinceHeader'
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/DomainNamePathParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/ZoneVersionQueryParam'
        - $ref: '#/parameters/RTypeQueryParam'
        - $ref: '#/parameters/DomainRecordsSortByQueryParam'
        - $ref: '#/parameters/SortOrderQueryParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
      responses:
        '200':
          $ref: '#/responses/RecordsResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    patch:
      operationId: PatchDomainRecords
      x-related-resource: '#/definitions/Records'
      description: Replaces records in the specified zone at a domain. You can update
        one record or all records for the specified zone depending on the changes
        provided in the request body. You can also add or remove records using this
        function.
      tags:
        - dns
      parameters:
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfUnmodifiedSinceHeader'
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/DomainNamePathParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - description: Operations describing how to modify the collection of records.
          in: body
          name: PatchDomainRecordsDetails
          required: true
          schema:
            $ref: '#/definitions/PatchDomainRecordsDetails'
      responses:
        '200':
          $ref: '#/responses/RecordsResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    put:
      operationId: UpdateDomainRecords
      x-related-resource: '#/definitions/Records'
      description: |
        Replaces records in the specified zone at a domain with the records
        specified in the request body. If a specified record does not exist,
        it will be created. If the record exists, then it will be updated to
        represent the record in the body of the request. If a record in the zone
        does not exist in the request body, the record will be removed from the
        zone.
      tags:
        - dns
      parameters:
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfUnmodifiedSinceHeader'
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/DomainNamePathParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - description: A full list of records for the domain.
          in: body
          name: UpdateDomainRecordsDetails
          required: true
          schema:
            $ref: '#/definitions/UpdateDomainRecordsDetails'
      responses:
        '200':
          $ref: '#/responses/RecordsResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
  /zones/{zoneNameOrId}/records/{domain}/{rtype}:
    delete:
      operationId: DeleteRRSet
      description: |
        Deletes all records in the specified RRSet.
      tags:
        - dns
      consumes: []
      produces: []
      parameters:
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/DomainNamePathParam'
        - $ref: '#/parameters/RTypePathParam'
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfUnmodifiedSinceHeader'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
      responses:
        '204':
          $ref: '#/responses/EmptyResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    get:
      operationId: GetRRSet
      x-related-resource: '#/definitions/RRSet'
      description: |
        Gets a list of all records in the specified RRSet. The results are
        sorted by `recordHash` by default.
      tags:
        - dns
      parameters:
        - $ref: '#/parameters/IfNoneMatchHeader'
        - $ref: '#/parameters/IfModifiedSinceHeader'
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/DomainNamePathParam'
        - $ref: '#/parameters/RTypePathParam'
        - $ref: '#/parameters/PaginationLimitQueryParam'
        - $ref: '#/parameters/PaginationTokenQueryParam'
        - $ref: '#/parameters/ZoneVersionQueryParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
      responses:
        '200':
          $ref: '#/responses/RRSetResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    patch:
      operationId: PatchRRSet
      x-related-resource: '#/definitions/RRSet'
      description: Updates records in the specified RRSet.
      tags:
        - dns
      parameters:
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfUnmodifiedSinceHeader'
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/DomainNamePathParam'
        - $ref: '#/parameters/RTypePathParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - description: Operations describing how to modify the collection of records.
          in: body
          name: PatchRRSetDetails
          required: true
          schema:
            $ref: '#/definitions/PatchRRSetDetails'
      responses:
        '200':
          $ref: '#/responses/RecordsResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
    put:
      operationId: UpdateRRSet
      description: Replaces records in the specified RRSet.
      tags:
        - dns
      parameters:
        - $ref: '#/parameters/IfMatchHeader'
        - $ref: '#/parameters/IfUnmodifiedSinceHeader'
        - $ref: '#/parameters/ZoneNameOrIdPathParam'
        - $ref: '#/parameters/DomainNamePathParam'
        - $ref: '#/parameters/RTypePathParam'
        - $ref: '#/parameters/CompartmentIdOptionalQueryParam'
        - description: A full list of records for the RRSet.
          in: body
          name: UpdateRRSetDetails
          required: true
          schema:
            $ref: '#/definitions/UpdateRRSetDetails'
      responses:
        '200':
          $ref: '#/responses/RecordsResponse'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
        default:
          $ref: '#/responses/DefaultError'
definitions:
  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: string
        description: |
          A short error code that defines the error, meant for programmatic parsing. See
          [API Errors](/Content/API/References/apierrors.htm).
      message:
        type: string
        description: A human-readable error string.
  TSIG:
    description: A [TSIG](https://tools.ietf.org/html/rfc2845) key.
    type: object
    required:
      - name
      - secret
      - algorithm
    properties:
      name:
        type: string
        description: A domain name identifying the key for a given pair of hosts.
        minLength: 1
        maxLength: 254
        pattern: ^\\.$|^(?=([^\\\\]|\\\\([^0-9]|[0-9]{3})){1,253}\\.?$)(?=.*[^\\\\0-9.])(?=.*\\.)(([a-zA-Z0-9_-]|\\\\([\\x21-\\x2F\\x3A-\\x7E]|[01][0-9][0-9]|2[0-4][0-9]|25[0-5])){1,63}(\\.|$))+$
      secret:
        type: string
        description: A base64 string encoding the binary shared secret.
        minLength: 1
        pattern: ^(([\\x20\\t\\r\\n\\f]*[A-Za-z0-9+/]){4})*(([\\x20\\t\\r\\n\\f]*[A-Za-z0-9+/]){2}==|([\\x20\\t\\r\\n\\f]*[A-Za-z0-9+/]){3}=)?[\\x20\\t\\r\\n\\f]*$
      algorithm:
        type: string
        description: |
          TSIG Algorithms are encoded as domain names, but most consist of only one
          non-empty label, which is not required to be explicitly absolute. For a
          full list of TSIG algorithms, see [Secret Key Transaction Authentication for DNS (TSIG) Algorithm Names](http://www.iana.org/assignments/tsig-algorithm-names/tsig-algorithm-names.xhtml#tsig-algorithm-names-1)
        minLength: 1
        maxLength: 254
        pattern: ^\\.$|^(?=([^\\\\]|\\\\([^0-9]|[0-9]{3})){1,253}\\.?$)(?=.*[^\\\\0-9.])(([a-zA-Z0-9_-]|\\\\([\\x21-\\x2F\\x3A-\\x7E]|[01][0-9][0-9]|2[0-4][0-9]|25[0-5])){1,63}(\\.|$))+$
  ExternalMaster:
    description: An external master name server used as the source of zone data.
    type: object
    required:
      - address
    properties:
      address:
        description: The server's IP address (IPv4 or IPv6).
        type: string
      port:
        type: integer
        description: The server's port.
        default: 53
        minimum: 0
        maximum: 65535
      tsig:
        $ref: '#/definitions/TSIG'
  RRSet:
    description: |
      A collection of DNS records of the same domain and type. For more
      information about record types, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Record'
  Record:
    description: A DNS resource record. For more information about DNS records, see
      [RFC 1034](https://tools.ietf.org/html/rfc1034#section-3.6).
    type: object
    properties:
      domain:
        description: |
          The fully qualified domain name where the record can be located.
        maxLength: 254
        minLength: 1
        type: string
      recordHash:
        description: |
          A unique identifier for the record within its zone.
        type: string
      isProtected:
        description: |
          A Boolean flag indicating whether or not parts of the record
          are unable to be explicitly managed.
        type: boolean
      rdata:
        description: |
          The record's data, as whitespace-delimited tokens in
          type-specific presentation format.
        type: string
      rrsetVersion:
        description: |
          The latest version of the record's zone in which its RRSet differs
          from the preceding version.
        type: string
      rtype:
        description: |
          The canonical name for the record's type, such as A or CNAME. For more
          information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
        type: string
      ttl:
        description: The Time To Live for the record, in seconds.
        format: int32
        maximum: 2147483647
        minimum: 0
        type: integer
  RecordCollection:
    description: A collection of DNS resource records.
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Record'
  RecordDetails:
    description: A DNS resource record. For more information about records, see [RFC
      1034](https://tools.ietf.org/html/rfc1034#section-3.6).
    type: object
    required:
      - domain
      - ttl
      - rtype
      - rdata
    properties:
      domain:
        description: |
          The fully qualified domain name where the record can be located.
        maxLength: 254
        minLength: 1
        type: string
      recordHash:
        description: |
          A unique identifier for the record within its zone.
        type: string
      isProtected:
        description: |
          A Boolean flag indicating whether or not parts of the record
          are unable to be explicitly managed.
        type: boolean
      rdata:
        description: |
          The record's data, as whitespace-delimited tokens in
          type-specific presentation format.
        type: string
      rrsetVersion:
        description: |
          The latest version of the record's zone in which its RRSet differs
          from the preceding version.
        type: string
      rtype:
        description: |
          The canonical name for the record's type, such as A or CNAME. For more
          information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
        type: string
      ttl:
        description: The Time To Live for the record, in seconds.
        format: int32
        maximum: 2147483647
        minimum: 0
        type: integer
  UpdateZoneRecordsDetails:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/RecordDetails'
  UpdateDomainRecordsDetails:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/RecordDetails'
  UpdateRRSetDetails:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/RecordDetails'
  RecordOperation:
    description: |
      An extension of the existing record resource, describing either a
      precondition, an add, or a remove. Preconditions check all fields,
      including read-only data like `recordHash` and `rrsetVersion`.
    type: object
    properties:
      domain:
        description: |
          The fully qualified domain name where the record can be located.
        maxLength: 254
        minLength: 1
        type: string
      recordHash:
        description: |
          A unique identifier for the record within its zone.
        type: string
      isProtected:
        description: |
          A Boolean flag indicating whether or not parts of the record
          are unable to be explicitly managed.
        type: boolean
      rdata:
        description: |
          The record's data, as whitespace-delimited tokens in
          type-specific presentation format.
        type: string
      rrsetVersion:
        description: |
          The latest version of the record's zone in which its RRSet differs
          from the preceding version.
        type: string
      rtype:
        description: |
          The canonical name for the record's type, such as A or CNAME. For more
          information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
        type: string
      ttl:
        description: The Time To Live for the record, in seconds.
        format: int32
        maximum: 2147483647
        minimum: 0
        type: integer
      operation:
        default: ADD
        description: |
          A description of how a record relates to a PATCH operation.

          - `REQUIRE` indicates a precondition that record data **must** already exist.
          - `PROHIBIT` indicates a precondition that record data **must not** already exist.
          - `ADD` indicates that record data **must** exist after successful application.
          - `REMOVE` indicates that record data **must not** exist after successful application.

            **Note:** `ADD` and `REMOVE` operations can succeed even if
            they require no changes when applied, such as when the described
            records are already present or absent.

            **Note:** `ADD` and `REMOVE` operations can describe changes for
            more than one record.

            **Example:** `{ "domain": "www.example.com", "rtype": "AAAA", "ttl": 60 }`
            specifies a new TTL for every record in the www.example.com AAAA RRSet.
        enum:
          - REQUIRE
          - PROHIBIT
          - ADD
          - REMOVE
        type: string
  PatchZoneRecordsDetails:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/RecordOperation'
  PatchDomainRecordsDetails:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/RecordOperation'
  PatchRRSetDetails:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/RecordOperation'
  ZoneSummary:
    description: A DNS zone.
    type: object
    properties:
      name:
        description: The name of the zone.
        maxLength: 254
        minLength: 1
        type: string
      zoneType:
        description: |
          The type of the zone. Must be either `PRIMARY` or `SECONDARY`.
        enum:
          - PRIMARY
          - SECONDARY
        type: string
      compartmentId:
        description: The OCID of the compartment containing the zone.
        maxLength: 255
        minLength: 1
        type: string
      self:
        description: The canonical absolute URL of the resource.
        type: string
      id:
        description: The OCID of the zone.
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: |
          The date and time the image was created in "YYYY-MM-ddThh:mmZ" format
          with a Z offset, as defined by RFC 3339.

          **Example:** `2016-07-22T17:23:59:60Z`
        format: date-time
        type: string
      version:
        description: |
          Version is the never-repeating, totally-orderable, version of the
          zone, from which the serial field of the zone's SOA record is
          derived.
        type: string
      serial:
        description: |
          The current serial of the zone. As seen in the zone's SOA record.
        format: int64
        type: integer
  Zone:
    description: A DNS zone.
    type: object
    properties:
      name:
        description: The name of the zone.
        maxLength: 254
        minLength: 1
        type: string
      zoneType:
        description: |
          The type of the zone. Must be either `PRIMARY` or `SECONDARY`.
        enum:
          - PRIMARY
          - SECONDARY
        type: string
      compartmentId:
        description: The OCID of the compartment containing the zone.
        maxLength: 255
        minLength: 1
        type: string
      externalMasters:
        description: External master servers for the zone.
        type: array
        items:
          $ref: '#/definitions/ExternalMaster'
      self:
        description: The canonical absolute URL of the resource.
        type: string
      id:
        description: The OCID of the zone.
        maxLength: 255
        minLength: 1
        type: string
      timeCreated:
        description: |
          The date and time the image was created in "YYYY-MM-ddThh:mmZ" format
          with a Z offset, as defined by RFC 3339.

          **Example:** `2016-07-22T17:23:59:60Z`
        format: date-time
        type: string
      version:
        description: |
          Version is the never-repeating, totally-orderable, version of the
          zone, from which the serial field of the zone's SOA record is
          derived.
        type: string
      serial:
        description: |
          The current serial of the zone. As seen in the zone's SOA record.
        format: int64
        type: integer
      lifecycleState:
        description: The current state of the zone resource.
        type: string
        enum:
          - ACTIVE
          - CREATING
          - DELETED
          - DELETING
          - FAILED
  CreateZoneDetails:
    description: |
      The body for defining a new zone.
    type: object
    properties:
      name:
        description: The name of the zone.
        maxLength: 254
        minLength: 1
        type: string
      zoneType:
        description: |
          The type of the zone. Must be either `PRIMARY` or `SECONDARY`.
        enum:
          - PRIMARY
          - SECONDARY
        type: string
      compartmentId:
        description: The OCID of the compartment containing the zone.
        maxLength: 255
        minLength: 1
        type: string
      externalMasters:
        description: External master servers for the zone.
        type: array
        items:
          $ref: '#/definitions/ExternalMaster'
    required:
      - name
      - zoneType
      - compartmentId
  UpdateZoneDetails:
    description: The body for updating a zone.
    type: object
    properties:
      externalMasters:
        description: External master servers for the zone.
        type: array
        items:
          $ref: '#/definitions/ExternalMaster'
  SortOrder:
    description: |
      The order to sort the resources.
    type: string
    enum:
      - ASC
      - DESC
parameters:
  IfNoneMatchHeader:
    description: |
      The `If-None-Match` header field makes the request method conditional on
      the absence of any current representation of the target resource, when
      the field-value is `*`, or having a selected representation with an
      entity-tag that does not match any of those listed in the field-value.
    in: header
    name: If-None-Match
    type: string
  IfModifiedSinceHeader:
    description: |
      The `If-Modified-Since` header field makes a GET or HEAD request method
      conditional on the selected representation's modification date being more
      recent than the date provided in the field-value.  Transfer of the
      selected representation's data is avoided if that data has not changed.
    in: header
    name: If-Modified-Since
    type: string
  IfMatchHeader:
    description: |
      The `If-Match` header field makes the request method conditional on the
      existence of at least one current representation of the target resource,
      when the field-value is `*`, or having a current representation of the
      target resource that has an entity-tag matching a member of the list of
      entity-tags provided in the field-value.
    in: header
    name: If-Match
    type: string
  IfUnmodifiedSinceHeader:
    description: |
      The `If-Unmodified-Since` header field makes the request method
      conditional on the selected representation's last modification date being
      earlier than or equal to the date provided in the field-value.  This
      field accomplishes the same purpose as If-Match for cases where the user
      agent does not have an entity-tag for the representation.
    in: header
    name: If-Unmodified-Since
    type: string
  ZoneNameOrIdPathParam:
    description: The name or OCID of the target zone.
    in: path
    name: zoneNameOrId
    type: string
    required: true
  DomainNamePathParam:
    description: The target fully-qualified domain name (FQDN) within the target zone.
    in: path
    name: domain
    type: string
    required: true
  RTypePathParam:
    description: The type of the target RRSet within the target zone.
    in: path
    name: rtype
    type: string
    required: true
  CompartmentIdQueryParam:
    description: The OCID of the compartment the resource belongs to.
    in: query
    name: compartmentId
    type: string
    minLength: 1
    maxLength: 255
    required: true
  CompartmentIdOptionalQueryParam:
    description: The OCID of the compartment the resource belongs to.
    in: query
    name: compartmentId
    type: string
    minLength: 1
    maxLength: 255
    required: false
  TimeCreatedGreaterThanOrEqualToQueryParam:
    description: |
      An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states
      all returned resources were created on or after the indicated time.
    in: query
    name: timeCreatedGreaterThanOrEqualTo
    type: string
    format: date-time
  TimeCreatedLessThanQueryParam:
    description: |
      An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states
      all returned resources were created before the indicated time.
    in: query
    name: timeCreatedLessThan
    type: string
    format: date-time
  PaginationLimitQueryParam:
    description: |
      The maximum number of items to return in a page of the collection.
    in: query
    name: limit
    type: integer
    format: int64
    minimum: 1
    maximum: 100
    default: 50
  ZoneNameContainsQueryParam:
    description: |
      Search by zone name.
      Will match any zone whose name (case-insensitive) contains the provided value.
    in: query
    name: nameContains
    type: string
  ZoneNameQueryParam:
    description: |
      A case-sensitive filter for zone names.
      Will match any zone with a name that equals the provided value.
    in: query
    name: name
    type: string
  ZoneTypeQueryParam:
    description: |
      Search by zone type, `PRIMARY` or `SECONDARY`.
      Will match any zone whose type equals the provided value.
    name: zoneType
    in: query
    type: string
    enum:
      - PRIMARY
      - SECONDARY
  DomainNameContainsQueryParam:
    description: |
      Search by domain.
      Will match any record whose domain (case-insensitive) contains the provided value.
    in: query
    name: domainContains
    type: string
  DomainNameQueryParam:
    description: |
      Search by domain.
      Will match any record whose domain (case-insensitive) equals the provided value.
    in: query
    name: domain
    type: string
  RTypeQueryParam:
    description: |
      Search by record type.
      Will match any record whose [type](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4) (case-insensitive) equals the provided value.
    in: query
    name: rtype
    type: string
  ZonesSortByQueryParam:
    description: The field by which to sort zones.
    in: query
    name: sortBy
    type: string
    enum:
      - name
      - zoneType
      - timeCreated
    default: timeCreated
  PaginationTokenQueryParam:
    description: |
      The value of the `opc-next-page` response header from the previous "List" call.
    in: query
    name: page
    type: string
    minLength: 1
    maxLength: 512
  ZoneRecordsSortByQueryParam:
    description: The field by which to sort records.
    in: query
    name: sortBy
    type: string
    enum:
      - domain
      - rtype
      - ttl
    default: domain
  DomainRecordsSortByQueryParam:
    description: The field by which to sort records.
    in: query
    name: sortBy
    type: string
    enum:
      - rtype
      - ttl
    default: rtype
  SortOrderQueryParam:
    description: |
      The order to sort the resources.
    in: query
    name: sortOrder
    type: string
    enum:
      - ASC
      - DESC
    x-obmcs-top-level-enum: '#/definitions/SortOrder'
  ZoneVersionQueryParam:
    description: |
      The version of the zone for which data is requested.
    in: query
    name: zoneVersion
    type: string
  LifecycleStateQueryParam:
    description: The state of a resource.
    in: query
    name: lifecycleState
    type: string
    enum:
      - ACTIVE
      - CREATING
      - DELETED
      - DELETING
      - FAILED
responses:
  EmptyResponse:
    description: An empty HTTP response.
    headers:
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need
          to contact Oracle about a particular request, please provide
          the request ID.
  ZonesResponse:
    description: A response containing a list of zone objects.
    schema:
      type: array
      items:
        $ref: '#/definitions/ZoneSummary'
    headers:
      opc-next-page:
        type: string
        description: |
          For pagination of a list of items. When paging through a list, if
          this header appears in the response, then a partial list might have
          been returned. Include this value as the `page` parameter for the
          subsequent GET request to get the next batch of items.
      opc-total-items:
        type: integer
        description: The total number of items that match the query.
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need to
          contact Oracle about a particular request, please provide the request
          ID.
  ZoneResponse:
    description: A response containing a single zone object.
    headers:
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need to
          contact Oracle about a particular request, please provide the request ID.
      ETag:
        description: |
          The current version of the zone, ending with a
          representation-specific suffix. This value may be used in If-Match
          and If-None-Match headers for later requests of the same resource.
        type: string
    schema:
      $ref: '#/definitions/Zone'
  RecordsResponse:
    description: A collection of DNS resource record objects.
    schema:
      $ref: '#/definitions/RecordCollection'
    headers:
      opc-next-page:
        type: string
        description: |
          For pagination of a list of items. When paging through a list, if
          this header appears in the response, then a partial list might have
          been returned. Include this value as the `page` parameter for the
          subsequent GET request to get the next batch of items.
      opc-total-items:
        type: integer
        description: The total number of items that match the query.
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need
          to contact Oracle about a particular request, please provide
          the request ID.
      ETag:
        description: |
          The current version of the record collection, ending with a
          representation-specific suffix. This value may be used in If-Match
          and If-None-Match headers for later requests of the same resource.
        type: string
  RRSetResponse:
    description: A collection of DNS resource record objects in a single RRSet.
    schema:
      $ref: '#/definitions/RRSet'
    headers:
      opc-next-page:
        type: string
        description: |
          For pagination of a list of items. When paging through a list, if
          this header appears in the response, then a partial list might have
          been returned. Include this value as the `page` parameter for the
          subsequent GET request to get the next batch of items.
      opc-total-items:
        type: integer
        description: The total number of items that match the query.
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need
          to contact Oracle about a particular request, please provide
          the request ID.
      ETag:
        description: |
          The current version of the record collection, ending with a
          representation-specific suffix. This value may be used in If-Match
          and If-None-Match headers for later requests of the same resource.
        type: string
  DefaultError:
    description: |
      An error has occurred.
    headers:
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
    schema:
      $ref: '#/definitions/Error'
  '400':
    description: Bad Request
    headers:
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
    schema:
      $ref: '#/definitions/Error'
  '401':
    description: Unauthorized
    headers:
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
    schema:
      $ref: '#/definitions/Error'
  '404':
    description: Forbidden or Not Found
    headers:
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
    schema:
      $ref: '#/definitions/Error'
  '409':
    description: Conflict
    headers:
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
    schema:
      $ref: '#/definitions/Error'
  '412':
    description: Precondition Failed
    headers:
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
    schema:
      $ref: '#/definitions/Error'
  '422':
    description: Unprocessable Entity
    headers:
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
    schema:
      $ref: '#/definitions/Error'
  '500':
    description: Internal Server Error
    headers:
      opc-request-id:
        type: string
        description: |
          Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
          particular request, please provide the request ID.
    schema:
      $ref: '#/definitions/Error'

# spec-conditionals-preprocessor-plugin: Enabled conditional groups:
# spec-conditionals-preprocessor-plugin:
# spec-conditionals-preprocessor-plugin: Filtered out conditional groups:
